// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file injective/exchange/v2/tx.proto (package injective.exchange.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgActivateStakeGrant, MsgActivateStakeGrantResponse, MsgAdminUpdateBinaryOptionsMarket, MsgAdminUpdateBinaryOptionsMarketResponse, MsgAtomicMarketOrderFeeMultiplierSchedule, MsgAtomicMarketOrderFeeMultiplierScheduleResponse, MsgAuthorizeStakeGrants, MsgAuthorizeStakeGrantsResponse, MsgBatchCancelBinaryOptionsOrders, MsgBatchCancelBinaryOptionsOrdersResponse, MsgBatchCancelDerivativeOrders, MsgBatchCancelDerivativeOrdersResponse, MsgBatchCancelSpotOrders, MsgBatchCancelSpotOrdersResponse, MsgBatchCommunityPoolSpend, MsgBatchCommunityPoolSpendResponse, MsgBatchCreateDerivativeLimitOrders, MsgBatchCreateDerivativeLimitOrdersResponse, MsgBatchCreateSpotLimitOrders, MsgBatchCreateSpotLimitOrdersResponse, MsgBatchExchangeModification, MsgBatchExchangeModificationResponse, MsgBatchUpdateOrders, MsgBatchUpdateOrdersResponse, MsgBinaryOptionsMarketLaunch, MsgBinaryOptionsMarketLaunchResponse, MsgBinaryOptionsMarketParamUpdate, MsgBinaryOptionsMarketParamUpdateResponse, MsgCancelBinaryOptionsOrder, MsgCancelBinaryOptionsOrderResponse, MsgCancelDerivativeOrder, MsgCancelDerivativeOrderResponse, MsgCancelSpotOrder, MsgCancelSpotOrderResponse, MsgCreateBinaryOptionsLimitOrder, MsgCreateBinaryOptionsLimitOrderResponse, MsgCreateBinaryOptionsMarketOrder, MsgCreateBinaryOptionsMarketOrderResponse, MsgCreateDerivativeLimitOrder, MsgCreateDerivativeLimitOrderResponse, MsgCreateDerivativeMarketOrder, MsgCreateDerivativeMarketOrderResponse, MsgCreateSpotLimitOrder, MsgCreateSpotLimitOrderResponse, MsgCreateSpotMarketOrder, MsgCreateSpotMarketOrderResponse, MsgDecreasePositionMargin, MsgDecreasePositionMarginResponse, MsgDeposit, MsgDepositResponse, MsgDerivativeMarketParamUpdate, MsgDerivativeMarketParamUpdateResponse, MsgEmergencySettleMarket, MsgEmergencySettleMarketResponse, MsgExchangeEnable, MsgExchangeEnableResponse, MsgExpiryFuturesMarketLaunch, MsgExpiryFuturesMarketLaunchResponse, MsgExternalTransfer, MsgExternalTransferResponse, MsgFeeDiscount, MsgFeeDiscountResponse, MsgIncreasePositionMargin, MsgIncreasePositionMarginResponse, MsgInstantBinaryOptionsMarketLaunch, MsgInstantBinaryOptionsMarketLaunchResponse, MsgInstantExpiryFuturesMarketLaunch, MsgInstantExpiryFuturesMarketLaunchResponse, MsgInstantPerpetualMarketLaunch, MsgInstantPerpetualMarketLaunchResponse, MsgInstantSpotMarketLaunch, MsgInstantSpotMarketLaunchResponse, MsgLiquidatePosition, MsgLiquidatePositionResponse, MsgMarketForcedSettlement, MsgMarketForcedSettlementResponse, MsgPerpetualMarketLaunch, MsgPerpetualMarketLaunchResponse, MsgPrivilegedExecuteContract, MsgPrivilegedExecuteContractResponse, MsgRewardsOptOut, MsgRewardsOptOutResponse, MsgSetDelegationTransferReceivers, MsgSetDelegationTransferReceiversResponse, MsgSpotMarketLaunch, MsgSpotMarketLaunchResponse, MsgSpotMarketParamUpdate, MsgSpotMarketParamUpdateResponse, MsgSubaccountTransfer, MsgSubaccountTransferResponse, MsgTradingRewardCampaignLaunch, MsgTradingRewardCampaignLaunchResponse, MsgTradingRewardCampaignUpdate, MsgTradingRewardCampaignUpdateResponse, MsgTradingRewardPendingPointsUpdate, MsgTradingRewardPendingPointsUpdateResponse, MsgUpdateDerivativeMarket, MsgUpdateDerivativeMarketResponse, MsgUpdateParams, MsgUpdateParamsResponse, MsgUpdateSpotMarket, MsgUpdateSpotMarketResponse, MsgWithdraw, MsgWithdrawResponse } from "./tx_pb.js";

const TYPE_NAME = "injective.exchange.v2.Msg";

/**
 * Deposit defines a method for transferring coins from the sender's bank
 * balance into the subaccount's exchange deposits
 *
 * @generated from rpc injective.exchange.v2.Msg.Deposit
 */
export const MsgDepositService = {
  typeName: TYPE_NAME,
  method: "Deposit",
  Request: MsgDeposit,
  Response: MsgDepositResponse,
} as const;

/**
 * Withdraw defines a method for withdrawing coins from a subaccount's
 * deposits to the user's bank balance
 *
 * @generated from rpc injective.exchange.v2.Msg.Withdraw
 */
export const MsgWithdrawService = {
  typeName: TYPE_NAME,
  method: "Withdraw",
  Request: MsgWithdraw,
  Response: MsgWithdrawResponse,
} as const;

/**
 * InstantSpotMarketLaunch defines method for creating a spot market by paying
 * listing fee without governance
 *
 * @generated from rpc injective.exchange.v2.Msg.InstantSpotMarketLaunch
 */
export const MsgInstantSpotMarketLaunchService = {
  typeName: TYPE_NAME,
  method: "InstantSpotMarketLaunch",
  Request: MsgInstantSpotMarketLaunch,
  Response: MsgInstantSpotMarketLaunchResponse,
} as const;

/**
 * InstantPerpetualMarketLaunch defines a method for creating a new perpetual
 * futures market by paying listing fee without governance
 *
 * @generated from rpc injective.exchange.v2.Msg.InstantPerpetualMarketLaunch
 */
export const MsgInstantPerpetualMarketLaunchService = {
  typeName: TYPE_NAME,
  method: "InstantPerpetualMarketLaunch",
  Request: MsgInstantPerpetualMarketLaunch,
  Response: MsgInstantPerpetualMarketLaunchResponse,
} as const;

/**
 * InstantExpiryFuturesMarketLaunch defines a method for creating a new expiry
 * futures market by paying listing fee without governance
 *
 * @generated from rpc injective.exchange.v2.Msg.InstantExpiryFuturesMarketLaunch
 */
export const MsgInstantExpiryFuturesMarketLaunchService = {
  typeName: TYPE_NAME,
  method: "InstantExpiryFuturesMarketLaunch",
  Request: MsgInstantExpiryFuturesMarketLaunch,
  Response: MsgInstantExpiryFuturesMarketLaunchResponse,
} as const;

/**
 * CreateSpotLimitOrder defines a method for creating a new spot limit order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CreateSpotLimitOrder
 */
export const MsgCreateSpotLimitOrderService = {
  typeName: TYPE_NAME,
  method: "CreateSpotLimitOrder",
  Request: MsgCreateSpotLimitOrder,
  Response: MsgCreateSpotLimitOrderResponse,
} as const;

/**
 * BatchCreateSpotLimitOrder defines a method for creating a new batch of spot
 * limit orders.
 *
 * @generated from rpc injective.exchange.v2.Msg.BatchCreateSpotLimitOrders
 */
export const MsgBatchCreateSpotLimitOrdersService = {
  typeName: TYPE_NAME,
  method: "BatchCreateSpotLimitOrders",
  Request: MsgBatchCreateSpotLimitOrders,
  Response: MsgBatchCreateSpotLimitOrdersResponse,
} as const;

/**
 * CreateSpotMarketOrder defines a method for creating a new spot market
 * order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CreateSpotMarketOrder
 */
export const MsgCreateSpotMarketOrderService = {
  typeName: TYPE_NAME,
  method: "CreateSpotMarketOrder",
  Request: MsgCreateSpotMarketOrder,
  Response: MsgCreateSpotMarketOrderResponse,
} as const;

/**
 * MsgCancelSpotOrder defines a method for cancelling a spot order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CancelSpotOrder
 */
export const MsgCancelSpotOrderService = {
  typeName: TYPE_NAME,
  method: "CancelSpotOrder",
  Request: MsgCancelSpotOrder,
  Response: MsgCancelSpotOrderResponse,
} as const;

/**
 * BatchCancelSpotOrders defines a method for cancelling a batch of spot
 * orders in a given market.
 *
 * @generated from rpc injective.exchange.v2.Msg.BatchCancelSpotOrders
 */
export const MsgBatchCancelSpotOrdersService = {
  typeName: TYPE_NAME,
  method: "BatchCancelSpotOrders",
  Request: MsgBatchCancelSpotOrders,
  Response: MsgBatchCancelSpotOrdersResponse,
} as const;

/**
 * BatchUpdateOrders defines a method for updating a batch of orders.
 *
 * @generated from rpc injective.exchange.v2.Msg.BatchUpdateOrders
 */
export const MsgBatchUpdateOrdersService = {
  typeName: TYPE_NAME,
  method: "BatchUpdateOrders",
  Request: MsgBatchUpdateOrders,
  Response: MsgBatchUpdateOrdersResponse,
} as const;

/**
 * PrivilegedExecuteContract defines a method for executing a Cosmwasm
 * contract from the exchange module with privileged capabilities.
 *
 * @generated from rpc injective.exchange.v2.Msg.PrivilegedExecuteContract
 */
export const MsgPrivilegedExecuteContractService = {
  typeName: TYPE_NAME,
  method: "PrivilegedExecuteContract",
  Request: MsgPrivilegedExecuteContract,
  Response: MsgPrivilegedExecuteContractResponse,
} as const;

/**
 * CreateDerivativeLimitOrder defines a method for creating a new derivative
 * limit order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CreateDerivativeLimitOrder
 */
export const MsgCreateDerivativeLimitOrderService = {
  typeName: TYPE_NAME,
  method: "CreateDerivativeLimitOrder",
  Request: MsgCreateDerivativeLimitOrder,
  Response: MsgCreateDerivativeLimitOrderResponse,
} as const;

/**
 * BatchCreateDerivativeLimitOrders defines a method for creating a new batch
 * of derivative limit orders.
 *
 * @generated from rpc injective.exchange.v2.Msg.BatchCreateDerivativeLimitOrders
 */
export const MsgBatchCreateDerivativeLimitOrdersService = {
  typeName: TYPE_NAME,
  method: "BatchCreateDerivativeLimitOrders",
  Request: MsgBatchCreateDerivativeLimitOrders,
  Response: MsgBatchCreateDerivativeLimitOrdersResponse,
} as const;

/**
 * MsgCreateDerivativeLimitOrder defines a method for creating a new
 * derivative market order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CreateDerivativeMarketOrder
 */
export const MsgCreateDerivativeMarketOrderService = {
  typeName: TYPE_NAME,
  method: "CreateDerivativeMarketOrder",
  Request: MsgCreateDerivativeMarketOrder,
  Response: MsgCreateDerivativeMarketOrderResponse,
} as const;

/**
 * MsgCancelDerivativeOrder defines a method for cancelling a derivative
 * order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CancelDerivativeOrder
 */
export const MsgCancelDerivativeOrderService = {
  typeName: TYPE_NAME,
  method: "CancelDerivativeOrder",
  Request: MsgCancelDerivativeOrder,
  Response: MsgCancelDerivativeOrderResponse,
} as const;

/**
 * MsgBatchCancelDerivativeOrders defines a method for cancelling a batch of
 * derivative limit orders.
 *
 * @generated from rpc injective.exchange.v2.Msg.BatchCancelDerivativeOrders
 */
export const MsgBatchCancelDerivativeOrdersService = {
  typeName: TYPE_NAME,
  method: "BatchCancelDerivativeOrders",
  Request: MsgBatchCancelDerivativeOrders,
  Response: MsgBatchCancelDerivativeOrdersResponse,
} as const;

/**
 * InstantBinaryOptionsMarketLaunch defines method for creating a binary
 * options market by paying listing fee without governance
 *
 * @generated from rpc injective.exchange.v2.Msg.InstantBinaryOptionsMarketLaunch
 */
export const MsgInstantBinaryOptionsMarketLaunchService = {
  typeName: TYPE_NAME,
  method: "InstantBinaryOptionsMarketLaunch",
  Request: MsgInstantBinaryOptionsMarketLaunch,
  Response: MsgInstantBinaryOptionsMarketLaunchResponse,
} as const;

/**
 * CreateBinaryOptionsLimitOrder defines a method for creating a new binary
 * options limit order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CreateBinaryOptionsLimitOrder
 */
export const MsgCreateBinaryOptionsLimitOrderService = {
  typeName: TYPE_NAME,
  method: "CreateBinaryOptionsLimitOrder",
  Request: MsgCreateBinaryOptionsLimitOrder,
  Response: MsgCreateBinaryOptionsLimitOrderResponse,
} as const;

/**
 * CreateBinaryOptionsMarketOrder defines a method for creating a new binary
 * options market order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CreateBinaryOptionsMarketOrder
 */
export const MsgCreateBinaryOptionsMarketOrderService = {
  typeName: TYPE_NAME,
  method: "CreateBinaryOptionsMarketOrder",
  Request: MsgCreateBinaryOptionsMarketOrder,
  Response: MsgCreateBinaryOptionsMarketOrderResponse,
} as const;

/**
 * MsgCancelBinaryOptionsOrder defines a method for cancelling a binary
 * options order.
 *
 * @generated from rpc injective.exchange.v2.Msg.CancelBinaryOptionsOrder
 */
export const MsgCancelBinaryOptionsOrderService = {
  typeName: TYPE_NAME,
  method: "CancelBinaryOptionsOrder",
  Request: MsgCancelBinaryOptionsOrder,
  Response: MsgCancelBinaryOptionsOrderResponse,
} as const;

/**
 * BatchCancelBinaryOptionsOrders defines a method for cancelling a batch of
 * binary options limit orders.
 *
 * @generated from rpc injective.exchange.v2.Msg.BatchCancelBinaryOptionsOrders
 */
export const MsgBatchCancelBinaryOptionsOrdersService = {
  typeName: TYPE_NAME,
  method: "BatchCancelBinaryOptionsOrders",
  Request: MsgBatchCancelBinaryOptionsOrders,
  Response: MsgBatchCancelBinaryOptionsOrdersResponse,
} as const;

/**
 * SubaccountTransfer defines a method for transfer between subaccounts
 *
 * @generated from rpc injective.exchange.v2.Msg.SubaccountTransfer
 */
export const MsgSubaccountTransferService = {
  typeName: TYPE_NAME,
  method: "SubaccountTransfer",
  Request: MsgSubaccountTransfer,
  Response: MsgSubaccountTransferResponse,
} as const;

/**
 * ExternalTransfer defines a method for transfer between external accounts
 *
 * @generated from rpc injective.exchange.v2.Msg.ExternalTransfer
 */
export const MsgExternalTransferService = {
  typeName: TYPE_NAME,
  method: "ExternalTransfer",
  Request: MsgExternalTransfer,
  Response: MsgExternalTransferResponse,
} as const;

/**
 * LiquidatePosition defines a method for liquidating a position
 *
 * @generated from rpc injective.exchange.v2.Msg.LiquidatePosition
 */
export const MsgLiquidatePositionService = {
  typeName: TYPE_NAME,
  method: "LiquidatePosition",
  Request: MsgLiquidatePosition,
  Response: MsgLiquidatePositionResponse,
} as const;

/**
 * EmergencySettleMarket defines a method for emergency settling a market
 *
 * @generated from rpc injective.exchange.v2.Msg.EmergencySettleMarket
 */
export const MsgEmergencySettleMarketService = {
  typeName: TYPE_NAME,
  method: "EmergencySettleMarket",
  Request: MsgEmergencySettleMarket,
  Response: MsgEmergencySettleMarketResponse,
} as const;

/**
 * IncreasePositionMargin defines a method for increasing margin of a position
 *
 * @generated from rpc injective.exchange.v2.Msg.IncreasePositionMargin
 */
export const MsgIncreasePositionMarginService = {
  typeName: TYPE_NAME,
  method: "IncreasePositionMargin",
  Request: MsgIncreasePositionMargin,
  Response: MsgIncreasePositionMarginResponse,
} as const;

/**
 * DecreasePositionMargin defines a method for decreasing margin of a position
 *
 * @generated from rpc injective.exchange.v2.Msg.DecreasePositionMargin
 */
export const MsgDecreasePositionMarginService = {
  typeName: TYPE_NAME,
  method: "DecreasePositionMargin",
  Request: MsgDecreasePositionMargin,
  Response: MsgDecreasePositionMarginResponse,
} as const;

/**
 * RewardsOptOut defines a method for opting out of rewards
 *
 * @generated from rpc injective.exchange.v2.Msg.RewardsOptOut
 */
export const MsgRewardsOptOutService = {
  typeName: TYPE_NAME,
  method: "RewardsOptOut",
  Request: MsgRewardsOptOut,
  Response: MsgRewardsOptOutResponse,
} as const;

/**
 * AdminUpdateBinaryOptionsMarket defines method for updating a binary options
 * market by admin
 *
 * @generated from rpc injective.exchange.v2.Msg.AdminUpdateBinaryOptionsMarket
 */
export const MsgAdminUpdateBinaryOptionsMarketService = {
  typeName: TYPE_NAME,
  method: "AdminUpdateBinaryOptionsMarket",
  Request: MsgAdminUpdateBinaryOptionsMarket,
  Response: MsgAdminUpdateBinaryOptionsMarketResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

/**
 * UpdateSpotMarket modifies certain spot market fields (admin only)
 *
 * @generated from rpc injective.exchange.v2.Msg.UpdateSpotMarket
 */
export const MsgUpdateSpotMarketService = {
  typeName: TYPE_NAME,
  method: "UpdateSpotMarket",
  Request: MsgUpdateSpotMarket,
  Response: MsgUpdateSpotMarketResponse,
} as const;

/**
 * UpdateDerivativeMarket modifies certain derivative market fields (admin
 * only)
 *
 * @generated from rpc injective.exchange.v2.Msg.UpdateDerivativeMarket
 */
export const MsgUpdateDerivativeMarketService = {
  typeName: TYPE_NAME,
  method: "UpdateDerivativeMarket",
  Request: MsgUpdateDerivativeMarket,
  Response: MsgUpdateDerivativeMarketResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.AuthorizeStakeGrants
 */
export const MsgAuthorizeStakeGrantsService = {
  typeName: TYPE_NAME,
  method: "AuthorizeStakeGrants",
  Request: MsgAuthorizeStakeGrants,
  Response: MsgAuthorizeStakeGrantsResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.ActivateStakeGrant
 */
export const MsgActivateStakeGrantService = {
  typeName: TYPE_NAME,
  method: "ActivateStakeGrant",
  Request: MsgActivateStakeGrant,
  Response: MsgActivateStakeGrantResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.BatchExchangeModification
 */
export const MsgBatchExchangeModificationService = {
  typeName: TYPE_NAME,
  method: "BatchExchangeModification",
  Request: MsgBatchExchangeModification,
  Response: MsgBatchExchangeModificationResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.LaunchSpotMarket
 */
export const MsgLaunchSpotMarketService = {
  typeName: TYPE_NAME,
  method: "LaunchSpotMarket",
  Request: MsgSpotMarketLaunch,
  Response: MsgSpotMarketLaunchResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.LaunchPerpetualMarket
 */
export const MsgLaunchPerpetualMarketService = {
  typeName: TYPE_NAME,
  method: "LaunchPerpetualMarket",
  Request: MsgPerpetualMarketLaunch,
  Response: MsgPerpetualMarketLaunchResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.LaunchExpiryFuturesMarket
 */
export const MsgLaunchExpiryFuturesMarketService = {
  typeName: TYPE_NAME,
  method: "LaunchExpiryFuturesMarket",
  Request: MsgExpiryFuturesMarketLaunch,
  Response: MsgExpiryFuturesMarketLaunchResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.LaunchBinaryOptionsMarket
 */
export const MsgLaunchBinaryOptionsMarketService = {
  typeName: TYPE_NAME,
  method: "LaunchBinaryOptionsMarket",
  Request: MsgBinaryOptionsMarketLaunch,
  Response: MsgBinaryOptionsMarketLaunchResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.BatchSpendCommunityPool
 */
export const MsgBatchSpendCommunityPoolService = {
  typeName: TYPE_NAME,
  method: "BatchSpendCommunityPool",
  Request: MsgBatchCommunityPoolSpend,
  Response: MsgBatchCommunityPoolSpendResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.SpotMarketParamUpdate
 */
export const MsgSpotMarketParamUpdateService = {
  typeName: TYPE_NAME,
  method: "SpotMarketParamUpdate",
  Request: MsgSpotMarketParamUpdate,
  Response: MsgSpotMarketParamUpdateResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.DerivativeMarketParamUpdate
 */
export const MsgDerivativeMarketParamUpdateService = {
  typeName: TYPE_NAME,
  method: "DerivativeMarketParamUpdate",
  Request: MsgDerivativeMarketParamUpdate,
  Response: MsgDerivativeMarketParamUpdateResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.BinaryOptionsMarketParamUpdate
 */
export const MsgBinaryOptionsMarketParamUpdateService = {
  typeName: TYPE_NAME,
  method: "BinaryOptionsMarketParamUpdate",
  Request: MsgBinaryOptionsMarketParamUpdate,
  Response: MsgBinaryOptionsMarketParamUpdateResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.ForceSettleMarket
 */
export const MsgForceSettleMarketService = {
  typeName: TYPE_NAME,
  method: "ForceSettleMarket",
  Request: MsgMarketForcedSettlement,
  Response: MsgMarketForcedSettlementResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.LaunchTradingRewardCampaign
 */
export const MsgLaunchTradingRewardCampaignService = {
  typeName: TYPE_NAME,
  method: "LaunchTradingRewardCampaign",
  Request: MsgTradingRewardCampaignLaunch,
  Response: MsgTradingRewardCampaignLaunchResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.EnableExchange
 */
export const MsgEnableExchangeService = {
  typeName: TYPE_NAME,
  method: "EnableExchange",
  Request: MsgExchangeEnable,
  Response: MsgExchangeEnableResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.UpdateTradingRewardCampaign
 */
export const MsgUpdateTradingRewardCampaignService = {
  typeName: TYPE_NAME,
  method: "UpdateTradingRewardCampaign",
  Request: MsgTradingRewardCampaignUpdate,
  Response: MsgTradingRewardCampaignUpdateResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.UpdateTradingRewardPendingPoints
 */
export const MsgUpdateTradingRewardPendingPointsService = {
  typeName: TYPE_NAME,
  method: "UpdateTradingRewardPendingPoints",
  Request: MsgTradingRewardPendingPointsUpdate,
  Response: MsgTradingRewardPendingPointsUpdateResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.UpdateFeeDiscount
 */
export const MsgUpdateFeeDiscountService = {
  typeName: TYPE_NAME,
  method: "UpdateFeeDiscount",
  Request: MsgFeeDiscount,
  Response: MsgFeeDiscountResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.UpdateAtomicMarketOrderFeeMultiplierSchedule
 */
export const MsgUpdateAtomicMarketOrderFeeMultiplierScheduleService = {
  typeName: TYPE_NAME,
  method: "UpdateAtomicMarketOrderFeeMultiplierSchedule",
  Request: MsgAtomicMarketOrderFeeMultiplierSchedule,
  Response: MsgAtomicMarketOrderFeeMultiplierScheduleResponse,
} as const;

/**
 * @generated from rpc injective.exchange.v2.Msg.SetDelegationTransferReceivers
 */
export const MsgSetDelegationTransferReceiversService = {
  typeName: TYPE_NAME,
  method: "SetDelegationTransferReceivers",
  Request: MsgSetDelegationTransferReceivers,
  Response: MsgSetDelegationTransferReceiversResponse,
} as const;

