// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file injective/erc20/v1beta1/query.proto (package injective.erc20.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllTokenPairsRequest, QueryAllTokenPairsResponse, QueryParamsRequest, QueryParamsResponse, QueryTokenPairByDenomRequest, QueryTokenPairByDenomResponse, QueryTokenPairByERC20AddressRequest, QueryTokenPairByERC20AddressResponse } from "./query_pb.js";

const TYPE_NAME = "injective.erc20.v1beta1.Query";

/**
 * Params defines a gRPC query method that returns the erc20 module's
 * parameters.
 *
 * @generated from rpc injective.erc20.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * AllTokenPairs defines a gRPC query method that returns the erc20
 * module's created token pairs.
 *
 * @generated from rpc injective.erc20.v1beta1.Query.AllTokenPairs
 */
export const QueryAllTokenPairsService = {
  typeName: TYPE_NAME,
  method: "AllTokenPairs",
  Request: QueryAllTokenPairsRequest,
  Response: QueryAllTokenPairsResponse,
} as const;

/**
 * TokenPairByDenom defines a gRPC query method that returns the erc20
 * module's token pair associated with the provided bank denom.
 *
 * @generated from rpc injective.erc20.v1beta1.Query.TokenPairByDenom
 */
export const QueryTokenPairByDenomService = {
  typeName: TYPE_NAME,
  method: "TokenPairByDenom",
  Request: QueryTokenPairByDenomRequest,
  Response: QueryTokenPairByDenomResponse,
} as const;

/**
 * TokenPairByERC20Address defines a gRPC query method that returns the erc20
 * module's token pair associated with the provided erc20 contract address.
 *
 * @generated from rpc injective.erc20.v1beta1.Query.TokenPairByERC20Address
 */
export const QueryTokenPairByERC20AddressService = {
  typeName: TYPE_NAME,
  method: "TokenPairByERC20Address",
  Request: QueryTokenPairByERC20AddressRequest,
  Response: QueryTokenPairByERC20AddressResponse,
} as const;

