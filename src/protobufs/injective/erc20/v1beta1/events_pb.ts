// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/erc20/v1beta1/events.proto (package injective.erc20.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message injective.erc20.v1beta1.EventCreateTokenPair
 */
export class EventCreateTokenPair extends Message<EventCreateTokenPair> {
  /**
   * @generated from field: string bank_denom = 1;
   */
  bankDenom = "";

  /**
   * @generated from field: string erc20_address = 2;
   */
  erc20Address = "";

  constructor(data?: PartialMessage<EventCreateTokenPair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.EventCreateTokenPair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bank_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "erc20_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventCreateTokenPair {
    return new EventCreateTokenPair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventCreateTokenPair {
    return new EventCreateTokenPair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventCreateTokenPair {
    return new EventCreateTokenPair().fromJsonString(jsonString, options);
  }

  static equals(a: EventCreateTokenPair | PlainMessage<EventCreateTokenPair> | undefined, b: EventCreateTokenPair | PlainMessage<EventCreateTokenPair> | undefined): boolean {
    return proto3.util.equals(EventCreateTokenPair, a, b);
  }
}

/**
 * @generated from message injective.erc20.v1beta1.EventDeleteTokenPair
 */
export class EventDeleteTokenPair extends Message<EventDeleteTokenPair> {
  /**
   * @generated from field: string bank_denom = 1;
   */
  bankDenom = "";

  constructor(data?: PartialMessage<EventDeleteTokenPair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.EventDeleteTokenPair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bank_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventDeleteTokenPair {
    return new EventDeleteTokenPair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventDeleteTokenPair {
    return new EventDeleteTokenPair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventDeleteTokenPair {
    return new EventDeleteTokenPair().fromJsonString(jsonString, options);
  }

  static equals(a: EventDeleteTokenPair | PlainMessage<EventDeleteTokenPair> | undefined, b: EventDeleteTokenPair | PlainMessage<EventDeleteTokenPair> | undefined): boolean {
    return proto3.util.equals(EventDeleteTokenPair, a, b);
  }
}

