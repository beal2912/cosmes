// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file injective/erc20/v1beta1/tx.proto (package injective.erc20.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { TokenPair } from "./erc20_pb.js";

/**
 * @generated from message injective.erc20.v1beta1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the erc20 parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: injective.erc20.v1beta1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message injective.erc20.v1beta1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * @generated from message injective.erc20.v1beta1.MsgCreateTokenPair
 */
export class MsgCreateTokenPair extends Message<MsgCreateTokenPair> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * @generated from field: injective.erc20.v1beta1.TokenPair token_pair = 2;
   */
  tokenPair?: TokenPair;

  constructor(data?: PartialMessage<MsgCreateTokenPair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.MsgCreateTokenPair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_pair", kind: "message", T: TokenPair },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateTokenPair {
    return new MsgCreateTokenPair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateTokenPair {
    return new MsgCreateTokenPair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateTokenPair {
    return new MsgCreateTokenPair().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateTokenPair | PlainMessage<MsgCreateTokenPair> | undefined, b: MsgCreateTokenPair | PlainMessage<MsgCreateTokenPair> | undefined): boolean {
    return proto3.util.equals(MsgCreateTokenPair, a, b);
  }
}

/**
 * @generated from message injective.erc20.v1beta1.MsgCreateTokenPairResponse
 */
export class MsgCreateTokenPairResponse extends Message<MsgCreateTokenPairResponse> {
  /**
   * @generated from field: injective.erc20.v1beta1.TokenPair token_pair = 1;
   */
  tokenPair?: TokenPair;

  constructor(data?: PartialMessage<MsgCreateTokenPairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.MsgCreateTokenPairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_pair", kind: "message", T: TokenPair },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateTokenPairResponse {
    return new MsgCreateTokenPairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateTokenPairResponse {
    return new MsgCreateTokenPairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateTokenPairResponse {
    return new MsgCreateTokenPairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateTokenPairResponse | PlainMessage<MsgCreateTokenPairResponse> | undefined, b: MsgCreateTokenPairResponse | PlainMessage<MsgCreateTokenPairResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateTokenPairResponse, a, b);
  }
}

/**
 * @generated from message injective.erc20.v1beta1.MsgDeleteTokenPair
 */
export class MsgDeleteTokenPair extends Message<MsgDeleteTokenPair> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * bank denom of the pair to be deleted
   *
   * @generated from field: string bank_denom = 2;
   */
  bankDenom = "";

  constructor(data?: PartialMessage<MsgDeleteTokenPair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.MsgDeleteTokenPair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bank_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteTokenPair {
    return new MsgDeleteTokenPair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteTokenPair {
    return new MsgDeleteTokenPair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteTokenPair {
    return new MsgDeleteTokenPair().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteTokenPair | PlainMessage<MsgDeleteTokenPair> | undefined, b: MsgDeleteTokenPair | PlainMessage<MsgDeleteTokenPair> | undefined): boolean {
    return proto3.util.equals(MsgDeleteTokenPair, a, b);
  }
}

/**
 * @generated from message injective.erc20.v1beta1.MsgDeleteTokenPairResponse
 */
export class MsgDeleteTokenPairResponse extends Message<MsgDeleteTokenPairResponse> {
  constructor(data?: PartialMessage<MsgDeleteTokenPairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "injective.erc20.v1beta1.MsgDeleteTokenPairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteTokenPairResponse {
    return new MsgDeleteTokenPairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteTokenPairResponse {
    return new MsgDeleteTokenPairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteTokenPairResponse {
    return new MsgDeleteTokenPairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteTokenPairResponse | PlainMessage<MsgDeleteTokenPairResponse> | undefined, b: MsgDeleteTokenPairResponse | PlainMessage<MsgDeleteTokenPairResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeleteTokenPairResponse, a, b);
  }
}

