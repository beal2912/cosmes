// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file injective/permissions/v1beta1/tx.proto (package injective.permissions.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgClaimVoucher, MsgClaimVoucherResponse, MsgCreateNamespace, MsgCreateNamespaceResponse, MsgUpdateActorRoles, MsgUpdateActorRolesResponse, MsgUpdateNamespace, MsgUpdateNamespaceResponse, MsgUpdateParams, MsgUpdateParamsResponse } from "./tx_pb.js";

const TYPE_NAME = "injective.permissions.v1beta1.Msg";

/**
 * @generated from rpc injective.permissions.v1beta1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

/**
 * @generated from rpc injective.permissions.v1beta1.Msg.CreateNamespace
 */
export const MsgCreateNamespaceService = {
  typeName: TYPE_NAME,
  method: "CreateNamespace",
  Request: MsgCreateNamespace,
  Response: MsgCreateNamespaceResponse,
} as const;

/**
 * @generated from rpc injective.permissions.v1beta1.Msg.UpdateNamespace
 */
export const MsgUpdateNamespaceService = {
  typeName: TYPE_NAME,
  method: "UpdateNamespace",
  Request: MsgUpdateNamespace,
  Response: MsgUpdateNamespaceResponse,
} as const;

/**
 * @generated from rpc injective.permissions.v1beta1.Msg.UpdateActorRoles
 */
export const MsgUpdateActorRolesService = {
  typeName: TYPE_NAME,
  method: "UpdateActorRoles",
  Request: MsgUpdateActorRoles,
  Response: MsgUpdateActorRolesResponse,
} as const;

/**
 * @generated from rpc injective.permissions.v1beta1.Msg.ClaimVoucher
 */
export const MsgClaimVoucherService = {
  typeName: TYPE_NAME,
  method: "ClaimVoucher",
  Request: MsgClaimVoucher,
  Response: MsgClaimVoucherResponse,
} as const;

