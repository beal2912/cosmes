// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/whitelisted_route.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { RouteStep } from "./route_step_pb.js";

/**
 * @generated from message pryzm.amm.v1.WhitelistedRoute
 */
export class WhitelistedRoute extends Message<WhitelistedRoute> {
  /**
   * @generated from field: repeated pryzm.amm.v1.RouteStep steps = 1;
   */
  steps: RouteStep[] = [];

  /**
   * @generated from field: bool enabled = 2;
   */
  enabled = false;

  constructor(data?: PartialMessage<WhitelistedRoute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.WhitelistedRoute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "steps", kind: "message", T: RouteStep, repeated: true },
    { no: 2, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WhitelistedRoute {
    return new WhitelistedRoute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WhitelistedRoute {
    return new WhitelistedRoute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WhitelistedRoute {
    return new WhitelistedRoute().fromJsonString(jsonString, options);
  }

  static equals(a: WhitelistedRoute | PlainMessage<WhitelistedRoute> | undefined, b: WhitelistedRoute | PlainMessage<WhitelistedRoute> | undefined): boolean {
    return proto3.util.equals(WhitelistedRoute, a, b);
  }
}

