// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/schedule_order.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message pryzm.amm.v1.ScheduleOrder
 */
export class ScheduleOrder extends Message<ScheduleOrder> {
  /**
   * @generated from field: int64 time_millis = 1;
   */
  timeMillis = protoInt64.zero;

  /**
   * @generated from field: uint64 order_id = 2;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<ScheduleOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.ScheduleOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "time_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScheduleOrder {
    return new ScheduleOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScheduleOrder {
    return new ScheduleOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScheduleOrder {
    return new ScheduleOrder().fromJsonString(jsonString, options);
  }

  static equals(a: ScheduleOrder | PlainMessage<ScheduleOrder> | undefined, b: ScheduleOrder | PlainMessage<ScheduleOrder> | undefined): boolean {
    return proto3.util.equals(ScheduleOrder, a, b);
  }
}

