// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/params.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message pryzm.amm.v1.OrderParameters
 */
export class OrderParameters extends Message<OrderParameters> {
  /**
   * @generated from field: string step_matching_fee_ratio = 1;
   */
  stepMatchingFeeRatio = "";

  /**
   * @generated from field: string step_swap_fee_ratio = 2;
   */
  stepSwapFeeRatio = "";

  /**
   * @generated from field: string matching_protocol_fee_ratio = 3;
   */
  matchingProtocolFeeRatio = "";

  /**
   * @generated from field: string matching_solver_fee_ratio = 4;
   */
  matchingSolverFeeRatio = "";

  /**
   * @generated from field: int32 max_orders_per_block = 5;
   */
  maxOrdersPerBlock = 0;

  /**
   * @generated from field: int32 max_schedule_per_block = 6;
   */
  maxSchedulePerBlock = 0;

  /**
   * @generated from field: string max_exec_order_trade_ratio = 7;
   */
  maxExecOrderTradeRatio = "";

  /**
   * @generated from field: string max_order_step_ratio = 8;
   */
  maxOrderStepRatio = "";

  /**
   * @generated from field: string min_order_step_ratio = 9;
   */
  minOrderStepRatio = "";

  /**
   * @generated from field: int64 min_order_step_millis_interval = 10;
   */
  minOrderStepMillisInterval = protoInt64.zero;

  /**
   * @generated from field: int64 max_order_step_millis_interval = 11;
   */
  maxOrderStepMillisInterval = protoInt64.zero;

  constructor(data?: PartialMessage<OrderParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.OrderParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "step_matching_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "step_swap_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "matching_protocol_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "matching_solver_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "max_orders_per_block", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "max_schedule_per_block", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "max_exec_order_trade_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "max_order_step_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "min_order_step_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "min_order_step_millis_interval", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "max_order_step_millis_interval", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderParameters {
    return new OrderParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderParameters {
    return new OrderParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderParameters {
    return new OrderParameters().fromJsonString(jsonString, options);
  }

  static equals(a: OrderParameters | PlainMessage<OrderParameters> | undefined, b: OrderParameters | PlainMessage<OrderParameters> | undefined): boolean {
    return proto3.util.equals(OrderParameters, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.YammParameters
 */
export class YammParameters extends Message<YammParameters> {
  /**
   * @generated from field: string lambda = 1;
   */
  lambda = "";

  /**
   * duration (milliseconds) for virtual balance when adding new pAssets to yamm pools
   *
   * @generated from field: int64 maturity_introduction_interval_millis = 2;
   */
  maturityIntroductionIntervalMillis = protoInt64.zero;

  /**
   * @generated from field: int64 maturity_expiration_interval_millis = 3;
   */
  maturityExpirationIntervalMillis = protoInt64.zero;

  /**
   * @generated from field: string introduction_virtual_balance_scaler = 4;
   */
  introductionVirtualBalanceScaler = "";

  /**
   * @generated from field: string expiration_virtual_balance_scaler = 5;
   */
  expirationVirtualBalanceScaler = "";

  /**
   * @generated from field: string buy_y_given_in_loan_fee_ratio = 6;
   */
  buyYGivenInLoanFeeRatio = "";

  /**
   * @generated from field: string sell_y_given_out_fee_ratio = 7;
   */
  sellYGivenOutFeeRatio = "";

  /**
   * @generated from field: string max_alpha = 8;
   */
  maxAlpha = "";

  /**
   * this will be set to newly created yamm pools
   * if not empty, only these addresses can initialize the pools
   *
   * @generated from field: repeated string default_initialization_allow_list = 9;
   */
  defaultInitializationAllowList: string[] = [];

  /**
   * @generated from field: string avg_monthly_yield_rate = 10;
   */
  avgMonthlyYieldRate = "";

  /**
   * @generated from field: string yield_fee_scaler = 11;
   */
  yieldFeeScaler = "";

  /**
   * this will be set to newly created yamm pools
   *
   * @generated from field: repeated string default_admins = 12;
   */
  defaultAdmins: string[] = [];

  /**
   * this will be set to newly created yamm pools
   *
   * @generated from field: repeated string default_pause_allow_list = 13;
   */
  defaultPauseAllowList: string[] = [];

  /**
   * this will be set to newly created yamm pools
   *
   * @generated from field: int64 default_pause_window_duration_millis = 14;
   */
  defaultPauseWindowDurationMillis = protoInt64.zero;

  /**
   * this will be set to newly created yamm pools
   *
   * @generated from field: int64 default_pause_buffer_duration_millis = 15;
   */
  defaultPauseBufferDurationMillis = protoInt64.zero;

  constructor(data?: PartialMessage<YammParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.YammParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lambda", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "maturity_introduction_interval_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "maturity_expiration_interval_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "introduction_virtual_balance_scaler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "expiration_virtual_balance_scaler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "buy_y_given_in_loan_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "sell_y_given_out_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "max_alpha", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "default_initialization_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "avg_monthly_yield_rate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "yield_fee_scaler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "default_admins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 13, name: "default_pause_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 14, name: "default_pause_window_duration_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "default_pause_buffer_duration_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): YammParameters {
    return new YammParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): YammParameters {
    return new YammParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): YammParameters {
    return new YammParameters().fromJsonString(jsonString, options);
  }

  static equals(a: YammParameters | PlainMessage<YammParameters> | undefined, b: YammParameters | PlainMessage<YammParameters> | undefined): boolean {
    return proto3.util.equals(YammParameters, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.GeneralPoolParameters
 */
export class GeneralPoolParameters extends Message<GeneralPoolParameters> {
  /**
   * @generated from field: bool allow_public_pool_creation = 1;
   */
  allowPublicPoolCreation = false;

  /**
   * @generated from field: string default_swap_fee_ratio = 2;
   */
  defaultSwapFeeRatio = "";

  /**
   * @generated from field: string swap_protocol_fee_ratio = 3;
   */
  swapProtocolFeeRatio = "";

  /**
   * @generated from field: string join_exit_protocol_fee_ratio = 4;
   */
  joinExitProtocolFeeRatio = "";

  constructor(data?: PartialMessage<GeneralPoolParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.GeneralPoolParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allow_public_pool_creation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "default_swap_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "swap_protocol_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "join_exit_protocol_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralPoolParameters {
    return new GeneralPoolParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralPoolParameters {
    return new GeneralPoolParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralPoolParameters {
    return new GeneralPoolParameters().fromJsonString(jsonString, options);
  }

  static equals(a: GeneralPoolParameters | PlainMessage<GeneralPoolParameters> | undefined, b: GeneralPoolParameters | PlainMessage<GeneralPoolParameters> | undefined): boolean {
    return proto3.util.equals(GeneralPoolParameters, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.AuthorizationParameters
 */
export class AuthorizationParameters extends Message<AuthorizationParameters> {
  /**
   * @generated from field: repeated string admin_list = 1;
   */
  adminList: string[] = [];

  /**
   * can pause the vault and also set pools to paused_by_gov mode which
   * is a special mode where only the gov can unpause and does not have a window
   * these cannot unpause anything
   *
   * @generated from field: repeated string pause_allow_list = 2;
   */
  pauseAllowList: string[] = [];

  constructor(data?: PartialMessage<AuthorizationParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.AuthorizationParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "admin_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "pause_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizationParameters {
    return new AuthorizationParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizationParameters {
    return new AuthorizationParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizationParameters {
    return new AuthorizationParameters().fromJsonString(jsonString, options);
  }

  static equals(a: AuthorizationParameters | PlainMessage<AuthorizationParameters> | undefined, b: AuthorizationParameters | PlainMessage<AuthorizationParameters> | undefined): boolean {
    return proto3.util.equals(AuthorizationParameters, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.GasParameters
 */
export class GasParameters extends Message<GasParameters> {
  /**
   * gas for swapping in a pool
   *
   * @generated from field: uint64 vault_swap = 1;
   */
  vaultSwap = protoInt64.zero;

  /**
   * gas for initializing a pool
   *
   * @generated from field: uint64 vault_initialize_pool = 2;
   */
  vaultInitializePool = protoInt64.zero;

  /**
   * gas for join pool
   *
   * @generated from field: uint64 vault_join = 3;
   */
  vaultJoin = protoInt64.zero;

  /**
   * gas for exit pool
   *
   * @generated from field: uint64 vault_exit = 4;
   */
  vaultExit = protoInt64.zero;

  /**
   * gas for recovery exit
   *
   * @generated from field: uint64 vault_recovery_exit = 5;
   */
  vaultRecoveryExit = protoInt64.zero;

  /**
   * gas for each step of batch swap
   *
   * @generated from field: uint64 vault_batch_swap_step = 6;
   */
  vaultBatchSwapStep = protoInt64.zero;

  /**
   * gas for creating a new weighted pool
   *
   * @generated from field: uint64 create_weighted_pool = 7;
   */
  createWeightedPool = protoInt64.zero;

  /**
   * gas for submitting a new order
   *
   * @generated from field: uint64 submit_order = 8;
   */
  submitOrder = protoInt64.zero;

  /**
   * gas for each order in match proposal
   *
   * @generated from field: uint64 proposal_match_order = 9;
   */
  proposalMatchOrder = protoInt64.zero;

  constructor(data?: PartialMessage<GasParameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.GasParameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vault_swap", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "vault_initialize_pool", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "vault_join", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "vault_exit", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "vault_recovery_exit", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "vault_batch_swap_step", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "create_weighted_pool", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "submit_order", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "proposal_match_order", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GasParameters {
    return new GasParameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GasParameters {
    return new GasParameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GasParameters {
    return new GasParameters().fromJsonString(jsonString, options);
  }

  static equals(a: GasParameters | PlainMessage<GasParameters> | undefined, b: GasParameters | PlainMessage<GasParameters> | undefined): boolean {
    return proto3.util.equals(GasParameters, a, b);
  }
}

/**
 * Params defines the parameters for the module.
 *
 * @generated from message pryzm.amm.v1.Params
 */
export class Params extends Message<Params> {
  /**
   * @generated from field: pryzm.amm.v1.GeneralPoolParameters general_pool_parameters = 1;
   */
  generalPoolParameters?: GeneralPoolParameters;

  /**
   * @generated from field: pryzm.amm.v1.YammParameters yamm_parameters = 2;
   */
  yammParameters?: YammParameters;

  /**
   * @generated from field: pryzm.amm.v1.OrderParameters order_parameters = 3;
   */
  orderParameters?: OrderParameters;

  /**
   * @generated from field: pryzm.amm.v1.AuthorizationParameters authorization_parameters = 4;
   */
  authorizationParameters?: AuthorizationParameters;

  /**
   * @generated from field: pryzm.amm.v1.GasParameters gas_parameters = 5;
   */
  gasParameters?: GasParameters;

  constructor(data?: PartialMessage<Params>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.Params";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "general_pool_parameters", kind: "message", T: GeneralPoolParameters },
    { no: 2, name: "yamm_parameters", kind: "message", T: YammParameters },
    { no: 3, name: "order_parameters", kind: "message", T: OrderParameters },
    { no: 4, name: "authorization_parameters", kind: "message", T: AuthorizationParameters },
    { no: 5, name: "gas_parameters", kind: "message", T: GasParameters },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params {
    return new Params().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJsonString(jsonString, options);
  }

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean {
    return proto3.util.equals(Params, a, b);
  }
}

