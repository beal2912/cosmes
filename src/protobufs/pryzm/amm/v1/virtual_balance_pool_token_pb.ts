// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/virtual_balance_pool_token.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message pryzm.amm.v1.VirtualBalancePoolToken
 */
export class VirtualBalancePoolToken extends Message<VirtualBalancePoolToken> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  /**
   * @generated from field: string target_virtual_balance = 3;
   */
  targetVirtualBalance = "";

  /**
   * @generated from field: int64 start_unix_millis = 4;
   */
  startUnixMillis = protoInt64.zero;

  /**
   * @generated from field: int64 end_unix_millis = 5;
   */
  endUnixMillis = protoInt64.zero;

  constructor(data?: PartialMessage<VirtualBalancePoolToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.VirtualBalancePoolToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "target_virtual_balance", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "start_unix_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "end_unix_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VirtualBalancePoolToken {
    return new VirtualBalancePoolToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VirtualBalancePoolToken {
    return new VirtualBalancePoolToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VirtualBalancePoolToken {
    return new VirtualBalancePoolToken().fromJsonString(jsonString, options);
  }

  static equals(a: VirtualBalancePoolToken | PlainMessage<VirtualBalancePoolToken> | undefined, b: VirtualBalancePoolToken | PlainMessage<VirtualBalancePoolToken> | undefined): boolean {
    return proto3.util.equals(VirtualBalancePoolToken, a, b);
  }
}

