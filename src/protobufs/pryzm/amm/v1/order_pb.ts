// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/order.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message pryzm.amm.v1.Order
 */
export class Order extends Message<Order> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string creator = 2;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 3;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_in = 4;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 5;
   */
  tokenOut = "";

  /**
   * @generated from field: bool whitelisted_route = 6;
   */
  whitelistedRoute = false;

  /**
   * @generated from field: bool allow_matching = 7;
   */
  allowMatching = false;

  /**
   * @generated from field: string amount_per_step = 8;
   */
  amountPerStep = "";

  /**
   * @generated from field: string remaining_amount = 9;
   */
  remainingAmount = "";

  /**
   * @generated from field: string deposited_amount = 10;
   */
  depositedAmount = "";

  /**
   * @generated from field: int64 min_millis_interval = 11;
   */
  minMillisInterval = protoInt64.zero;

  /**
   * @generated from field: string max_step_spot_price = 12;
   */
  maxStepSpotPrice = "";

  /**
   * @generated from field: string max_matching_spot_price = 13;
   */
  maxMatchingSpotPrice = "";

  constructor(data?: PartialMessage<Order>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.Order";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "whitelisted_route", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "allow_matching", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "amount_per_step", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "remaining_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "deposited_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "min_millis_interval", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "max_step_spot_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "max_matching_spot_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Order {
    return new Order().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Order {
    return new Order().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Order {
    return new Order().fromJsonString(jsonString, options);
  }

  static equals(a: Order | PlainMessage<Order> | undefined, b: Order | PlainMessage<Order> | undefined): boolean {
    return proto3.util.equals(Order, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.DisabledOrderPair
 */
export class DisabledOrderPair extends Message<DisabledOrderPair> {
  /**
   * @generated from field: bool whitelisted_route = 1;
   */
  whitelistedRoute = false;

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_in = 3;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 4;
   */
  tokenOut = "";

  constructor(data?: PartialMessage<DisabledOrderPair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.DisabledOrderPair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "whitelisted_route", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisabledOrderPair {
    return new DisabledOrderPair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisabledOrderPair {
    return new DisabledOrderPair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisabledOrderPair {
    return new DisabledOrderPair().fromJsonString(jsonString, options);
  }

  static equals(a: DisabledOrderPair | PlainMessage<DisabledOrderPair> | undefined, b: DisabledOrderPair | PlainMessage<DisabledOrderPair> | undefined): boolean {
    return proto3.util.equals(DisabledOrderPair, a, b);
  }
}

