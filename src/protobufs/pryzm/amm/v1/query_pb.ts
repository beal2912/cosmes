// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/query.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { PoolToken } from "./pool_token_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { TokenWeight } from "./token_weight_pb.js";
import { Pool } from "./pool_pb.js";
import { WeightedToken } from "./weighted_token_pb.js";
import { WeightUpdateTiming } from "./weight_update_timing_pb.js";
import { Swap, SwapStep, SwapType } from "./operations_pb.js";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
import { VirtualBalancePoolToken } from "./virtual_balance_pool_token_pb.js";
import { YammConfiguration } from "./yamm_configuration_pb.js";
import { WhitelistedRoute } from "./whitelisted_route_pb.js";
import { DisabledOrderPair, Order } from "./order_pb.js";
import { ScheduleOrder } from "./schedule_order_pb.js";
import { OraclePricePair } from "./oracle_price_pair_pb.js";
import { PendingTokenIntroduction } from "./pending_token_introduction_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message pryzm.amm.v1.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message pryzm.amm.v1.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: pryzm.amm.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPoolTokenRequest
 */
export class QueryGetPoolTokenRequest extends Message<QueryGetPoolTokenRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetPoolTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPoolTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolTokenRequest {
    return new QueryGetPoolTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolTokenRequest {
    return new QueryGetPoolTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolTokenRequest {
    return new QueryGetPoolTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolTokenRequest | PlainMessage<QueryGetPoolTokenRequest> | undefined, b: QueryGetPoolTokenRequest | PlainMessage<QueryGetPoolTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPoolTokenResponse
 */
export class QueryGetPoolTokenResponse extends Message<QueryGetPoolTokenResponse> {
  /**
   * @generated from field: pryzm.amm.v1.PoolToken pool_token = 1;
   */
  poolToken?: PoolToken;

  constructor(data?: PartialMessage<QueryGetPoolTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPoolTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_token", kind: "message", T: PoolToken },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolTokenResponse {
    return new QueryGetPoolTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolTokenResponse {
    return new QueryGetPoolTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolTokenResponse {
    return new QueryGetPoolTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolTokenResponse | PlainMessage<QueryGetPoolTokenResponse> | undefined, b: QueryGetPoolTokenResponse | PlainMessage<QueryGetPoolTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPoolTokenRequest
 */
export class QueryAllPoolTokenRequest extends Message<QueryAllPoolTokenRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * @generated from field: string pool_id = 2;
   */
  poolId = "";

  constructor(data?: PartialMessage<QueryAllPoolTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "pool_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolTokenRequest {
    return new QueryAllPoolTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolTokenRequest {
    return new QueryAllPoolTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolTokenRequest {
    return new QueryAllPoolTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolTokenRequest | PlainMessage<QueryAllPoolTokenRequest> | undefined, b: QueryAllPoolTokenRequest | PlainMessage<QueryAllPoolTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPoolTokenResponse
 */
export class QueryAllPoolTokenResponse extends Message<QueryAllPoolTokenResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.PoolToken pool_token = 1;
   */
  poolToken: PoolToken[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPoolTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_token", kind: "message", T: PoolToken, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolTokenResponse {
    return new QueryAllPoolTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolTokenResponse {
    return new QueryAllPoolTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolTokenResponse {
    return new QueryAllPoolTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolTokenResponse | PlainMessage<QueryAllPoolTokenResponse> | undefined, b: QueryAllPoolTokenResponse | PlainMessage<QueryAllPoolTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPoolTokenForPoolRequest
 */
export class QueryAllPoolTokenForPoolRequest extends Message<QueryAllPoolTokenForPoolRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAllPoolTokenForPoolRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolTokenForPoolRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolTokenForPoolRequest {
    return new QueryAllPoolTokenForPoolRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolTokenForPoolRequest {
    return new QueryAllPoolTokenForPoolRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolTokenForPoolRequest {
    return new QueryAllPoolTokenForPoolRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolTokenForPoolRequest | PlainMessage<QueryAllPoolTokenForPoolRequest> | undefined, b: QueryAllPoolTokenForPoolRequest | PlainMessage<QueryAllPoolTokenForPoolRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolTokenForPoolRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPoolTokenForPoolResponse
 */
export class QueryAllPoolTokenForPoolResponse extends Message<QueryAllPoolTokenForPoolResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.PoolToken pool_token = 1;
   */
  poolToken: PoolToken[] = [];

  constructor(data?: PartialMessage<QueryAllPoolTokenForPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolTokenForPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_token", kind: "message", T: PoolToken, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolTokenForPoolResponse {
    return new QueryAllPoolTokenForPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolTokenForPoolResponse {
    return new QueryAllPoolTokenForPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolTokenForPoolResponse {
    return new QueryAllPoolTokenForPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolTokenForPoolResponse | PlainMessage<QueryAllPoolTokenForPoolResponse> | undefined, b: QueryAllPoolTokenForPoolResponse | PlainMessage<QueryAllPoolTokenForPoolResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolTokenForPoolResponse, a, b);
  }
}

/**
 * computing normalized weights requires reading all tokens from the context
 * and computing weight for all of them
 * therefore, this query is not paginated
 *
 * @generated from message pryzm.amm.v1.QueryAllPoolTokenWeightRequest
 */
export class QueryAllPoolTokenWeightRequest extends Message<QueryAllPoolTokenWeightRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAllPoolTokenWeightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolTokenWeightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolTokenWeightRequest {
    return new QueryAllPoolTokenWeightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolTokenWeightRequest {
    return new QueryAllPoolTokenWeightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolTokenWeightRequest {
    return new QueryAllPoolTokenWeightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolTokenWeightRequest | PlainMessage<QueryAllPoolTokenWeightRequest> | undefined, b: QueryAllPoolTokenWeightRequest | PlainMessage<QueryAllPoolTokenWeightRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolTokenWeightRequest, a, b);
  }
}

/**
 * computing normalized weights requires reading all tokens from the context
 * and computing weight for all of them
 * therefore, this query is not paginated
 *
 * @generated from message pryzm.amm.v1.QueryAllPoolTokenWeightResponse
 */
export class QueryAllPoolTokenWeightResponse extends Message<QueryAllPoolTokenWeightResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.TokenWeight token_weight = 1;
   */
  tokenWeight: TokenWeight[] = [];

  constructor(data?: PartialMessage<QueryAllPoolTokenWeightResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolTokenWeightResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_weight", kind: "message", T: TokenWeight, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolTokenWeightResponse {
    return new QueryAllPoolTokenWeightResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolTokenWeightResponse {
    return new QueryAllPoolTokenWeightResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolTokenWeightResponse {
    return new QueryAllPoolTokenWeightResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolTokenWeightResponse | PlainMessage<QueryAllPoolTokenWeightResponse> | undefined, b: QueryAllPoolTokenWeightResponse | PlainMessage<QueryAllPoolTokenWeightResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolTokenWeightResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPoolTokenWeightRequest
 */
export class QueryGetPoolTokenWeightRequest extends Message<QueryGetPoolTokenWeightRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetPoolTokenWeightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPoolTokenWeightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolTokenWeightRequest {
    return new QueryGetPoolTokenWeightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolTokenWeightRequest {
    return new QueryGetPoolTokenWeightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolTokenWeightRequest {
    return new QueryGetPoolTokenWeightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolTokenWeightRequest | PlainMessage<QueryGetPoolTokenWeightRequest> | undefined, b: QueryGetPoolTokenWeightRequest | PlainMessage<QueryGetPoolTokenWeightRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolTokenWeightRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPoolTokenWeightResponse
 */
export class QueryGetPoolTokenWeightResponse extends Message<QueryGetPoolTokenWeightResponse> {
  /**
   * @generated from field: pryzm.amm.v1.TokenWeight token_weight = 1;
   */
  tokenWeight?: TokenWeight;

  constructor(data?: PartialMessage<QueryGetPoolTokenWeightResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPoolTokenWeightResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_weight", kind: "message", T: TokenWeight },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolTokenWeightResponse {
    return new QueryGetPoolTokenWeightResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolTokenWeightResponse {
    return new QueryGetPoolTokenWeightResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolTokenWeightResponse {
    return new QueryGetPoolTokenWeightResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolTokenWeightResponse | PlainMessage<QueryGetPoolTokenWeightResponse> | undefined, b: QueryGetPoolTokenWeightResponse | PlainMessage<QueryGetPoolTokenWeightResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolTokenWeightResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPoolRequest
 */
export class QueryGetPoolRequest extends Message<QueryGetPoolRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetPoolRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPoolRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolRequest {
    return new QueryGetPoolRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolRequest {
    return new QueryGetPoolRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolRequest {
    return new QueryGetPoolRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolRequest | PlainMessage<QueryGetPoolRequest> | undefined, b: QueryGetPoolRequest | PlainMessage<QueryGetPoolRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPoolResponse
 */
export class QueryGetPoolResponse extends Message<QueryGetPoolResponse> {
  /**
   * @generated from field: pryzm.amm.v1.Pool pool = 1;
   */
  pool?: Pool;

  constructor(data?: PartialMessage<QueryGetPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: Pool },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolResponse {
    return new QueryGetPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolResponse {
    return new QueryGetPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolResponse {
    return new QueryGetPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolResponse | PlainMessage<QueryGetPoolResponse> | undefined, b: QueryGetPoolResponse | PlainMessage<QueryGetPoolResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPoolRequest
 */
export class QueryAllPoolRequest extends Message<QueryAllPoolRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPoolRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolRequest {
    return new QueryAllPoolRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolRequest {
    return new QueryAllPoolRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolRequest {
    return new QueryAllPoolRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolRequest | PlainMessage<QueryAllPoolRequest> | undefined, b: QueryAllPoolRequest | PlainMessage<QueryAllPoolRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPoolResponse
 */
export class QueryAllPoolResponse extends Message<QueryAllPoolResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.Pool pool = 1;
   */
  pool: Pool[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: Pool, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolResponse {
    return new QueryAllPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolResponse {
    return new QueryAllPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolResponse {
    return new QueryAllPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolResponse | PlainMessage<QueryAllPoolResponse> | undefined, b: QueryAllPoolResponse | PlainMessage<QueryAllPoolResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetWeightedTokenRequest
 */
export class QueryGetWeightedTokenRequest extends Message<QueryGetWeightedTokenRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetWeightedTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetWeightedTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetWeightedTokenRequest {
    return new QueryGetWeightedTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetWeightedTokenRequest {
    return new QueryGetWeightedTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetWeightedTokenRequest {
    return new QueryGetWeightedTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetWeightedTokenRequest | PlainMessage<QueryGetWeightedTokenRequest> | undefined, b: QueryGetWeightedTokenRequest | PlainMessage<QueryGetWeightedTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetWeightedTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetWeightedTokenResponse
 */
export class QueryGetWeightedTokenResponse extends Message<QueryGetWeightedTokenResponse> {
  /**
   * @generated from field: pryzm.amm.v1.WeightedToken weighted_token = 1;
   */
  weightedToken?: WeightedToken;

  constructor(data?: PartialMessage<QueryGetWeightedTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetWeightedTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "weighted_token", kind: "message", T: WeightedToken },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetWeightedTokenResponse {
    return new QueryGetWeightedTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetWeightedTokenResponse {
    return new QueryGetWeightedTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetWeightedTokenResponse {
    return new QueryGetWeightedTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetWeightedTokenResponse | PlainMessage<QueryGetWeightedTokenResponse> | undefined, b: QueryGetWeightedTokenResponse | PlainMessage<QueryGetWeightedTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetWeightedTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllWeightedTokenRequest
 */
export class QueryAllWeightedTokenRequest extends Message<QueryAllWeightedTokenRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllWeightedTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllWeightedTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllWeightedTokenRequest {
    return new QueryAllWeightedTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllWeightedTokenRequest {
    return new QueryAllWeightedTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllWeightedTokenRequest {
    return new QueryAllWeightedTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllWeightedTokenRequest | PlainMessage<QueryAllWeightedTokenRequest> | undefined, b: QueryAllWeightedTokenRequest | PlainMessage<QueryAllWeightedTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllWeightedTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllWeightedTokenResponse
 */
export class QueryAllWeightedTokenResponse extends Message<QueryAllWeightedTokenResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.WeightedToken weighted_token = 1;
   */
  weightedToken: WeightedToken[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllWeightedTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllWeightedTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "weighted_token", kind: "message", T: WeightedToken, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllWeightedTokenResponse {
    return new QueryAllWeightedTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllWeightedTokenResponse {
    return new QueryAllWeightedTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllWeightedTokenResponse {
    return new QueryAllWeightedTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllWeightedTokenResponse | PlainMessage<QueryAllWeightedTokenResponse> | undefined, b: QueryAllWeightedTokenResponse | PlainMessage<QueryAllWeightedTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllWeightedTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetWeightUpdateTimingRequest
 */
export class QueryGetWeightUpdateTimingRequest extends Message<QueryGetWeightUpdateTimingRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetWeightUpdateTimingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetWeightUpdateTimingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetWeightUpdateTimingRequest {
    return new QueryGetWeightUpdateTimingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetWeightUpdateTimingRequest {
    return new QueryGetWeightUpdateTimingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetWeightUpdateTimingRequest {
    return new QueryGetWeightUpdateTimingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetWeightUpdateTimingRequest | PlainMessage<QueryGetWeightUpdateTimingRequest> | undefined, b: QueryGetWeightUpdateTimingRequest | PlainMessage<QueryGetWeightUpdateTimingRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetWeightUpdateTimingRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetWeightUpdateTimingResponse
 */
export class QueryGetWeightUpdateTimingResponse extends Message<QueryGetWeightUpdateTimingResponse> {
  /**
   * @generated from field: pryzm.amm.v1.WeightUpdateTiming weight_update_timing = 1;
   */
  weightUpdateTiming?: WeightUpdateTiming;

  constructor(data?: PartialMessage<QueryGetWeightUpdateTimingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetWeightUpdateTimingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "weight_update_timing", kind: "message", T: WeightUpdateTiming },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetWeightUpdateTimingResponse {
    return new QueryGetWeightUpdateTimingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetWeightUpdateTimingResponse {
    return new QueryGetWeightUpdateTimingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetWeightUpdateTimingResponse {
    return new QueryGetWeightUpdateTimingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetWeightUpdateTimingResponse | PlainMessage<QueryGetWeightUpdateTimingResponse> | undefined, b: QueryGetWeightUpdateTimingResponse | PlainMessage<QueryGetWeightUpdateTimingResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetWeightUpdateTimingResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllWeightUpdateTimingRequest
 */
export class QueryAllWeightUpdateTimingRequest extends Message<QueryAllWeightUpdateTimingRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllWeightUpdateTimingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllWeightUpdateTimingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllWeightUpdateTimingRequest {
    return new QueryAllWeightUpdateTimingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllWeightUpdateTimingRequest {
    return new QueryAllWeightUpdateTimingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllWeightUpdateTimingRequest {
    return new QueryAllWeightUpdateTimingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllWeightUpdateTimingRequest | PlainMessage<QueryAllWeightUpdateTimingRequest> | undefined, b: QueryAllWeightUpdateTimingRequest | PlainMessage<QueryAllWeightUpdateTimingRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllWeightUpdateTimingRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllWeightUpdateTimingResponse
 */
export class QueryAllWeightUpdateTimingResponse extends Message<QueryAllWeightUpdateTimingResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.WeightUpdateTiming weight_update_timing = 1;
   */
  weightUpdateTiming: WeightUpdateTiming[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllWeightUpdateTimingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllWeightUpdateTimingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "weight_update_timing", kind: "message", T: WeightUpdateTiming, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllWeightUpdateTimingResponse {
    return new QueryAllWeightUpdateTimingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllWeightUpdateTimingResponse {
    return new QueryAllWeightUpdateTimingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllWeightUpdateTimingResponse {
    return new QueryAllWeightUpdateTimingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllWeightUpdateTimingResponse | PlainMessage<QueryAllWeightUpdateTimingResponse> | undefined, b: QueryAllWeightUpdateTimingResponse | PlainMessage<QueryAllWeightUpdateTimingResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllWeightUpdateTimingResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateSingleSwapRequest
 */
export class QuerySimulateSingleSwapRequest extends Message<QuerySimulateSingleSwapRequest> {
  /**
   * @generated from field: pryzm.amm.v1.Swap swap = 1;
   */
  swap?: Swap;

  constructor(data?: PartialMessage<QuerySimulateSingleSwapRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateSingleSwapRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "swap", kind: "message", T: Swap },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateSingleSwapRequest {
    return new QuerySimulateSingleSwapRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateSingleSwapRequest {
    return new QuerySimulateSingleSwapRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateSingleSwapRequest {
    return new QuerySimulateSingleSwapRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateSingleSwapRequest | PlainMessage<QuerySimulateSingleSwapRequest> | undefined, b: QuerySimulateSingleSwapRequest | PlainMessage<QuerySimulateSingleSwapRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateSingleSwapRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateSingleSwapResponse
 */
export class QuerySimulateSingleSwapResponse extends Message<QuerySimulateSingleSwapResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_out = 1;
   */
  amountOut?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_in = 2;
   */
  amountIn?: Coin;

  /**
   * protocol fee does not contain the y_trade fee and refractor fee
   * which is paid in case of a yAsset trade
   *
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee?: Coin;

  constructor(data?: PartialMessage<QuerySimulateSingleSwapResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateSingleSwapResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amount_out", kind: "message", T: Coin },
    { no: 2, name: "amount_in", kind: "message", T: Coin },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateSingleSwapResponse {
    return new QuerySimulateSingleSwapResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateSingleSwapResponse {
    return new QuerySimulateSingleSwapResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateSingleSwapResponse {
    return new QuerySimulateSingleSwapResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateSingleSwapResponse | PlainMessage<QuerySimulateSingleSwapResponse> | undefined, b: QuerySimulateSingleSwapResponse | PlainMessage<QuerySimulateSingleSwapResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateSingleSwapResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateInitializePoolRequest
 */
export class QuerySimulateInitializePoolRequest extends Message<QuerySimulateInitializePoolRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateInitializePoolRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateInitializePoolRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateInitializePoolRequest {
    return new QuerySimulateInitializePoolRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateInitializePoolRequest {
    return new QuerySimulateInitializePoolRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateInitializePoolRequest {
    return new QuerySimulateInitializePoolRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateInitializePoolRequest | PlainMessage<QuerySimulateInitializePoolRequest> | undefined, b: QuerySimulateInitializePoolRequest | PlainMessage<QuerySimulateInitializePoolRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateInitializePoolRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateInitializePoolResponse
 */
export class QuerySimulateInitializePoolResponse extends Message<QuerySimulateInitializePoolResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateInitializePoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateInitializePoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateInitializePoolResponse {
    return new QuerySimulateInitializePoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateInitializePoolResponse {
    return new QuerySimulateInitializePoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateInitializePoolResponse {
    return new QuerySimulateInitializePoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateInitializePoolResponse | PlainMessage<QuerySimulateInitializePoolResponse> | undefined, b: QuerySimulateInitializePoolResponse | PlainMessage<QuerySimulateInitializePoolResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateInitializePoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateJoinAllTokensExactLptRequest
 */
export class QuerySimulateJoinAllTokensExactLptRequest extends Message<QuerySimulateJoinAllTokensExactLptRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_out = 2;
   */
  lptOut = "";

  constructor(data?: PartialMessage<QuerySimulateJoinAllTokensExactLptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateJoinAllTokensExactLptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "lpt_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateJoinAllTokensExactLptRequest {
    return new QuerySimulateJoinAllTokensExactLptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateJoinAllTokensExactLptRequest {
    return new QuerySimulateJoinAllTokensExactLptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateJoinAllTokensExactLptRequest {
    return new QuerySimulateJoinAllTokensExactLptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateJoinAllTokensExactLptRequest | PlainMessage<QuerySimulateJoinAllTokensExactLptRequest> | undefined, b: QuerySimulateJoinAllTokensExactLptRequest | PlainMessage<QuerySimulateJoinAllTokensExactLptRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateJoinAllTokensExactLptRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateJoinAllTokensExactLptResponse
 */
export class QuerySimulateJoinAllTokensExactLptResponse extends Message<QuerySimulateJoinAllTokensExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateJoinAllTokensExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateJoinAllTokensExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateJoinAllTokensExactLptResponse {
    return new QuerySimulateJoinAllTokensExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateJoinAllTokensExactLptResponse {
    return new QuerySimulateJoinAllTokensExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateJoinAllTokensExactLptResponse {
    return new QuerySimulateJoinAllTokensExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateJoinAllTokensExactLptResponse | PlainMessage<QuerySimulateJoinAllTokensExactLptResponse> | undefined, b: QuerySimulateJoinAllTokensExactLptResponse | PlainMessage<QuerySimulateJoinAllTokensExactLptResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateJoinAllTokensExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateJoinExactTokensRequest
 */
export class QuerySimulateJoinExactTokensRequest extends Message<QuerySimulateJoinExactTokensRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateJoinExactTokensRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateJoinExactTokensRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateJoinExactTokensRequest {
    return new QuerySimulateJoinExactTokensRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateJoinExactTokensRequest {
    return new QuerySimulateJoinExactTokensRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateJoinExactTokensRequest {
    return new QuerySimulateJoinExactTokensRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateJoinExactTokensRequest | PlainMessage<QuerySimulateJoinExactTokensRequest> | undefined, b: QuerySimulateJoinExactTokensRequest | PlainMessage<QuerySimulateJoinExactTokensRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateJoinExactTokensRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateJoinExactTokensResponse
 */
export class QuerySimulateJoinExactTokensResponse extends Message<QuerySimulateJoinExactTokensResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateJoinExactTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateJoinExactTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateJoinExactTokensResponse {
    return new QuerySimulateJoinExactTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateJoinExactTokensResponse {
    return new QuerySimulateJoinExactTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateJoinExactTokensResponse {
    return new QuerySimulateJoinExactTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateJoinExactTokensResponse | PlainMessage<QuerySimulateJoinExactTokensResponse> | undefined, b: QuerySimulateJoinExactTokensResponse | PlainMessage<QuerySimulateJoinExactTokensResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateJoinExactTokensResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateZeroImpactJoinYammRequest
 */
export class QuerySimulateZeroImpactJoinYammRequest extends Message<QuerySimulateZeroImpactJoinYammRequest> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin c_amount_in = 1;
   */
  cAmountIn?: Coin;

  constructor(data?: PartialMessage<QuerySimulateZeroImpactJoinYammRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateZeroImpactJoinYammRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "c_amount_in", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateZeroImpactJoinYammRequest {
    return new QuerySimulateZeroImpactJoinYammRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateZeroImpactJoinYammRequest {
    return new QuerySimulateZeroImpactJoinYammRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateZeroImpactJoinYammRequest {
    return new QuerySimulateZeroImpactJoinYammRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateZeroImpactJoinYammRequest | PlainMessage<QuerySimulateZeroImpactJoinYammRequest> | undefined, b: QuerySimulateZeroImpactJoinYammRequest | PlainMessage<QuerySimulateZeroImpactJoinYammRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateZeroImpactJoinYammRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateZeroImpactJoinYammResponse
 */
export class QuerySimulateZeroImpactJoinYammResponse extends Message<QuerySimulateZeroImpactJoinYammResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin y_out = 2;
   */
  yOut: Coin[] = [];

  /**
   * @generated from field: cosmos.base.v1beta1.Coin refract_fee = 3;
   */
  refractFee?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin join_protocol_fee = 4;
   */
  joinProtocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 5;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateZeroImpactJoinYammResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateZeroImpactJoinYammResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "y_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "refract_fee", kind: "message", T: Coin },
    { no: 4, name: "join_protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateZeroImpactJoinYammResponse {
    return new QuerySimulateZeroImpactJoinYammResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateZeroImpactJoinYammResponse {
    return new QuerySimulateZeroImpactJoinYammResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateZeroImpactJoinYammResponse {
    return new QuerySimulateZeroImpactJoinYammResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateZeroImpactJoinYammResponse | PlainMessage<QuerySimulateZeroImpactJoinYammResponse> | undefined, b: QuerySimulateZeroImpactJoinYammResponse | PlainMessage<QuerySimulateZeroImpactJoinYammResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateZeroImpactJoinYammResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateJoinTokenExactLptRequest
 */
export class QuerySimulateJoinTokenExactLptRequest extends Message<QuerySimulateJoinTokenExactLptRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_out = 2;
   */
  lptOut = "";

  /**
   * @generated from field: string token_in = 3;
   */
  tokenIn = "";

  constructor(data?: PartialMessage<QuerySimulateJoinTokenExactLptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateJoinTokenExactLptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "lpt_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateJoinTokenExactLptRequest {
    return new QuerySimulateJoinTokenExactLptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateJoinTokenExactLptRequest {
    return new QuerySimulateJoinTokenExactLptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateJoinTokenExactLptRequest {
    return new QuerySimulateJoinTokenExactLptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateJoinTokenExactLptRequest | PlainMessage<QuerySimulateJoinTokenExactLptRequest> | undefined, b: QuerySimulateJoinTokenExactLptRequest | PlainMessage<QuerySimulateJoinTokenExactLptRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateJoinTokenExactLptRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateJoinTokenExactLptResponse
 */
export class QuerySimulateJoinTokenExactLptResponse extends Message<QuerySimulateJoinTokenExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_in = 2;
   */
  amountIn?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee?: Coin;

  constructor(data?: PartialMessage<QuerySimulateJoinTokenExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateJoinTokenExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amount_in", kind: "message", T: Coin },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateJoinTokenExactLptResponse {
    return new QuerySimulateJoinTokenExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateJoinTokenExactLptResponse {
    return new QuerySimulateJoinTokenExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateJoinTokenExactLptResponse {
    return new QuerySimulateJoinTokenExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateJoinTokenExactLptResponse | PlainMessage<QuerySimulateJoinTokenExactLptResponse> | undefined, b: QuerySimulateJoinTokenExactLptResponse | PlainMessage<QuerySimulateJoinTokenExactLptResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateJoinTokenExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateExitTokenExactLptRequest
 */
export class QuerySimulateExitTokenExactLptRequest extends Message<QuerySimulateExitTokenExactLptRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_in = 2;
   */
  lptIn = "";

  /**
   * @generated from field: string token_out = 3;
   */
  tokenOut = "";

  constructor(data?: PartialMessage<QuerySimulateExitTokenExactLptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateExitTokenExactLptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "lpt_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateExitTokenExactLptRequest {
    return new QuerySimulateExitTokenExactLptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateExitTokenExactLptRequest {
    return new QuerySimulateExitTokenExactLptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateExitTokenExactLptRequest {
    return new QuerySimulateExitTokenExactLptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateExitTokenExactLptRequest | PlainMessage<QuerySimulateExitTokenExactLptRequest> | undefined, b: QuerySimulateExitTokenExactLptRequest | PlainMessage<QuerySimulateExitTokenExactLptRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateExitTokenExactLptRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateExitTokenExactLptResponse
 */
export class QuerySimulateExitTokenExactLptResponse extends Message<QuerySimulateExitTokenExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_out = 2;
   */
  amountOut?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee?: Coin;

  constructor(data?: PartialMessage<QuerySimulateExitTokenExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateExitTokenExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amount_out", kind: "message", T: Coin },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateExitTokenExactLptResponse {
    return new QuerySimulateExitTokenExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateExitTokenExactLptResponse {
    return new QuerySimulateExitTokenExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateExitTokenExactLptResponse {
    return new QuerySimulateExitTokenExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateExitTokenExactLptResponse | PlainMessage<QuerySimulateExitTokenExactLptResponse> | undefined, b: QuerySimulateExitTokenExactLptResponse | PlainMessage<QuerySimulateExitTokenExactLptResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateExitTokenExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateExitExactTokensRequest
 */
export class QuerySimulateExitExactTokensRequest extends Message<QuerySimulateExitExactTokensRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateExitExactTokensRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateExitExactTokensRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateExitExactTokensRequest {
    return new QuerySimulateExitExactTokensRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateExitExactTokensRequest {
    return new QuerySimulateExitExactTokensRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateExitExactTokensRequest {
    return new QuerySimulateExitExactTokensRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateExitExactTokensRequest | PlainMessage<QuerySimulateExitExactTokensRequest> | undefined, b: QuerySimulateExitExactTokensRequest | PlainMessage<QuerySimulateExitExactTokensRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateExitExactTokensRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateExitExactTokensResponse
 */
export class QuerySimulateExitExactTokensResponse extends Message<QuerySimulateExitExactTokensResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateExitExactTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateExitExactTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateExitExactTokensResponse {
    return new QuerySimulateExitExactTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateExitExactTokensResponse {
    return new QuerySimulateExitExactTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateExitExactTokensResponse {
    return new QuerySimulateExitExactTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateExitExactTokensResponse | PlainMessage<QuerySimulateExitExactTokensResponse> | undefined, b: QuerySimulateExitExactTokensResponse | PlainMessage<QuerySimulateExitExactTokensResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateExitExactTokensResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateExitAllTokensExactLptRequest
 */
export class QuerySimulateExitAllTokensExactLptRequest extends Message<QuerySimulateExitAllTokensExactLptRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_in = 2;
   */
  lptIn = "";

  constructor(data?: PartialMessage<QuerySimulateExitAllTokensExactLptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateExitAllTokensExactLptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "lpt_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateExitAllTokensExactLptRequest {
    return new QuerySimulateExitAllTokensExactLptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateExitAllTokensExactLptRequest {
    return new QuerySimulateExitAllTokensExactLptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateExitAllTokensExactLptRequest {
    return new QuerySimulateExitAllTokensExactLptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateExitAllTokensExactLptRequest | PlainMessage<QuerySimulateExitAllTokensExactLptRequest> | undefined, b: QuerySimulateExitAllTokensExactLptRequest | PlainMessage<QuerySimulateExitAllTokensExactLptRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateExitAllTokensExactLptRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateExitAllTokensExactLptResponse
 */
export class QuerySimulateExitAllTokensExactLptResponse extends Message<QuerySimulateExitAllTokensExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  constructor(data?: PartialMessage<QuerySimulateExitAllTokensExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateExitAllTokensExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateExitAllTokensExactLptResponse {
    return new QuerySimulateExitAllTokensExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateExitAllTokensExactLptResponse {
    return new QuerySimulateExitAllTokensExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateExitAllTokensExactLptResponse {
    return new QuerySimulateExitAllTokensExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateExitAllTokensExactLptResponse | PlainMessage<QuerySimulateExitAllTokensExactLptResponse> | undefined, b: QuerySimulateExitAllTokensExactLptResponse | PlainMessage<QuerySimulateExitAllTokensExactLptResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateExitAllTokensExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySpotPriceRequest
 */
export class QuerySpotPriceRequest extends Message<QuerySpotPriceRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_in = 2;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 3;
   */
  tokenOut = "";

  /**
   * @generated from field: bool apply_fee = 4;
   */
  applyFee = false;

  constructor(data?: PartialMessage<QuerySpotPriceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySpotPriceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "apply_fee", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySpotPriceRequest {
    return new QuerySpotPriceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySpotPriceRequest {
    return new QuerySpotPriceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySpotPriceRequest {
    return new QuerySpotPriceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySpotPriceRequest | PlainMessage<QuerySpotPriceRequest> | undefined, b: QuerySpotPriceRequest | PlainMessage<QuerySpotPriceRequest> | undefined): boolean {
    return proto3.util.equals(QuerySpotPriceRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySpotPriceResponse
 */
export class QuerySpotPriceResponse extends Message<QuerySpotPriceResponse> {
  /**
   * @generated from field: string spot_price = 1;
   */
  spotPrice = "";

  constructor(data?: PartialMessage<QuerySpotPriceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySpotPriceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "spot_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySpotPriceResponse {
    return new QuerySpotPriceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySpotPriceResponse {
    return new QuerySpotPriceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySpotPriceResponse {
    return new QuerySpotPriceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySpotPriceResponse | PlainMessage<QuerySpotPriceResponse> | undefined, b: QuerySpotPriceResponse | PlainMessage<QuerySpotPriceResponse> | undefined): boolean {
    return proto3.util.equals(QuerySpotPriceResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetIntroducingPoolTokenRequest
 */
export class QueryGetIntroducingPoolTokenRequest extends Message<QueryGetIntroducingPoolTokenRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetIntroducingPoolTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetIntroducingPoolTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetIntroducingPoolTokenRequest {
    return new QueryGetIntroducingPoolTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetIntroducingPoolTokenRequest {
    return new QueryGetIntroducingPoolTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetIntroducingPoolTokenRequest {
    return new QueryGetIntroducingPoolTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetIntroducingPoolTokenRequest | PlainMessage<QueryGetIntroducingPoolTokenRequest> | undefined, b: QueryGetIntroducingPoolTokenRequest | PlainMessage<QueryGetIntroducingPoolTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetIntroducingPoolTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetIntroducingPoolTokenResponse
 */
export class QueryGetIntroducingPoolTokenResponse extends Message<QueryGetIntroducingPoolTokenResponse> {
  /**
   * @generated from field: pryzm.amm.v1.VirtualBalancePoolToken introducing_pool_token = 1;
   */
  introducingPoolToken?: VirtualBalancePoolToken;

  constructor(data?: PartialMessage<QueryGetIntroducingPoolTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetIntroducingPoolTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "introducing_pool_token", kind: "message", T: VirtualBalancePoolToken },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetIntroducingPoolTokenResponse {
    return new QueryGetIntroducingPoolTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetIntroducingPoolTokenResponse {
    return new QueryGetIntroducingPoolTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetIntroducingPoolTokenResponse {
    return new QueryGetIntroducingPoolTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetIntroducingPoolTokenResponse | PlainMessage<QueryGetIntroducingPoolTokenResponse> | undefined, b: QueryGetIntroducingPoolTokenResponse | PlainMessage<QueryGetIntroducingPoolTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetIntroducingPoolTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllIntroducingPoolTokenRequest
 */
export class QueryAllIntroducingPoolTokenRequest extends Message<QueryAllIntroducingPoolTokenRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllIntroducingPoolTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllIntroducingPoolTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllIntroducingPoolTokenRequest {
    return new QueryAllIntroducingPoolTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllIntroducingPoolTokenRequest {
    return new QueryAllIntroducingPoolTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllIntroducingPoolTokenRequest {
    return new QueryAllIntroducingPoolTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllIntroducingPoolTokenRequest | PlainMessage<QueryAllIntroducingPoolTokenRequest> | undefined, b: QueryAllIntroducingPoolTokenRequest | PlainMessage<QueryAllIntroducingPoolTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllIntroducingPoolTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllIntroducingPoolTokenResponse
 */
export class QueryAllIntroducingPoolTokenResponse extends Message<QueryAllIntroducingPoolTokenResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.VirtualBalancePoolToken introducing_pool_token = 1;
   */
  introducingPoolToken: VirtualBalancePoolToken[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllIntroducingPoolTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllIntroducingPoolTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "introducing_pool_token", kind: "message", T: VirtualBalancePoolToken, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllIntroducingPoolTokenResponse {
    return new QueryAllIntroducingPoolTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllIntroducingPoolTokenResponse {
    return new QueryAllIntroducingPoolTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllIntroducingPoolTokenResponse {
    return new QueryAllIntroducingPoolTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllIntroducingPoolTokenResponse | PlainMessage<QueryAllIntroducingPoolTokenResponse> | undefined, b: QueryAllIntroducingPoolTokenResponse | PlainMessage<QueryAllIntroducingPoolTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllIntroducingPoolTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetExpiringPoolTokenRequest
 */
export class QueryGetExpiringPoolTokenRequest extends Message<QueryGetExpiringPoolTokenRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetExpiringPoolTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetExpiringPoolTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetExpiringPoolTokenRequest {
    return new QueryGetExpiringPoolTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetExpiringPoolTokenRequest {
    return new QueryGetExpiringPoolTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetExpiringPoolTokenRequest {
    return new QueryGetExpiringPoolTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetExpiringPoolTokenRequest | PlainMessage<QueryGetExpiringPoolTokenRequest> | undefined, b: QueryGetExpiringPoolTokenRequest | PlainMessage<QueryGetExpiringPoolTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetExpiringPoolTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetExpiringPoolTokenResponse
 */
export class QueryGetExpiringPoolTokenResponse extends Message<QueryGetExpiringPoolTokenResponse> {
  /**
   * @generated from field: pryzm.amm.v1.VirtualBalancePoolToken expiring_pool_token = 1;
   */
  expiringPoolToken?: VirtualBalancePoolToken;

  constructor(data?: PartialMessage<QueryGetExpiringPoolTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetExpiringPoolTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "expiring_pool_token", kind: "message", T: VirtualBalancePoolToken },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetExpiringPoolTokenResponse {
    return new QueryGetExpiringPoolTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetExpiringPoolTokenResponse {
    return new QueryGetExpiringPoolTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetExpiringPoolTokenResponse {
    return new QueryGetExpiringPoolTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetExpiringPoolTokenResponse | PlainMessage<QueryGetExpiringPoolTokenResponse> | undefined, b: QueryGetExpiringPoolTokenResponse | PlainMessage<QueryGetExpiringPoolTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetExpiringPoolTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllExpiringPoolTokenRequest
 */
export class QueryAllExpiringPoolTokenRequest extends Message<QueryAllExpiringPoolTokenRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllExpiringPoolTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllExpiringPoolTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllExpiringPoolTokenRequest {
    return new QueryAllExpiringPoolTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllExpiringPoolTokenRequest {
    return new QueryAllExpiringPoolTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllExpiringPoolTokenRequest {
    return new QueryAllExpiringPoolTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllExpiringPoolTokenRequest | PlainMessage<QueryAllExpiringPoolTokenRequest> | undefined, b: QueryAllExpiringPoolTokenRequest | PlainMessage<QueryAllExpiringPoolTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllExpiringPoolTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllExpiringPoolTokenResponse
 */
export class QueryAllExpiringPoolTokenResponse extends Message<QueryAllExpiringPoolTokenResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.VirtualBalancePoolToken expiring_pool_token = 1;
   */
  expiringPoolToken: VirtualBalancePoolToken[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllExpiringPoolTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllExpiringPoolTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "expiring_pool_token", kind: "message", T: VirtualBalancePoolToken, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllExpiringPoolTokenResponse {
    return new QueryAllExpiringPoolTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllExpiringPoolTokenResponse {
    return new QueryAllExpiringPoolTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllExpiringPoolTokenResponse {
    return new QueryAllExpiringPoolTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllExpiringPoolTokenResponse | PlainMessage<QueryAllExpiringPoolTokenResponse> | undefined, b: QueryAllExpiringPoolTokenResponse | PlainMessage<QueryAllExpiringPoolTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllExpiringPoolTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryLpTokenRequest
 */
export class QueryLpTokenRequest extends Message<QueryLpTokenRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryLpTokenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryLpTokenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLpTokenRequest {
    return new QueryLpTokenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLpTokenRequest {
    return new QueryLpTokenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLpTokenRequest {
    return new QueryLpTokenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLpTokenRequest | PlainMessage<QueryLpTokenRequest> | undefined, b: QueryLpTokenRequest | PlainMessage<QueryLpTokenRequest> | undefined): boolean {
    return proto3.util.equals(QueryLpTokenRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryLpTokenResponse
 */
export class QueryLpTokenResponse extends Message<QueryLpTokenResponse> {
  /**
   * @generated from field: pryzm.amm.v1.PoolToken lp_token = 1;
   */
  lpToken?: PoolToken;

  constructor(data?: PartialMessage<QueryLpTokenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryLpTokenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lp_token", kind: "message", T: PoolToken },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLpTokenResponse {
    return new QueryLpTokenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLpTokenResponse {
    return new QueryLpTokenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLpTokenResponse {
    return new QueryLpTokenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLpTokenResponse | PlainMessage<QueryLpTokenResponse> | undefined, b: QueryLpTokenResponse | PlainMessage<QueryLpTokenResponse> | undefined): boolean {
    return proto3.util.equals(QueryLpTokenResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateBatchSwapRequest
 */
export class QuerySimulateBatchSwapRequest extends Message<QuerySimulateBatchSwapRequest> {
  /**
   * @generated from field: pryzm.amm.v1.SwapType swap_type = 1;
   */
  swapType = SwapType.GIVEN_IN;

  /**
   * @generated from field: repeated pryzm.amm.v1.SwapStep steps = 2;
   */
  steps: SwapStep[] = [];

  constructor(data?: PartialMessage<QuerySimulateBatchSwapRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateBatchSwapRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "swap_type", kind: "enum", T: proto3.getEnumType(SwapType) },
    { no: 2, name: "steps", kind: "message", T: SwapStep, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateBatchSwapRequest {
    return new QuerySimulateBatchSwapRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateBatchSwapRequest {
    return new QuerySimulateBatchSwapRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateBatchSwapRequest {
    return new QuerySimulateBatchSwapRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateBatchSwapRequest | PlainMessage<QuerySimulateBatchSwapRequest> | undefined, b: QuerySimulateBatchSwapRequest | PlainMessage<QuerySimulateBatchSwapRequest> | undefined): boolean {
    return proto3.util.equals(QuerySimulateBatchSwapRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QuerySimulateBatchSwapResponse
 */
export class QuerySimulateBatchSwapResponse extends Message<QuerySimulateBatchSwapResponse> {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 1;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  /**
   * protocol fee does not contain the y_trade fee and refractor fee
   * which is paid in case of a yAsset trade
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_protocol_fee = 3;
   */
  swapProtocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin join_exit_protocol_fee = 4;
   */
  joinExitProtocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 5;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<QuerySimulateBatchSwapResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QuerySimulateBatchSwapResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "swap_protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "join_exit_protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuerySimulateBatchSwapResponse {
    return new QuerySimulateBatchSwapResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuerySimulateBatchSwapResponse {
    return new QuerySimulateBatchSwapResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuerySimulateBatchSwapResponse {
    return new QuerySimulateBatchSwapResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuerySimulateBatchSwapResponse | PlainMessage<QuerySimulateBatchSwapResponse> | undefined, b: QuerySimulateBatchSwapResponse | PlainMessage<QuerySimulateBatchSwapResponse> | undefined): boolean {
    return proto3.util.equals(QuerySimulateBatchSwapResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetYammConfigurationRequest
 */
export class QueryGetYammConfigurationRequest extends Message<QueryGetYammConfigurationRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetYammConfigurationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetYammConfigurationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetYammConfigurationRequest {
    return new QueryGetYammConfigurationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetYammConfigurationRequest {
    return new QueryGetYammConfigurationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetYammConfigurationRequest {
    return new QueryGetYammConfigurationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetYammConfigurationRequest | PlainMessage<QueryGetYammConfigurationRequest> | undefined, b: QueryGetYammConfigurationRequest | PlainMessage<QueryGetYammConfigurationRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetYammConfigurationRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetYammConfigurationResponse
 */
export class QueryGetYammConfigurationResponse extends Message<QueryGetYammConfigurationResponse> {
  /**
   * @generated from field: pryzm.amm.v1.YammConfiguration yamm_configuration = 1;
   */
  yammConfiguration?: YammConfiguration;

  constructor(data?: PartialMessage<QueryGetYammConfigurationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetYammConfigurationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "yamm_configuration", kind: "message", T: YammConfiguration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetYammConfigurationResponse {
    return new QueryGetYammConfigurationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetYammConfigurationResponse {
    return new QueryGetYammConfigurationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetYammConfigurationResponse {
    return new QueryGetYammConfigurationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetYammConfigurationResponse | PlainMessage<QueryGetYammConfigurationResponse> | undefined, b: QueryGetYammConfigurationResponse | PlainMessage<QueryGetYammConfigurationResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetYammConfigurationResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllYammConfigurationRequest
 */
export class QueryAllYammConfigurationRequest extends Message<QueryAllYammConfigurationRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllYammConfigurationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllYammConfigurationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllYammConfigurationRequest {
    return new QueryAllYammConfigurationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllYammConfigurationRequest {
    return new QueryAllYammConfigurationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllYammConfigurationRequest {
    return new QueryAllYammConfigurationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllYammConfigurationRequest | PlainMessage<QueryAllYammConfigurationRequest> | undefined, b: QueryAllYammConfigurationRequest | PlainMessage<QueryAllYammConfigurationRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllYammConfigurationRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllYammConfigurationResponse
 */
export class QueryAllYammConfigurationResponse extends Message<QueryAllYammConfigurationResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.YammConfiguration yamm_configuration = 1;
   */
  yammConfiguration: YammConfiguration[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllYammConfigurationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllYammConfigurationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "yamm_configuration", kind: "message", T: YammConfiguration, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllYammConfigurationResponse {
    return new QueryAllYammConfigurationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllYammConfigurationResponse {
    return new QueryAllYammConfigurationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllYammConfigurationResponse {
    return new QueryAllYammConfigurationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllYammConfigurationResponse | PlainMessage<QueryAllYammConfigurationResponse> | undefined, b: QueryAllYammConfigurationResponse | PlainMessage<QueryAllYammConfigurationResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllYammConfigurationResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetWhitelistedRouteRequest
 */
export class QueryGetWhitelistedRouteRequest extends Message<QueryGetWhitelistedRouteRequest> {
  /**
   * @generated from field: string token_in = 1;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 2;
   */
  tokenOut = "";

  constructor(data?: PartialMessage<QueryGetWhitelistedRouteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetWhitelistedRouteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetWhitelistedRouteRequest {
    return new QueryGetWhitelistedRouteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetWhitelistedRouteRequest {
    return new QueryGetWhitelistedRouteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetWhitelistedRouteRequest {
    return new QueryGetWhitelistedRouteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetWhitelistedRouteRequest | PlainMessage<QueryGetWhitelistedRouteRequest> | undefined, b: QueryGetWhitelistedRouteRequest | PlainMessage<QueryGetWhitelistedRouteRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetWhitelistedRouteRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetWhitelistedRouteResponse
 */
export class QueryGetWhitelistedRouteResponse extends Message<QueryGetWhitelistedRouteResponse> {
  /**
   * @generated from field: pryzm.amm.v1.WhitelistedRoute whitelisted_route = 1;
   */
  whitelistedRoute?: WhitelistedRoute;

  constructor(data?: PartialMessage<QueryGetWhitelistedRouteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetWhitelistedRouteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "whitelisted_route", kind: "message", T: WhitelistedRoute },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetWhitelistedRouteResponse {
    return new QueryGetWhitelistedRouteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetWhitelistedRouteResponse {
    return new QueryGetWhitelistedRouteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetWhitelistedRouteResponse {
    return new QueryGetWhitelistedRouteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetWhitelistedRouteResponse | PlainMessage<QueryGetWhitelistedRouteResponse> | undefined, b: QueryGetWhitelistedRouteResponse | PlainMessage<QueryGetWhitelistedRouteResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetWhitelistedRouteResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllWhitelistedRouteRequest
 */
export class QueryAllWhitelistedRouteRequest extends Message<QueryAllWhitelistedRouteRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllWhitelistedRouteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllWhitelistedRouteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllWhitelistedRouteRequest {
    return new QueryAllWhitelistedRouteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllWhitelistedRouteRequest {
    return new QueryAllWhitelistedRouteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllWhitelistedRouteRequest {
    return new QueryAllWhitelistedRouteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllWhitelistedRouteRequest | PlainMessage<QueryAllWhitelistedRouteRequest> | undefined, b: QueryAllWhitelistedRouteRequest | PlainMessage<QueryAllWhitelistedRouteRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllWhitelistedRouteRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllWhitelistedRouteResponse
 */
export class QueryAllWhitelistedRouteResponse extends Message<QueryAllWhitelistedRouteResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.WhitelistedRoute whitelisted_route = 1;
   */
  whitelistedRoute: WhitelistedRoute[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllWhitelistedRouteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllWhitelistedRouteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "whitelisted_route", kind: "message", T: WhitelistedRoute, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllWhitelistedRouteResponse {
    return new QueryAllWhitelistedRouteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllWhitelistedRouteResponse {
    return new QueryAllWhitelistedRouteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllWhitelistedRouteResponse {
    return new QueryAllWhitelistedRouteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllWhitelistedRouteResponse | PlainMessage<QueryAllWhitelistedRouteResponse> | undefined, b: QueryAllWhitelistedRouteResponse | PlainMessage<QueryAllWhitelistedRouteResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllWhitelistedRouteResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetOrderRequest
 */
export class QueryGetOrderRequest extends Message<QueryGetOrderRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetOrderRequest {
    return new QueryGetOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetOrderRequest {
    return new QueryGetOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetOrderRequest {
    return new QueryGetOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetOrderRequest | PlainMessage<QueryGetOrderRequest> | undefined, b: QueryGetOrderRequest | PlainMessage<QueryGetOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetOrderRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetOrderResponse
 */
export class QueryGetOrderResponse extends Message<QueryGetOrderResponse> {
  /**
   * @generated from field: pryzm.amm.v1.Order order = 1;
   */
  order?: Order;

  constructor(data?: PartialMessage<QueryGetOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order", kind: "message", T: Order },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetOrderResponse {
    return new QueryGetOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetOrderResponse {
    return new QueryGetOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetOrderResponse {
    return new QueryGetOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetOrderResponse | PlainMessage<QueryGetOrderResponse> | undefined, b: QueryGetOrderResponse | PlainMessage<QueryGetOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllOrderRequest
 */
export class QueryAllOrderRequest extends Message<QueryAllOrderRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOrderRequest {
    return new QueryAllOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOrderRequest {
    return new QueryAllOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOrderRequest {
    return new QueryAllOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllOrderRequest | PlainMessage<QueryAllOrderRequest> | undefined, b: QueryAllOrderRequest | PlainMessage<QueryAllOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllOrderRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllOrderResponse
 */
export class QueryAllOrderResponse extends Message<QueryAllOrderResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.Order order = 1;
   */
  order: Order[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order", kind: "message", T: Order, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOrderResponse {
    return new QueryAllOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOrderResponse {
    return new QueryAllOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOrderResponse {
    return new QueryAllOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllOrderResponse | PlainMessage<QueryAllOrderResponse> | undefined, b: QueryAllOrderResponse | PlainMessage<QueryAllOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetExecutableOrderRequest
 */
export class QueryGetExecutableOrderRequest extends Message<QueryGetExecutableOrderRequest> {
  /**
   * @generated from field: uint64 order_id = 1;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetExecutableOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetExecutableOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetExecutableOrderRequest {
    return new QueryGetExecutableOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetExecutableOrderRequest {
    return new QueryGetExecutableOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetExecutableOrderRequest {
    return new QueryGetExecutableOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetExecutableOrderRequest | PlainMessage<QueryGetExecutableOrderRequest> | undefined, b: QueryGetExecutableOrderRequest | PlainMessage<QueryGetExecutableOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetExecutableOrderRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetExecutableOrderResponse
 */
export class QueryGetExecutableOrderResponse extends Message<QueryGetExecutableOrderResponse> {
  /**
   * @generated from field: pryzm.amm.v1.Order executable_order = 1;
   */
  executableOrder?: Order;

  constructor(data?: PartialMessage<QueryGetExecutableOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetExecutableOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "executable_order", kind: "message", T: Order },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetExecutableOrderResponse {
    return new QueryGetExecutableOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetExecutableOrderResponse {
    return new QueryGetExecutableOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetExecutableOrderResponse {
    return new QueryGetExecutableOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetExecutableOrderResponse | PlainMessage<QueryGetExecutableOrderResponse> | undefined, b: QueryGetExecutableOrderResponse | PlainMessage<QueryGetExecutableOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetExecutableOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllExecutableOrderRequest
 */
export class QueryAllExecutableOrderRequest extends Message<QueryAllExecutableOrderRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllExecutableOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllExecutableOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllExecutableOrderRequest {
    return new QueryAllExecutableOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllExecutableOrderRequest {
    return new QueryAllExecutableOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllExecutableOrderRequest {
    return new QueryAllExecutableOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllExecutableOrderRequest | PlainMessage<QueryAllExecutableOrderRequest> | undefined, b: QueryAllExecutableOrderRequest | PlainMessage<QueryAllExecutableOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllExecutableOrderRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllExecutableOrderResponse
 */
export class QueryAllExecutableOrderResponse extends Message<QueryAllExecutableOrderResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.Order executable_order = 1;
   */
  executableOrder: Order[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllExecutableOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllExecutableOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "executable_order", kind: "message", T: Order, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllExecutableOrderResponse {
    return new QueryAllExecutableOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllExecutableOrderResponse {
    return new QueryAllExecutableOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllExecutableOrderResponse {
    return new QueryAllExecutableOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllExecutableOrderResponse | PlainMessage<QueryAllExecutableOrderResponse> | undefined, b: QueryAllExecutableOrderResponse | PlainMessage<QueryAllExecutableOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllExecutableOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetScheduleOrderRequest
 */
export class QueryGetScheduleOrderRequest extends Message<QueryGetScheduleOrderRequest> {
  /**
   * @generated from field: uint64 order_id = 1;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetScheduleOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetScheduleOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetScheduleOrderRequest {
    return new QueryGetScheduleOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetScheduleOrderRequest {
    return new QueryGetScheduleOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetScheduleOrderRequest {
    return new QueryGetScheduleOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetScheduleOrderRequest | PlainMessage<QueryGetScheduleOrderRequest> | undefined, b: QueryGetScheduleOrderRequest | PlainMessage<QueryGetScheduleOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetScheduleOrderRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetScheduleOrderResponse
 */
export class QueryGetScheduleOrderResponse extends Message<QueryGetScheduleOrderResponse> {
  /**
   * @generated from field: pryzm.amm.v1.ScheduleOrder schedule_order = 1;
   */
  scheduleOrder?: ScheduleOrder;

  constructor(data?: PartialMessage<QueryGetScheduleOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetScheduleOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "schedule_order", kind: "message", T: ScheduleOrder },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetScheduleOrderResponse {
    return new QueryGetScheduleOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetScheduleOrderResponse {
    return new QueryGetScheduleOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetScheduleOrderResponse {
    return new QueryGetScheduleOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetScheduleOrderResponse | PlainMessage<QueryGetScheduleOrderResponse> | undefined, b: QueryGetScheduleOrderResponse | PlainMessage<QueryGetScheduleOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetScheduleOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllScheduleOrderRequest
 */
export class QueryAllScheduleOrderRequest extends Message<QueryAllScheduleOrderRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllScheduleOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllScheduleOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllScheduleOrderRequest {
    return new QueryAllScheduleOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllScheduleOrderRequest {
    return new QueryAllScheduleOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllScheduleOrderRequest {
    return new QueryAllScheduleOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllScheduleOrderRequest | PlainMessage<QueryAllScheduleOrderRequest> | undefined, b: QueryAllScheduleOrderRequest | PlainMessage<QueryAllScheduleOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllScheduleOrderRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllScheduleOrderResponse
 */
export class QueryAllScheduleOrderResponse extends Message<QueryAllScheduleOrderResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.ScheduleOrder schedule_order = 1;
   */
  scheduleOrder: ScheduleOrder[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllScheduleOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllScheduleOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "schedule_order", kind: "message", T: ScheduleOrder, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllScheduleOrderResponse {
    return new QueryAllScheduleOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllScheduleOrderResponse {
    return new QueryAllScheduleOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllScheduleOrderResponse {
    return new QueryAllScheduleOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllScheduleOrderResponse | PlainMessage<QueryAllScheduleOrderResponse> | undefined, b: QueryAllScheduleOrderResponse | PlainMessage<QueryAllScheduleOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllScheduleOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetOraclePricePairRequest
 */
export class QueryGetOraclePricePairRequest extends Message<QueryGetOraclePricePairRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  constructor(data?: PartialMessage<QueryGetOraclePricePairRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetOraclePricePairRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetOraclePricePairRequest {
    return new QueryGetOraclePricePairRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetOraclePricePairRequest {
    return new QueryGetOraclePricePairRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetOraclePricePairRequest {
    return new QueryGetOraclePricePairRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetOraclePricePairRequest | PlainMessage<QueryGetOraclePricePairRequest> | undefined, b: QueryGetOraclePricePairRequest | PlainMessage<QueryGetOraclePricePairRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetOraclePricePairRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetOraclePricePairResponse
 */
export class QueryGetOraclePricePairResponse extends Message<QueryGetOraclePricePairResponse> {
  /**
   * @generated from field: pryzm.amm.v1.OraclePricePair oracle_price_pair = 1;
   */
  oraclePricePair?: OraclePricePair;

  constructor(data?: PartialMessage<QueryGetOraclePricePairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetOraclePricePairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "oracle_price_pair", kind: "message", T: OraclePricePair },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetOraclePricePairResponse {
    return new QueryGetOraclePricePairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetOraclePricePairResponse {
    return new QueryGetOraclePricePairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetOraclePricePairResponse {
    return new QueryGetOraclePricePairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetOraclePricePairResponse | PlainMessage<QueryGetOraclePricePairResponse> | undefined, b: QueryGetOraclePricePairResponse | PlainMessage<QueryGetOraclePricePairResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetOraclePricePairResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllOraclePricePairRequest
 */
export class QueryAllOraclePricePairRequest extends Message<QueryAllOraclePricePairRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllOraclePricePairRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllOraclePricePairRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOraclePricePairRequest {
    return new QueryAllOraclePricePairRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOraclePricePairRequest {
    return new QueryAllOraclePricePairRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOraclePricePairRequest {
    return new QueryAllOraclePricePairRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllOraclePricePairRequest | PlainMessage<QueryAllOraclePricePairRequest> | undefined, b: QueryAllOraclePricePairRequest | PlainMessage<QueryAllOraclePricePairRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllOraclePricePairRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllOraclePricePairResponse
 */
export class QueryAllOraclePricePairResponse extends Message<QueryAllOraclePricePairResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.OraclePricePair oracle_price_pair = 1;
   */
  oraclePricePair: OraclePricePair[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllOraclePricePairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllOraclePricePairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "oracle_price_pair", kind: "message", T: OraclePricePair, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllOraclePricePairResponse {
    return new QueryAllOraclePricePairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllOraclePricePairResponse {
    return new QueryAllOraclePricePairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllOraclePricePairResponse {
    return new QueryAllOraclePricePairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllOraclePricePairResponse | PlainMessage<QueryAllOraclePricePairResponse> | undefined, b: QueryAllOraclePricePairResponse | PlainMessage<QueryAllOraclePricePairResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllOraclePricePairResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryVaultPauseModeRequest
 */
export class QueryVaultPauseModeRequest extends Message<QueryVaultPauseModeRequest> {
  constructor(data?: PartialMessage<QueryVaultPauseModeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryVaultPauseModeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVaultPauseModeRequest {
    return new QueryVaultPauseModeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVaultPauseModeRequest {
    return new QueryVaultPauseModeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVaultPauseModeRequest {
    return new QueryVaultPauseModeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVaultPauseModeRequest | PlainMessage<QueryVaultPauseModeRequest> | undefined, b: QueryVaultPauseModeRequest | PlainMessage<QueryVaultPauseModeRequest> | undefined): boolean {
    return proto3.util.equals(QueryVaultPauseModeRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryVaultPauseModeResponse
 */
export class QueryVaultPauseModeResponse extends Message<QueryVaultPauseModeResponse> {
  /**
   * @generated from field: bool paused = 1;
   */
  paused = false;

  constructor(data?: PartialMessage<QueryVaultPauseModeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryVaultPauseModeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "paused", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVaultPauseModeResponse {
    return new QueryVaultPauseModeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVaultPauseModeResponse {
    return new QueryVaultPauseModeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVaultPauseModeResponse {
    return new QueryVaultPauseModeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVaultPauseModeResponse | PlainMessage<QueryVaultPauseModeResponse> | undefined, b: QueryVaultPauseModeResponse | PlainMessage<QueryVaultPauseModeResponse> | undefined): boolean {
    return proto3.util.equals(QueryVaultPauseModeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPendingTokenIntroductionRequest
 */
export class QueryGetPendingTokenIntroductionRequest extends Message<QueryGetPendingTokenIntroductionRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  /**
   * @generated from field: uint64 target_pool_id = 2;
   */
  targetPoolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetPendingTokenIntroductionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPendingTokenIntroductionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "target_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPendingTokenIntroductionRequest {
    return new QueryGetPendingTokenIntroductionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPendingTokenIntroductionRequest {
    return new QueryGetPendingTokenIntroductionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPendingTokenIntroductionRequest {
    return new QueryGetPendingTokenIntroductionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPendingTokenIntroductionRequest | PlainMessage<QueryGetPendingTokenIntroductionRequest> | undefined, b: QueryGetPendingTokenIntroductionRequest | PlainMessage<QueryGetPendingTokenIntroductionRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPendingTokenIntroductionRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryGetPendingTokenIntroductionResponse
 */
export class QueryGetPendingTokenIntroductionResponse extends Message<QueryGetPendingTokenIntroductionResponse> {
  /**
   * @generated from field: pryzm.amm.v1.PendingTokenIntroduction pending_token_introduction = 1;
   */
  pendingTokenIntroduction?: PendingTokenIntroduction;

  constructor(data?: PartialMessage<QueryGetPendingTokenIntroductionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryGetPendingTokenIntroductionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_token_introduction", kind: "message", T: PendingTokenIntroduction },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPendingTokenIntroductionResponse {
    return new QueryGetPendingTokenIntroductionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPendingTokenIntroductionResponse {
    return new QueryGetPendingTokenIntroductionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPendingTokenIntroductionResponse {
    return new QueryGetPendingTokenIntroductionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPendingTokenIntroductionResponse | PlainMessage<QueryGetPendingTokenIntroductionResponse> | undefined, b: QueryGetPendingTokenIntroductionResponse | PlainMessage<QueryGetPendingTokenIntroductionResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPendingTokenIntroductionResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPendingTokenIntroductionRequest
 */
export class QueryAllPendingTokenIntroductionRequest extends Message<QueryAllPendingTokenIntroductionRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPendingTokenIntroductionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPendingTokenIntroductionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPendingTokenIntroductionRequest {
    return new QueryAllPendingTokenIntroductionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPendingTokenIntroductionRequest {
    return new QueryAllPendingTokenIntroductionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPendingTokenIntroductionRequest {
    return new QueryAllPendingTokenIntroductionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPendingTokenIntroductionRequest | PlainMessage<QueryAllPendingTokenIntroductionRequest> | undefined, b: QueryAllPendingTokenIntroductionRequest | PlainMessage<QueryAllPendingTokenIntroductionRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPendingTokenIntroductionRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllPendingTokenIntroductionResponse
 */
export class QueryAllPendingTokenIntroductionResponse extends Message<QueryAllPendingTokenIntroductionResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.PendingTokenIntroduction pending_token_introduction = 1;
   */
  pendingTokenIntroduction: PendingTokenIntroduction[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPendingTokenIntroductionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllPendingTokenIntroductionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_token_introduction", kind: "message", T: PendingTokenIntroduction, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPendingTokenIntroductionResponse {
    return new QueryAllPendingTokenIntroductionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPendingTokenIntroductionResponse {
    return new QueryAllPendingTokenIntroductionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPendingTokenIntroductionResponse {
    return new QueryAllPendingTokenIntroductionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPendingTokenIntroductionResponse | PlainMessage<QueryAllPendingTokenIntroductionResponse> | undefined, b: QueryAllPendingTokenIntroductionResponse | PlainMessage<QueryAllPendingTokenIntroductionResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPendingTokenIntroductionResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryYammPoolIdRequest
 */
export class QueryYammPoolIdRequest extends Message<QueryYammPoolIdRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  constructor(data?: PartialMessage<QueryYammPoolIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryYammPoolIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryYammPoolIdRequest {
    return new QueryYammPoolIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryYammPoolIdRequest {
    return new QueryYammPoolIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryYammPoolIdRequest {
    return new QueryYammPoolIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryYammPoolIdRequest | PlainMessage<QueryYammPoolIdRequest> | undefined, b: QueryYammPoolIdRequest | PlainMessage<QueryYammPoolIdRequest> | undefined): boolean {
    return proto3.util.equals(QueryYammPoolIdRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryYammPoolIdResponse
 */
export class QueryYammPoolIdResponse extends Message<QueryYammPoolIdResponse> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryYammPoolIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryYammPoolIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryYammPoolIdResponse {
    return new QueryYammPoolIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryYammPoolIdResponse {
    return new QueryYammPoolIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryYammPoolIdResponse {
    return new QueryYammPoolIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryYammPoolIdResponse | PlainMessage<QueryYammPoolIdResponse> | undefined, b: QueryYammPoolIdResponse | PlainMessage<QueryYammPoolIdResponse> | undefined): boolean {
    return proto3.util.equals(QueryYammPoolIdResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryOrderStepBoundsRequest
 */
export class QueryOrderStepBoundsRequest extends Message<QueryOrderStepBoundsRequest> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_in = 2;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 3;
   */
  tokenOut = "";

  /**
   * @generated from field: bool whitelisted_route = 4;
   */
  whitelistedRoute = false;

  constructor(data?: PartialMessage<QueryOrderStepBoundsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryOrderStepBoundsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "whitelisted_route", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderStepBoundsRequest {
    return new QueryOrderStepBoundsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderStepBoundsRequest {
    return new QueryOrderStepBoundsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderStepBoundsRequest {
    return new QueryOrderStepBoundsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderStepBoundsRequest | PlainMessage<QueryOrderStepBoundsRequest> | undefined, b: QueryOrderStepBoundsRequest | PlainMessage<QueryOrderStepBoundsRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrderStepBoundsRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryOrderStepBoundsResponse
 */
export class QueryOrderStepBoundsResponse extends Message<QueryOrderStepBoundsResponse> {
  /**
   * @generated from field: string min_step = 1;
   */
  minStep = "";

  /**
   * @generated from field: string max_step = 2;
   */
  maxStep = "";

  constructor(data?: PartialMessage<QueryOrderStepBoundsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryOrderStepBoundsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_step", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "max_step", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderStepBoundsResponse {
    return new QueryOrderStepBoundsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderStepBoundsResponse {
    return new QueryOrderStepBoundsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderStepBoundsResponse {
    return new QueryOrderStepBoundsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderStepBoundsResponse | PlainMessage<QueryOrderStepBoundsResponse> | undefined, b: QueryOrderStepBoundsResponse | PlainMessage<QueryOrderStepBoundsResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrderStepBoundsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllDisabledOrderPairRequest
 */
export class QueryAllDisabledOrderPairRequest extends Message<QueryAllDisabledOrderPairRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllDisabledOrderPairRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllDisabledOrderPairRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDisabledOrderPairRequest {
    return new QueryAllDisabledOrderPairRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDisabledOrderPairRequest {
    return new QueryAllDisabledOrderPairRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDisabledOrderPairRequest {
    return new QueryAllDisabledOrderPairRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllDisabledOrderPairRequest | PlainMessage<QueryAllDisabledOrderPairRequest> | undefined, b: QueryAllDisabledOrderPairRequest | PlainMessage<QueryAllDisabledOrderPairRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllDisabledOrderPairRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryAllDisabledOrderPairResponse
 */
export class QueryAllDisabledOrderPairResponse extends Message<QueryAllDisabledOrderPairResponse> {
  /**
   * @generated from field: repeated pryzm.amm.v1.DisabledOrderPair disabled_order_pair = 1;
   */
  disabledOrderPair: DisabledOrderPair[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllDisabledOrderPairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryAllDisabledOrderPairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "disabled_order_pair", kind: "message", T: DisabledOrderPair, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllDisabledOrderPairResponse {
    return new QueryAllDisabledOrderPairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllDisabledOrderPairResponse {
    return new QueryAllDisabledOrderPairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllDisabledOrderPairResponse {
    return new QueryAllDisabledOrderPairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllDisabledOrderPairResponse | PlainMessage<QueryAllDisabledOrderPairResponse> | undefined, b: QueryAllDisabledOrderPairResponse | PlainMessage<QueryAllDisabledOrderPairResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllDisabledOrderPairResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryOrderPairDisabledRequest
 */
export class QueryOrderPairDisabledRequest extends Message<QueryOrderPairDisabledRequest> {
  /**
   * @generated from field: bool whitelisted_route = 1;
   */
  whitelistedRoute = false;

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_in = 3;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 4;
   */
  tokenOut = "";

  constructor(data?: PartialMessage<QueryOrderPairDisabledRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryOrderPairDisabledRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "whitelisted_route", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderPairDisabledRequest {
    return new QueryOrderPairDisabledRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderPairDisabledRequest {
    return new QueryOrderPairDisabledRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderPairDisabledRequest {
    return new QueryOrderPairDisabledRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderPairDisabledRequest | PlainMessage<QueryOrderPairDisabledRequest> | undefined, b: QueryOrderPairDisabledRequest | PlainMessage<QueryOrderPairDisabledRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrderPairDisabledRequest, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.QueryOrderPairDisabledResponse
 */
export class QueryOrderPairDisabledResponse extends Message<QueryOrderPairDisabledResponse> {
  /**
   * @generated from field: bool disabled = 1;
   */
  disabled = false;

  constructor(data?: PartialMessage<QueryOrderPairDisabledResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.QueryOrderPairDisabledResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "disabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderPairDisabledResponse {
    return new QueryOrderPairDisabledResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderPairDisabledResponse {
    return new QueryOrderPairDisabledResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderPairDisabledResponse {
    return new QueryOrderPairDisabledResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderPairDisabledResponse | PlainMessage<QueryOrderPairDisabledResponse> | undefined, b: QueryOrderPairDisabledResponse | PlainMessage<QueryOrderPairDisabledResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrderPairDisabledResponse, a, b);
  }
}

