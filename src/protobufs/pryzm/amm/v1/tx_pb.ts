// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/amm/v1/tx.proto (package pryzm.amm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Swap, SwapStep, SwapType } from "./operations_pb.js";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
import { PoolPauseWindow, SwapFeeUpdateParams } from "./pool_pb.js";
import { TokenWeight } from "./token_weight_pb.js";
import { YammConfiguration } from "./yamm_configuration_pb.js";
import { WhitelistedRoute } from "./whitelisted_route_pb.js";
import { DisabledOrderPair, Order } from "./order_pb.js";
import { MatchedPairSummary, PairMatchProposal } from "./pair_match_proposal_pb.js";
import { TokenCircuitBreakerSettings } from "./token_circuit_breaker_settings_pb.js";
import { OraclePricePair } from "./oracle_price_pair_pb.js";
import { AuthorizationParameters, GasParameters, GeneralPoolParameters, OrderParameters, WeightedPoolParameters, YammParameters } from "./params_pb.js";

/**
 * @generated from message pryzm.amm.v1.MsgSingleSwap
 */
export class MsgSingleSwap extends Message<MsgSingleSwap> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: pryzm.amm.v1.Swap swap = 2;
   */
  swap?: Swap;

  /**
   * @generated from field: string max_amount_in = 3;
   */
  maxAmountIn = "";

  /**
   * @generated from field: string min_amount_out = 4;
   */
  minAmountOut = "";

  constructor(data?: PartialMessage<MsgSingleSwap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSingleSwap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "swap", kind: "message", T: Swap },
    { no: 3, name: "max_amount_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "min_amount_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSingleSwap {
    return new MsgSingleSwap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSingleSwap {
    return new MsgSingleSwap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSingleSwap {
    return new MsgSingleSwap().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSingleSwap | PlainMessage<MsgSingleSwap> | undefined, b: MsgSingleSwap | PlainMessage<MsgSingleSwap> | undefined): boolean {
    return proto3.util.equals(MsgSingleSwap, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSingleSwapResponse
 */
export class MsgSingleSwapResponse extends Message<MsgSingleSwapResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_out = 1;
   */
  amountOut?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_in = 2;
   */
  amountIn?: Coin;

  /**
   * protocol fee does not contain the y_trade fee and refractor fee
   * which is paid in case of a yAsset trade
   *
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee?: Coin;

  constructor(data?: PartialMessage<MsgSingleSwapResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSingleSwapResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amount_out", kind: "message", T: Coin },
    { no: 2, name: "amount_in", kind: "message", T: Coin },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSingleSwapResponse {
    return new MsgSingleSwapResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSingleSwapResponse {
    return new MsgSingleSwapResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSingleSwapResponse {
    return new MsgSingleSwapResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSingleSwapResponse | PlainMessage<MsgSingleSwapResponse> | undefined, b: MsgSingleSwapResponse | PlainMessage<MsgSingleSwapResponse> | undefined): boolean {
    return proto3.util.equals(MsgSingleSwapResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgJoinAllTokensExactLpt
 */
export class MsgJoinAllTokensExactLpt extends Message<MsgJoinAllTokensExactLpt> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_out = 3;
   */
  lptOut = "";

  /**
   * is not casted to coins, to allow for zero limits
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin max_amounts_in = 4;
   */
  maxAmountsIn: Coin[] = [];

  constructor(data?: PartialMessage<MsgJoinAllTokensExactLpt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgJoinAllTokensExactLpt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "lpt_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "max_amounts_in", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgJoinAllTokensExactLpt {
    return new MsgJoinAllTokensExactLpt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgJoinAllTokensExactLpt {
    return new MsgJoinAllTokensExactLpt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgJoinAllTokensExactLpt {
    return new MsgJoinAllTokensExactLpt().fromJsonString(jsonString, options);
  }

  static equals(a: MsgJoinAllTokensExactLpt | PlainMessage<MsgJoinAllTokensExactLpt> | undefined, b: MsgJoinAllTokensExactLpt | PlainMessage<MsgJoinAllTokensExactLpt> | undefined): boolean {
    return proto3.util.equals(MsgJoinAllTokensExactLpt, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgJoinAllTokensExactLptResponse
 */
export class MsgJoinAllTokensExactLptResponse extends Message<MsgJoinAllTokensExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee: Coin[] = [];

  constructor(data?: PartialMessage<MsgJoinAllTokensExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgJoinAllTokensExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgJoinAllTokensExactLptResponse {
    return new MsgJoinAllTokensExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgJoinAllTokensExactLptResponse {
    return new MsgJoinAllTokensExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgJoinAllTokensExactLptResponse {
    return new MsgJoinAllTokensExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgJoinAllTokensExactLptResponse | PlainMessage<MsgJoinAllTokensExactLptResponse> | undefined, b: MsgJoinAllTokensExactLptResponse | PlainMessage<MsgJoinAllTokensExactLptResponse> | undefined): boolean {
    return proto3.util.equals(MsgJoinAllTokensExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgJoinTokenExactLpt
 */
export class MsgJoinTokenExactLpt extends Message<MsgJoinTokenExactLpt> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_out = 3;
   */
  lptOut = "";

  /**
   * @generated from field: string token_in = 4;
   */
  tokenIn = "";

  /**
   * @generated from field: string max_amount_in = 5;
   */
  maxAmountIn = "";

  constructor(data?: PartialMessage<MsgJoinTokenExactLpt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgJoinTokenExactLpt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "lpt_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "max_amount_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgJoinTokenExactLpt {
    return new MsgJoinTokenExactLpt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgJoinTokenExactLpt {
    return new MsgJoinTokenExactLpt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgJoinTokenExactLpt {
    return new MsgJoinTokenExactLpt().fromJsonString(jsonString, options);
  }

  static equals(a: MsgJoinTokenExactLpt | PlainMessage<MsgJoinTokenExactLpt> | undefined, b: MsgJoinTokenExactLpt | PlainMessage<MsgJoinTokenExactLpt> | undefined): boolean {
    return proto3.util.equals(MsgJoinTokenExactLpt, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgJoinTokenExactLptResponse
 */
export class MsgJoinTokenExactLptResponse extends Message<MsgJoinTokenExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_in = 2;
   */
  amountIn?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee?: Coin;

  constructor(data?: PartialMessage<MsgJoinTokenExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgJoinTokenExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amount_in", kind: "message", T: Coin },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgJoinTokenExactLptResponse {
    return new MsgJoinTokenExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgJoinTokenExactLptResponse {
    return new MsgJoinTokenExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgJoinTokenExactLptResponse {
    return new MsgJoinTokenExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgJoinTokenExactLptResponse | PlainMessage<MsgJoinTokenExactLptResponse> | undefined, b: MsgJoinTokenExactLptResponse | PlainMessage<MsgJoinTokenExactLptResponse> | undefined): boolean {
    return proto3.util.equals(MsgJoinTokenExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgJoinExactTokens
 */
export class MsgJoinExactTokens extends Message<MsgJoinExactTokens> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 3;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: string min_lpt_out = 4;
   */
  minLptOut = "";

  constructor(data?: PartialMessage<MsgJoinExactTokens>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgJoinExactTokens";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "min_lpt_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgJoinExactTokens {
    return new MsgJoinExactTokens().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgJoinExactTokens {
    return new MsgJoinExactTokens().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgJoinExactTokens {
    return new MsgJoinExactTokens().fromJsonString(jsonString, options);
  }

  static equals(a: MsgJoinExactTokens | PlainMessage<MsgJoinExactTokens> | undefined, b: MsgJoinExactTokens | PlainMessage<MsgJoinExactTokens> | undefined): boolean {
    return proto3.util.equals(MsgJoinExactTokens, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgJoinExactTokensResponse
 */
export class MsgJoinExactTokensResponse extends Message<MsgJoinExactTokensResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<MsgJoinExactTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgJoinExactTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgJoinExactTokensResponse {
    return new MsgJoinExactTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgJoinExactTokensResponse {
    return new MsgJoinExactTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgJoinExactTokensResponse {
    return new MsgJoinExactTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgJoinExactTokensResponse | PlainMessage<MsgJoinExactTokensResponse> | undefined, b: MsgJoinExactTokensResponse | PlainMessage<MsgJoinExactTokensResponse> | undefined): boolean {
    return proto3.util.equals(MsgJoinExactTokensResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgZeroImpactJoinYamm
 */
export class MsgZeroImpactJoinYamm extends Message<MsgZeroImpactJoinYamm> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: cosmos.base.v1beta1.Coin c_amount_in = 2;
   */
  cAmountIn?: Coin;

  /**
   * @generated from field: string min_lpt_out = 3;
   */
  minLptOut = "";

  constructor(data?: PartialMessage<MsgZeroImpactJoinYamm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgZeroImpactJoinYamm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "c_amount_in", kind: "message", T: Coin },
    { no: 3, name: "min_lpt_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgZeroImpactJoinYamm {
    return new MsgZeroImpactJoinYamm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgZeroImpactJoinYamm {
    return new MsgZeroImpactJoinYamm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgZeroImpactJoinYamm {
    return new MsgZeroImpactJoinYamm().fromJsonString(jsonString, options);
  }

  static equals(a: MsgZeroImpactJoinYamm | PlainMessage<MsgZeroImpactJoinYamm> | undefined, b: MsgZeroImpactJoinYamm | PlainMessage<MsgZeroImpactJoinYamm> | undefined): boolean {
    return proto3.util.equals(MsgZeroImpactJoinYamm, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgZeroImpactJoinYammResponse
 */
export class MsgZeroImpactJoinYammResponse extends Message<MsgZeroImpactJoinYammResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin y_out = 2;
   */
  yOut: Coin[] = [];

  /**
   * @generated from field: cosmos.base.v1beta1.Coin refract_fee = 3;
   */
  refractFee?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin join_protocol_fee = 4;
   */
  joinProtocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 5;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<MsgZeroImpactJoinYammResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgZeroImpactJoinYammResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "y_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "refract_fee", kind: "message", T: Coin },
    { no: 4, name: "join_protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgZeroImpactJoinYammResponse {
    return new MsgZeroImpactJoinYammResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgZeroImpactJoinYammResponse {
    return new MsgZeroImpactJoinYammResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgZeroImpactJoinYammResponse {
    return new MsgZeroImpactJoinYammResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgZeroImpactJoinYammResponse | PlainMessage<MsgZeroImpactJoinYammResponse> | undefined, b: MsgZeroImpactJoinYammResponse | PlainMessage<MsgZeroImpactJoinYammResponse> | undefined): boolean {
    return proto3.util.equals(MsgZeroImpactJoinYammResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgExitExactTokens
 */
export class MsgExitExactTokens extends Message<MsgExitExactTokens> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 3;
   */
  amountsOut: Coin[] = [];

  /**
   * @generated from field: string max_lpt_in = 4;
   */
  maxLptIn = "";

  constructor(data?: PartialMessage<MsgExitExactTokens>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgExitExactTokens";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "max_lpt_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExitExactTokens {
    return new MsgExitExactTokens().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExitExactTokens {
    return new MsgExitExactTokens().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExitExactTokens {
    return new MsgExitExactTokens().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExitExactTokens | PlainMessage<MsgExitExactTokens> | undefined, b: MsgExitExactTokens | PlainMessage<MsgExitExactTokens> | undefined): boolean {
    return proto3.util.equals(MsgExitExactTokens, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgExitExactTokensResponse
 */
export class MsgExitExactTokensResponse extends Message<MsgExitExactTokensResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<MsgExitExactTokensResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgExitExactTokensResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExitExactTokensResponse {
    return new MsgExitExactTokensResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExitExactTokensResponse {
    return new MsgExitExactTokensResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExitExactTokensResponse {
    return new MsgExitExactTokensResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExitExactTokensResponse | PlainMessage<MsgExitExactTokensResponse> | undefined, b: MsgExitExactTokensResponse | PlainMessage<MsgExitExactTokensResponse> | undefined): boolean {
    return proto3.util.equals(MsgExitExactTokensResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgExitTokenExactLpt
 */
export class MsgExitTokenExactLpt extends Message<MsgExitTokenExactLpt> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_in = 3;
   */
  lptIn = "";

  /**
   * @generated from field: string token_out = 4;
   */
  tokenOut = "";

  /**
   * @generated from field: string min_amount_out = 5;
   */
  minAmountOut = "";

  constructor(data?: PartialMessage<MsgExitTokenExactLpt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgExitTokenExactLpt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "lpt_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "min_amount_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExitTokenExactLpt {
    return new MsgExitTokenExactLpt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExitTokenExactLpt {
    return new MsgExitTokenExactLpt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExitTokenExactLpt {
    return new MsgExitTokenExactLpt().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExitTokenExactLpt | PlainMessage<MsgExitTokenExactLpt> | undefined, b: MsgExitTokenExactLpt | PlainMessage<MsgExitTokenExactLpt> | undefined): boolean {
    return proto3.util.equals(MsgExitTokenExactLpt, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgExitTokenExactLptResponse
 */
export class MsgExitTokenExactLptResponse extends Message<MsgExitTokenExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount_out = 2;
   */
  amountOut?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin swap_fee = 4;
   */
  swapFee?: Coin;

  constructor(data?: PartialMessage<MsgExitTokenExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgExitTokenExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amount_out", kind: "message", T: Coin },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
    { no: 4, name: "swap_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExitTokenExactLptResponse {
    return new MsgExitTokenExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExitTokenExactLptResponse {
    return new MsgExitTokenExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExitTokenExactLptResponse {
    return new MsgExitTokenExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExitTokenExactLptResponse | PlainMessage<MsgExitTokenExactLptResponse> | undefined, b: MsgExitTokenExactLptResponse | PlainMessage<MsgExitTokenExactLptResponse> | undefined): boolean {
    return proto3.util.equals(MsgExitTokenExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgExitAllTokensExactLpt
 */
export class MsgExitAllTokensExactLpt extends Message<MsgExitAllTokensExactLpt> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_in = 3;
   */
  lptIn = "";

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin min_amounts_out = 4;
   */
  minAmountsOut: Coin[] = [];

  constructor(data?: PartialMessage<MsgExitAllTokensExactLpt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgExitAllTokensExactLpt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "lpt_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "min_amounts_out", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExitAllTokensExactLpt {
    return new MsgExitAllTokensExactLpt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExitAllTokensExactLpt {
    return new MsgExitAllTokensExactLpt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExitAllTokensExactLpt {
    return new MsgExitAllTokensExactLpt().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExitAllTokensExactLpt | PlainMessage<MsgExitAllTokensExactLpt> | undefined, b: MsgExitAllTokensExactLpt | PlainMessage<MsgExitAllTokensExactLpt> | undefined): boolean {
    return proto3.util.equals(MsgExitAllTokensExactLpt, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgExitAllTokensExactLptResponse
 */
export class MsgExitAllTokensExactLptResponse extends Message<MsgExitAllTokensExactLptResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  /**
   * @generated from field: cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee?: Coin;

  constructor(data?: PartialMessage<MsgExitAllTokensExactLptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgExitAllTokensExactLptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExitAllTokensExactLptResponse {
    return new MsgExitAllTokensExactLptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExitAllTokensExactLptResponse {
    return new MsgExitAllTokensExactLptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExitAllTokensExactLptResponse {
    return new MsgExitAllTokensExactLptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExitAllTokensExactLptResponse | PlainMessage<MsgExitAllTokensExactLptResponse> | undefined, b: MsgExitAllTokensExactLptResponse | PlainMessage<MsgExitAllTokensExactLptResponse> | undefined): boolean {
    return proto3.util.equals(MsgExitAllTokensExactLptResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.CreateWeightedPoolToken
 */
export class CreateWeightedPoolToken extends Message<CreateWeightedPoolToken> {
  /**
   * @generated from field: string denom = 1;
   */
  denom = "";

  /**
   * @generated from field: string normalized_weight = 3;
   */
  normalizedWeight = "";

  constructor(data?: PartialMessage<CreateWeightedPoolToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.CreateWeightedPoolToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "normalized_weight", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWeightedPoolToken {
    return new CreateWeightedPoolToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWeightedPoolToken {
    return new CreateWeightedPoolToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWeightedPoolToken {
    return new CreateWeightedPoolToken().fromJsonString(jsonString, options);
  }

  static equals(a: CreateWeightedPoolToken | PlainMessage<CreateWeightedPoolToken> | undefined, b: CreateWeightedPoolToken | PlainMessage<CreateWeightedPoolToken> | undefined): boolean {
    return proto3.util.equals(CreateWeightedPoolToken, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCreateWeightedPool
 */
export class MsgCreateWeightedPool extends Message<MsgCreateWeightedPool> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * if update params is nil, this is the actual swap fee, o.w. you need to apply gradual update between this start and the end in params.
   *
   * @generated from field: string start_swap_fee_ratio = 3;
   */
  startSwapFeeRatio = "";

  /**
   * @generated from field: int64 pause_window_duration_millis = 4;
   */
  pauseWindowDurationMillis = protoInt64.zero;

  /**
   * @generated from field: int64 pause_buffer_duration_millis = 5;
   */
  pauseBufferDurationMillis = protoInt64.zero;

  /**
   * @generated from field: repeated pryzm.amm.v1.CreateWeightedPoolToken tokens = 6;
   */
  tokens: CreateWeightedPoolToken[] = [];

  /**
   * if not empty, only these addresses can initialize the pool
   *
   * @generated from field: repeated string initialization_allow_list = 12;
   */
  initializationAllowList: string[] = [];

  /**
   * if the creator is admin, they can create pools owned by governance
   * NOTE: when public pool creation is not allowed, admin must set this to true
   * NOTE: governance can leave this to false, as it already is the creator of the msg
   *
   * @generated from field: bool force_gov_owner = 13;
   */
  forceGovOwner = false;

  /**
   * @generated from field: repeated string admins = 14;
   */
  admins: string[] = [];

  /**
   * @generated from field: repeated string pause_allow_list = 15;
   */
  pauseAllowList: string[] = [];

  /**
   * @generated from field: pryzm.amm.v1.SwapFeeUpdateParams swap_fee_update_params = 16;
   */
  swapFeeUpdateParams?: SwapFeeUpdateParams;

  /**
   * @generated from field: bool join_blocked = 17;
   */
  joinBlocked = false;

  constructor(data?: PartialMessage<MsgCreateWeightedPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCreateWeightedPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_swap_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pause_window_duration_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "pause_buffer_duration_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "tokens", kind: "message", T: CreateWeightedPoolToken, repeated: true },
    { no: 12, name: "initialization_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 13, name: "force_gov_owner", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "admins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 15, name: "pause_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 16, name: "swap_fee_update_params", kind: "message", T: SwapFeeUpdateParams },
    { no: 17, name: "join_blocked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateWeightedPool {
    return new MsgCreateWeightedPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateWeightedPool {
    return new MsgCreateWeightedPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateWeightedPool {
    return new MsgCreateWeightedPool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateWeightedPool | PlainMessage<MsgCreateWeightedPool> | undefined, b: MsgCreateWeightedPool | PlainMessage<MsgCreateWeightedPool> | undefined): boolean {
    return proto3.util.equals(MsgCreateWeightedPool, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCreateWeightedPoolResponse
 */
export class MsgCreateWeightedPoolResponse extends Message<MsgCreateWeightedPoolResponse> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCreateWeightedPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCreateWeightedPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateWeightedPoolResponse {
    return new MsgCreateWeightedPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateWeightedPoolResponse {
    return new MsgCreateWeightedPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateWeightedPoolResponse {
    return new MsgCreateWeightedPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateWeightedPoolResponse | PlainMessage<MsgCreateWeightedPoolResponse> | undefined, b: MsgCreateWeightedPoolResponse | PlainMessage<MsgCreateWeightedPoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateWeightedPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateSwapFee
 */
export class MsgUpdateSwapFee extends Message<MsgUpdateSwapFee> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * if update params is nil, this is the actual swap fee, o.w. you need to apply gradual update between this start and the end in params.
   *
   * @generated from field: string start_swap_fee_ratio = 3;
   */
  startSwapFeeRatio = "";

  /**
   * @generated from field: pryzm.amm.v1.SwapFeeUpdateParams gradual_update_params = 4;
   */
  gradualUpdateParams?: SwapFeeUpdateParams;

  constructor(data?: PartialMessage<MsgUpdateSwapFee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateSwapFee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "start_swap_fee_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "gradual_update_params", kind: "message", T: SwapFeeUpdateParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateSwapFee {
    return new MsgUpdateSwapFee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateSwapFee {
    return new MsgUpdateSwapFee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateSwapFee {
    return new MsgUpdateSwapFee().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateSwapFee | PlainMessage<MsgUpdateSwapFee> | undefined, b: MsgUpdateSwapFee | PlainMessage<MsgUpdateSwapFee> | undefined): boolean {
    return proto3.util.equals(MsgUpdateSwapFee, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateSwapFeeResponse
 */
export class MsgUpdateSwapFeeResponse extends Message<MsgUpdateSwapFeeResponse> {
  constructor(data?: PartialMessage<MsgUpdateSwapFeeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateSwapFeeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateSwapFeeResponse {
    return new MsgUpdateSwapFeeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateSwapFeeResponse {
    return new MsgUpdateSwapFeeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateSwapFeeResponse {
    return new MsgUpdateSwapFeeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateSwapFeeResponse | PlainMessage<MsgUpdateSwapFeeResponse> | undefined, b: MsgUpdateSwapFeeResponse | PlainMessage<MsgUpdateSwapFeeResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateSwapFeeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgInitializePool
 */
export class MsgInitializePool extends Message<MsgInitializePool> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 3;
   */
  amountsIn: Coin[] = [];

  /**
   * this is only supported for weighted pools
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin permanent_virtual_balances = 4;
   */
  permanentVirtualBalances: Coin[] = [];

  constructor(data?: PartialMessage<MsgInitializePool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgInitializePool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "permanent_virtual_balances", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgInitializePool {
    return new MsgInitializePool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgInitializePool {
    return new MsgInitializePool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgInitializePool {
    return new MsgInitializePool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgInitializePool | PlainMessage<MsgInitializePool> | undefined, b: MsgInitializePool | PlainMessage<MsgInitializePool> | undefined): boolean {
    return proto3.util.equals(MsgInitializePool, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgInitializePoolResponse
 */
export class MsgInitializePoolResponse extends Message<MsgInitializePoolResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_out = 1;
   */
  lptOut?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 2;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin protocol_fee = 3;
   */
  protocolFee: Coin[] = [];

  constructor(data?: PartialMessage<MsgInitializePoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgInitializePoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_out", kind: "message", T: Coin },
    { no: 2, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "protocol_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgInitializePoolResponse {
    return new MsgInitializePoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgInitializePoolResponse {
    return new MsgInitializePoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgInitializePoolResponse {
    return new MsgInitializePoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgInitializePoolResponse | PlainMessage<MsgInitializePoolResponse> | undefined, b: MsgInitializePoolResponse | PlainMessage<MsgInitializePoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgInitializePoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateWeights
 */
export class MsgUpdateWeights extends Message<MsgUpdateWeights> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated pryzm.amm.v1.TokenWeight token_weights = 3;
   */
  tokenWeights: TokenWeight[] = [];

  /**
   * @generated from field: int64 start_time_unix_millis = 4;
   */
  startTimeUnixMillis = protoInt64.zero;

  /**
   * @generated from field: int64 end_time_unix_millis = 5;
   */
  endTimeUnixMillis = protoInt64.zero;

  constructor(data?: PartialMessage<MsgUpdateWeights>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateWeights";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_weights", kind: "message", T: TokenWeight, repeated: true },
    { no: 4, name: "start_time_unix_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "end_time_unix_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateWeights {
    return new MsgUpdateWeights().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateWeights {
    return new MsgUpdateWeights().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateWeights {
    return new MsgUpdateWeights().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateWeights | PlainMessage<MsgUpdateWeights> | undefined, b: MsgUpdateWeights | PlainMessage<MsgUpdateWeights> | undefined): boolean {
    return proto3.util.equals(MsgUpdateWeights, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateWeightsResponse
 */
export class MsgUpdateWeightsResponse extends Message<MsgUpdateWeightsResponse> {
  constructor(data?: PartialMessage<MsgUpdateWeightsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateWeightsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateWeightsResponse {
    return new MsgUpdateWeightsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateWeightsResponse {
    return new MsgUpdateWeightsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateWeightsResponse {
    return new MsgUpdateWeightsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateWeightsResponse | PlainMessage<MsgUpdateWeightsResponse> | undefined, b: MsgUpdateWeightsResponse | PlainMessage<MsgUpdateWeightsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateWeightsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgBatchSwap
 */
export class MsgBatchSwap extends Message<MsgBatchSwap> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: pryzm.amm.v1.SwapType swap_type = 2;
   */
  swapType = SwapType.GIVEN_IN;

  /**
   * @generated from field: repeated pryzm.amm.v1.SwapStep steps = 3;
   */
  steps: SwapStep[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin min_amounts_out = 4;
   */
  minAmountsOut: Coin[] = [];

  /**
   * is not casted to coins, to allow for zero limits
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin max_amounts_in = 5;
   */
  maxAmountsIn: Coin[] = [];

  constructor(data?: PartialMessage<MsgBatchSwap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgBatchSwap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "swap_type", kind: "enum", T: proto3.getEnumType(SwapType) },
    { no: 3, name: "steps", kind: "message", T: SwapStep, repeated: true },
    { no: 4, name: "min_amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "max_amounts_in", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBatchSwap {
    return new MsgBatchSwap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBatchSwap {
    return new MsgBatchSwap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBatchSwap {
    return new MsgBatchSwap().fromJsonString(jsonString, options);
  }

  static equals(a: MsgBatchSwap | PlainMessage<MsgBatchSwap> | undefined, b: MsgBatchSwap | PlainMessage<MsgBatchSwap> | undefined): boolean {
    return proto3.util.equals(MsgBatchSwap, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgBatchSwapResponse
 */
export class MsgBatchSwapResponse extends Message<MsgBatchSwapResponse> {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_in = 1;
   */
  amountsIn: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  /**
   * protocol fee does not contain the y_trade fee and refractor fee
   * which is paid in case of a yAsset trade
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_protocol_fee = 3;
   */
  swapProtocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin join_exit_protocol_fee = 4;
   */
  joinExitProtocolFee: Coin[] = [];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin swap_fee = 5;
   */
  swapFee: Coin[] = [];

  constructor(data?: PartialMessage<MsgBatchSwapResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgBatchSwapResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amounts_in", kind: "message", T: Coin, repeated: true },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
    { no: 3, name: "swap_protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 4, name: "join_exit_protocol_fee", kind: "message", T: Coin, repeated: true },
    { no: 5, name: "swap_fee", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBatchSwapResponse {
    return new MsgBatchSwapResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBatchSwapResponse {
    return new MsgBatchSwapResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBatchSwapResponse {
    return new MsgBatchSwapResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgBatchSwapResponse | PlainMessage<MsgBatchSwapResponse> | undefined, b: MsgBatchSwapResponse | PlainMessage<MsgBatchSwapResponse> | undefined): boolean {
    return proto3.util.equals(MsgBatchSwapResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetYammConfiguration
 */
export class MsgSetYammConfiguration extends Message<MsgSetYammConfiguration> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: pryzm.amm.v1.YammConfiguration configuration = 2;
   */
  configuration?: YammConfiguration;

  constructor(data?: PartialMessage<MsgSetYammConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetYammConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "configuration", kind: "message", T: YammConfiguration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetYammConfiguration {
    return new MsgSetYammConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetYammConfiguration {
    return new MsgSetYammConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetYammConfiguration {
    return new MsgSetYammConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetYammConfiguration | PlainMessage<MsgSetYammConfiguration> | undefined, b: MsgSetYammConfiguration | PlainMessage<MsgSetYammConfiguration> | undefined): boolean {
    return proto3.util.equals(MsgSetYammConfiguration, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetYammConfigurationResponse
 */
export class MsgSetYammConfigurationResponse extends Message<MsgSetYammConfigurationResponse> {
  constructor(data?: PartialMessage<MsgSetYammConfigurationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetYammConfigurationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetYammConfigurationResponse {
    return new MsgSetYammConfigurationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetYammConfigurationResponse {
    return new MsgSetYammConfigurationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetYammConfigurationResponse {
    return new MsgSetYammConfigurationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetYammConfigurationResponse | PlainMessage<MsgSetYammConfigurationResponse> | undefined, b: MsgSetYammConfigurationResponse | PlainMessage<MsgSetYammConfigurationResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetYammConfigurationResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgWhitelistRoute
 */
export class MsgWhitelistRoute extends Message<MsgWhitelistRoute> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: pryzm.amm.v1.WhitelistedRoute whitelisted_route = 2;
   */
  whitelistedRoute?: WhitelistedRoute;

  constructor(data?: PartialMessage<MsgWhitelistRoute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgWhitelistRoute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "whitelisted_route", kind: "message", T: WhitelistedRoute },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgWhitelistRoute {
    return new MsgWhitelistRoute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgWhitelistRoute {
    return new MsgWhitelistRoute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgWhitelistRoute {
    return new MsgWhitelistRoute().fromJsonString(jsonString, options);
  }

  static equals(a: MsgWhitelistRoute | PlainMessage<MsgWhitelistRoute> | undefined, b: MsgWhitelistRoute | PlainMessage<MsgWhitelistRoute> | undefined): boolean {
    return proto3.util.equals(MsgWhitelistRoute, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgWhitelistRouteResponse
 */
export class MsgWhitelistRouteResponse extends Message<MsgWhitelistRouteResponse> {
  constructor(data?: PartialMessage<MsgWhitelistRouteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgWhitelistRouteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgWhitelistRouteResponse {
    return new MsgWhitelistRouteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgWhitelistRouteResponse {
    return new MsgWhitelistRouteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgWhitelistRouteResponse {
    return new MsgWhitelistRouteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgWhitelistRouteResponse | PlainMessage<MsgWhitelistRouteResponse> | undefined, b: MsgWhitelistRouteResponse | PlainMessage<MsgWhitelistRouteResponse> | undefined): boolean {
    return proto3.util.equals(MsgWhitelistRouteResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetWhitelistedRouteEnabled
 */
export class MsgSetWhitelistedRouteEnabled extends Message<MsgSetWhitelistedRouteEnabled> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string token_in = 2;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 3;
   */
  tokenOut = "";

  /**
   * @generated from field: bool enabled = 4;
   */
  enabled = false;

  constructor(data?: PartialMessage<MsgSetWhitelistedRouteEnabled>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetWhitelistedRouteEnabled";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetWhitelistedRouteEnabled {
    return new MsgSetWhitelistedRouteEnabled().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetWhitelistedRouteEnabled {
    return new MsgSetWhitelistedRouteEnabled().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetWhitelistedRouteEnabled {
    return new MsgSetWhitelistedRouteEnabled().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetWhitelistedRouteEnabled | PlainMessage<MsgSetWhitelistedRouteEnabled> | undefined, b: MsgSetWhitelistedRouteEnabled | PlainMessage<MsgSetWhitelistedRouteEnabled> | undefined): boolean {
    return proto3.util.equals(MsgSetWhitelistedRouteEnabled, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetWhitelistedRouteEnabledResponse
 */
export class MsgSetWhitelistedRouteEnabledResponse extends Message<MsgSetWhitelistedRouteEnabledResponse> {
  constructor(data?: PartialMessage<MsgSetWhitelistedRouteEnabledResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetWhitelistedRouteEnabledResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetWhitelistedRouteEnabledResponse {
    return new MsgSetWhitelistedRouteEnabledResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetWhitelistedRouteEnabledResponse {
    return new MsgSetWhitelistedRouteEnabledResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetWhitelistedRouteEnabledResponse {
    return new MsgSetWhitelistedRouteEnabledResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetWhitelistedRouteEnabledResponse | PlainMessage<MsgSetWhitelistedRouteEnabledResponse> | undefined, b: MsgSetWhitelistedRouteEnabledResponse | PlainMessage<MsgSetWhitelistedRouteEnabledResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetWhitelistedRouteEnabledResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSubmitOrder
 */
export class MsgSubmitOrder extends Message<MsgSubmitOrder> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_in = 3;
   */
  tokenIn = "";

  /**
   * @generated from field: string token_out = 4;
   */
  tokenOut = "";

  /**
   * @generated from field: bool whitelisted_route = 5;
   */
  whitelistedRoute = false;

  /**
   * @generated from field: bool allow_matching = 6;
   */
  allowMatching = false;

  /**
   * @generated from field: string amount_per_step = 7;
   */
  amountPerStep = "";

  /**
   * @generated from field: string total_amount = 8;
   */
  totalAmount = "";

  /**
   * @generated from field: int64 millis_interval = 9;
   */
  millisInterval = protoInt64.zero;

  /**
   * @generated from field: string max_step_spot_price = 10;
   */
  maxStepSpotPrice = "";

  /**
   * @generated from field: string max_matching_spot_price = 11;
   */
  maxMatchingSpotPrice = "";

  constructor(data?: PartialMessage<MsgSubmitOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSubmitOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "token_out", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "whitelisted_route", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "allow_matching", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "amount_per_step", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "total_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "millis_interval", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "max_step_spot_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "max_matching_spot_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSubmitOrder {
    return new MsgSubmitOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSubmitOrder {
    return new MsgSubmitOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSubmitOrder {
    return new MsgSubmitOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSubmitOrder | PlainMessage<MsgSubmitOrder> | undefined, b: MsgSubmitOrder | PlainMessage<MsgSubmitOrder> | undefined): boolean {
    return proto3.util.equals(MsgSubmitOrder, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSubmitOrderResponse
 */
export class MsgSubmitOrderResponse extends Message<MsgSubmitOrderResponse> {
  /**
   * @generated from field: pryzm.amm.v1.Order order = 1;
   */
  order?: Order;

  constructor(data?: PartialMessage<MsgSubmitOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSubmitOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order", kind: "message", T: Order },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSubmitOrderResponse {
    return new MsgSubmitOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSubmitOrderResponse {
    return new MsgSubmitOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSubmitOrderResponse {
    return new MsgSubmitOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSubmitOrderResponse | PlainMessage<MsgSubmitOrderResponse> | undefined, b: MsgSubmitOrderResponse | PlainMessage<MsgSubmitOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgSubmitOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCancelOrder
 */
export class MsgCancelOrder extends Message<MsgCancelOrder> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCancelOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCancelOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelOrder {
    return new MsgCancelOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelOrder {
    return new MsgCancelOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelOrder {
    return new MsgCancelOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelOrder | PlainMessage<MsgCancelOrder> | undefined, b: MsgCancelOrder | PlainMessage<MsgCancelOrder> | undefined): boolean {
    return proto3.util.equals(MsgCancelOrder, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCancelOrderResponse
 */
export class MsgCancelOrderResponse extends Message<MsgCancelOrderResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin withdrawn_deposit = 1;
   */
  withdrawnDeposit?: Coin;

  constructor(data?: PartialMessage<MsgCancelOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCancelOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "withdrawn_deposit", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelOrderResponse {
    return new MsgCancelOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelOrderResponse {
    return new MsgCancelOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelOrderResponse {
    return new MsgCancelOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelOrderResponse | PlainMessage<MsgCancelOrderResponse> | undefined, b: MsgCancelOrderResponse | PlainMessage<MsgCancelOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgCancelOrderResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgProposeMatch
 */
export class MsgProposeMatch extends Message<MsgProposeMatch> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: repeated pryzm.amm.v1.PairMatchProposal pairs = 2;
   */
  pairs: PairMatchProposal[] = [];

  constructor(data?: PartialMessage<MsgProposeMatch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgProposeMatch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pairs", kind: "message", T: PairMatchProposal, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgProposeMatch {
    return new MsgProposeMatch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgProposeMatch {
    return new MsgProposeMatch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgProposeMatch {
    return new MsgProposeMatch().fromJsonString(jsonString, options);
  }

  static equals(a: MsgProposeMatch | PlainMessage<MsgProposeMatch> | undefined, b: MsgProposeMatch | PlainMessage<MsgProposeMatch> | undefined): boolean {
    return proto3.util.equals(MsgProposeMatch, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgProposeMatchResponse
 */
export class MsgProposeMatchResponse extends Message<MsgProposeMatchResponse> {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin proposer_reward = 1;
   */
  proposerReward: Coin[] = [];

  /**
   * @generated from field: repeated pryzm.amm.v1.MatchedPairSummary matched_pairs = 2;
   */
  matchedPairs: MatchedPairSummary[] = [];

  constructor(data?: PartialMessage<MsgProposeMatchResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgProposeMatchResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "proposer_reward", kind: "message", T: Coin, repeated: true },
    { no: 2, name: "matched_pairs", kind: "message", T: MatchedPairSummary, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgProposeMatchResponse {
    return new MsgProposeMatchResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgProposeMatchResponse {
    return new MsgProposeMatchResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgProposeMatchResponse {
    return new MsgProposeMatchResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgProposeMatchResponse | PlainMessage<MsgProposeMatchResponse> | undefined, b: MsgProposeMatchResponse | PlainMessage<MsgProposeMatchResponse> | undefined): boolean {
    return proto3.util.equals(MsgProposeMatchResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetCircuitBreakers
 */
export class MsgSetCircuitBreakers extends Message<MsgSetCircuitBreakers> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated pryzm.amm.v1.TokenCircuitBreakerSettings token_circuit_breakers = 3;
   */
  tokenCircuitBreakers: TokenCircuitBreakerSettings[] = [];

  constructor(data?: PartialMessage<MsgSetCircuitBreakers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetCircuitBreakers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_circuit_breakers", kind: "message", T: TokenCircuitBreakerSettings, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetCircuitBreakers {
    return new MsgSetCircuitBreakers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetCircuitBreakers {
    return new MsgSetCircuitBreakers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetCircuitBreakers {
    return new MsgSetCircuitBreakers().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetCircuitBreakers | PlainMessage<MsgSetCircuitBreakers> | undefined, b: MsgSetCircuitBreakers | PlainMessage<MsgSetCircuitBreakers> | undefined): boolean {
    return proto3.util.equals(MsgSetCircuitBreakers, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetCircuitBreakersResponse
 */
export class MsgSetCircuitBreakersResponse extends Message<MsgSetCircuitBreakersResponse> {
  constructor(data?: PartialMessage<MsgSetCircuitBreakersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetCircuitBreakersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetCircuitBreakersResponse {
    return new MsgSetCircuitBreakersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetCircuitBreakersResponse {
    return new MsgSetCircuitBreakersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetCircuitBreakersResponse {
    return new MsgSetCircuitBreakersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetCircuitBreakersResponse | PlainMessage<MsgSetCircuitBreakersResponse> | undefined, b: MsgSetCircuitBreakersResponse | PlainMessage<MsgSetCircuitBreakersResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetCircuitBreakersResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetRecoveryMode
 */
export class MsgSetRecoveryMode extends Message<MsgSetRecoveryMode> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: bool recovery_mode = 3;
   */
  recoveryMode = false;

  constructor(data?: PartialMessage<MsgSetRecoveryMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetRecoveryMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "recovery_mode", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetRecoveryMode {
    return new MsgSetRecoveryMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetRecoveryMode {
    return new MsgSetRecoveryMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetRecoveryMode {
    return new MsgSetRecoveryMode().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetRecoveryMode | PlainMessage<MsgSetRecoveryMode> | undefined, b: MsgSetRecoveryMode | PlainMessage<MsgSetRecoveryMode> | undefined): boolean {
    return proto3.util.equals(MsgSetRecoveryMode, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetRecoveryModeResponse
 */
export class MsgSetRecoveryModeResponse extends Message<MsgSetRecoveryModeResponse> {
  constructor(data?: PartialMessage<MsgSetRecoveryModeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetRecoveryModeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetRecoveryModeResponse {
    return new MsgSetRecoveryModeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetRecoveryModeResponse {
    return new MsgSetRecoveryModeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetRecoveryModeResponse {
    return new MsgSetRecoveryModeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetRecoveryModeResponse | PlainMessage<MsgSetRecoveryModeResponse> | undefined, b: MsgSetRecoveryModeResponse | PlainMessage<MsgSetRecoveryModeResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetRecoveryModeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPoolJoinBlocked
 */
export class MsgSetPoolJoinBlocked extends Message<MsgSetPoolJoinBlocked> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: bool join_blocked = 3;
   */
  joinBlocked = false;

  constructor(data?: PartialMessage<MsgSetPoolJoinBlocked>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPoolJoinBlocked";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "join_blocked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPoolJoinBlocked {
    return new MsgSetPoolJoinBlocked().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPoolJoinBlocked {
    return new MsgSetPoolJoinBlocked().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPoolJoinBlocked {
    return new MsgSetPoolJoinBlocked().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPoolJoinBlocked | PlainMessage<MsgSetPoolJoinBlocked> | undefined, b: MsgSetPoolJoinBlocked | PlainMessage<MsgSetPoolJoinBlocked> | undefined): boolean {
    return proto3.util.equals(MsgSetPoolJoinBlocked, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPoolJoinBlockedResponse
 */
export class MsgSetPoolJoinBlockedResponse extends Message<MsgSetPoolJoinBlockedResponse> {
  constructor(data?: PartialMessage<MsgSetPoolJoinBlockedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPoolJoinBlockedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPoolJoinBlockedResponse {
    return new MsgSetPoolJoinBlockedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPoolJoinBlockedResponse {
    return new MsgSetPoolJoinBlockedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPoolJoinBlockedResponse {
    return new MsgSetPoolJoinBlockedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPoolJoinBlockedResponse | PlainMessage<MsgSetPoolJoinBlockedResponse> | undefined, b: MsgSetPoolJoinBlockedResponse | PlainMessage<MsgSetPoolJoinBlockedResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetPoolJoinBlockedResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgRecoveryExit
 */
export class MsgRecoveryExit extends Message<MsgRecoveryExit> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string lpt_in = 3;
   */
  lptIn = "";

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin min_amounts_out = 4;
   */
  minAmountsOut: Coin[] = [];

  constructor(data?: PartialMessage<MsgRecoveryExit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgRecoveryExit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "lpt_in", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "min_amounts_out", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRecoveryExit {
    return new MsgRecoveryExit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRecoveryExit {
    return new MsgRecoveryExit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRecoveryExit {
    return new MsgRecoveryExit().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRecoveryExit | PlainMessage<MsgRecoveryExit> | undefined, b: MsgRecoveryExit | PlainMessage<MsgRecoveryExit> | undefined): boolean {
    return proto3.util.equals(MsgRecoveryExit, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgRecoveryExitResponse
 */
export class MsgRecoveryExitResponse extends Message<MsgRecoveryExitResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin lpt_in = 1;
   */
  lptIn?: Coin;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amounts_out = 2;
   */
  amountsOut: Coin[] = [];

  constructor(data?: PartialMessage<MsgRecoveryExitResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgRecoveryExitResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lpt_in", kind: "message", T: Coin },
    { no: 2, name: "amounts_out", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRecoveryExitResponse {
    return new MsgRecoveryExitResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRecoveryExitResponse {
    return new MsgRecoveryExitResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRecoveryExitResponse {
    return new MsgRecoveryExitResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRecoveryExitResponse | PlainMessage<MsgRecoveryExitResponse> | undefined, b: MsgRecoveryExitResponse | PlainMessage<MsgRecoveryExitResponse> | undefined): boolean {
    return proto3.util.equals(MsgRecoveryExitResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPauseMode
 */
export class MsgSetPauseMode extends Message<MsgSetPauseMode> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: bool pause_mode = 3;
   */
  pauseMode = false;

  constructor(data?: PartialMessage<MsgSetPauseMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPauseMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "pause_mode", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPauseMode {
    return new MsgSetPauseMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPauseMode {
    return new MsgSetPauseMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPauseMode {
    return new MsgSetPauseMode().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPauseMode | PlainMessage<MsgSetPauseMode> | undefined, b: MsgSetPauseMode | PlainMessage<MsgSetPauseMode> | undefined): boolean {
    return proto3.util.equals(MsgSetPauseMode, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPauseModeResponse
 */
export class MsgSetPauseModeResponse extends Message<MsgSetPauseModeResponse> {
  constructor(data?: PartialMessage<MsgSetPauseModeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPauseModeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPauseModeResponse {
    return new MsgSetPauseModeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPauseModeResponse {
    return new MsgSetPauseModeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPauseModeResponse {
    return new MsgSetPauseModeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPauseModeResponse | PlainMessage<MsgSetPauseModeResponse> | undefined, b: MsgSetPauseModeResponse | PlainMessage<MsgSetPauseModeResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetPauseModeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetVaultPauseMode
 */
export class MsgSetVaultPauseMode extends Message<MsgSetVaultPauseMode> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: bool pause_mode = 2;
   */
  pauseMode = false;

  constructor(data?: PartialMessage<MsgSetVaultPauseMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetVaultPauseMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pause_mode", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetVaultPauseMode {
    return new MsgSetVaultPauseMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetVaultPauseMode {
    return new MsgSetVaultPauseMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetVaultPauseMode {
    return new MsgSetVaultPauseMode().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetVaultPauseMode | PlainMessage<MsgSetVaultPauseMode> | undefined, b: MsgSetVaultPauseMode | PlainMessage<MsgSetVaultPauseMode> | undefined): boolean {
    return proto3.util.equals(MsgSetVaultPauseMode, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetVaultPauseModeResponse
 */
export class MsgSetVaultPauseModeResponse extends Message<MsgSetVaultPauseModeResponse> {
  constructor(data?: PartialMessage<MsgSetVaultPauseModeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetVaultPauseModeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetVaultPauseModeResponse {
    return new MsgSetVaultPauseModeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetVaultPauseModeResponse {
    return new MsgSetVaultPauseModeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetVaultPauseModeResponse {
    return new MsgSetVaultPauseModeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetVaultPauseModeResponse | PlainMessage<MsgSetVaultPauseModeResponse> | undefined, b: MsgSetVaultPauseModeResponse | PlainMessage<MsgSetVaultPauseModeResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetVaultPauseModeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCreateOraclePricePair
 */
export class MsgCreateOraclePricePair extends Message<MsgCreateOraclePricePair> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: pryzm.amm.v1.OraclePricePair oracle_price_pair = 2;
   */
  oraclePricePair?: OraclePricePair;

  constructor(data?: PartialMessage<MsgCreateOraclePricePair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCreateOraclePricePair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "oracle_price_pair", kind: "message", T: OraclePricePair },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateOraclePricePair {
    return new MsgCreateOraclePricePair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateOraclePricePair {
    return new MsgCreateOraclePricePair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateOraclePricePair {
    return new MsgCreateOraclePricePair().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateOraclePricePair | PlainMessage<MsgCreateOraclePricePair> | undefined, b: MsgCreateOraclePricePair | PlainMessage<MsgCreateOraclePricePair> | undefined): boolean {
    return proto3.util.equals(MsgCreateOraclePricePair, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCreateOraclePricePairResponse
 */
export class MsgCreateOraclePricePairResponse extends Message<MsgCreateOraclePricePairResponse> {
  constructor(data?: PartialMessage<MsgCreateOraclePricePairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCreateOraclePricePairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateOraclePricePairResponse {
    return new MsgCreateOraclePricePairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateOraclePricePairResponse {
    return new MsgCreateOraclePricePairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateOraclePricePairResponse {
    return new MsgCreateOraclePricePairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateOraclePricePairResponse | PlainMessage<MsgCreateOraclePricePairResponse> | undefined, b: MsgCreateOraclePricePairResponse | PlainMessage<MsgCreateOraclePricePairResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateOraclePricePairResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateOraclePricePair
 */
export class MsgUpdateOraclePricePair extends Message<MsgUpdateOraclePricePair> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: pryzm.amm.v1.OraclePricePair oracle_price_pair = 2;
   */
  oraclePricePair?: OraclePricePair;

  constructor(data?: PartialMessage<MsgUpdateOraclePricePair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateOraclePricePair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "oracle_price_pair", kind: "message", T: OraclePricePair },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateOraclePricePair {
    return new MsgUpdateOraclePricePair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateOraclePricePair {
    return new MsgUpdateOraclePricePair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateOraclePricePair {
    return new MsgUpdateOraclePricePair().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateOraclePricePair | PlainMessage<MsgUpdateOraclePricePair> | undefined, b: MsgUpdateOraclePricePair | PlainMessage<MsgUpdateOraclePricePair> | undefined): boolean {
    return proto3.util.equals(MsgUpdateOraclePricePair, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateOraclePricePairResponse
 */
export class MsgUpdateOraclePricePairResponse extends Message<MsgUpdateOraclePricePairResponse> {
  constructor(data?: PartialMessage<MsgUpdateOraclePricePairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateOraclePricePairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateOraclePricePairResponse {
    return new MsgUpdateOraclePricePairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateOraclePricePairResponse {
    return new MsgUpdateOraclePricePairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateOraclePricePairResponse {
    return new MsgUpdateOraclePricePairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateOraclePricePairResponse | PlainMessage<MsgUpdateOraclePricePairResponse> | undefined, b: MsgUpdateOraclePricePairResponse | PlainMessage<MsgUpdateOraclePricePairResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateOraclePricePairResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgDeleteOraclePricePair
 */
export class MsgDeleteOraclePricePair extends Message<MsgDeleteOraclePricePair> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  constructor(data?: PartialMessage<MsgDeleteOraclePricePair>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgDeleteOraclePricePair";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteOraclePricePair {
    return new MsgDeleteOraclePricePair().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteOraclePricePair {
    return new MsgDeleteOraclePricePair().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteOraclePricePair {
    return new MsgDeleteOraclePricePair().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteOraclePricePair | PlainMessage<MsgDeleteOraclePricePair> | undefined, b: MsgDeleteOraclePricePair | PlainMessage<MsgDeleteOraclePricePair> | undefined): boolean {
    return proto3.util.equals(MsgDeleteOraclePricePair, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgDeleteOraclePricePairResponse
 */
export class MsgDeleteOraclePricePairResponse extends Message<MsgDeleteOraclePricePairResponse> {
  constructor(data?: PartialMessage<MsgDeleteOraclePricePairResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgDeleteOraclePricePairResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteOraclePricePairResponse {
    return new MsgDeleteOraclePricePairResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteOraclePricePairResponse {
    return new MsgDeleteOraclePricePairResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteOraclePricePairResponse {
    return new MsgDeleteOraclePricePairResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteOraclePricePairResponse | PlainMessage<MsgDeleteOraclePricePairResponse> | undefined, b: MsgDeleteOraclePricePairResponse | PlainMessage<MsgDeleteOraclePricePairResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeleteOraclePricePairResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetSwapProtocolFee
 */
export class MsgSetSwapProtocolFee extends Message<MsgSetSwapProtocolFee> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * if protocol fee parameters are nil, then the values are read from treasury module parameters
   *
   * @generated from field: string swap_protocol_fee = 3;
   */
  swapProtocolFee = "";

  constructor(data?: PartialMessage<MsgSetSwapProtocolFee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetSwapProtocolFee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "swap_protocol_fee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetSwapProtocolFee {
    return new MsgSetSwapProtocolFee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetSwapProtocolFee {
    return new MsgSetSwapProtocolFee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetSwapProtocolFee {
    return new MsgSetSwapProtocolFee().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetSwapProtocolFee | PlainMessage<MsgSetSwapProtocolFee> | undefined, b: MsgSetSwapProtocolFee | PlainMessage<MsgSetSwapProtocolFee> | undefined): boolean {
    return proto3.util.equals(MsgSetSwapProtocolFee, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetSwapProtocolFeeResponse
 */
export class MsgSetSwapProtocolFeeResponse extends Message<MsgSetSwapProtocolFeeResponse> {
  constructor(data?: PartialMessage<MsgSetSwapProtocolFeeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetSwapProtocolFeeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetSwapProtocolFeeResponse {
    return new MsgSetSwapProtocolFeeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetSwapProtocolFeeResponse {
    return new MsgSetSwapProtocolFeeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetSwapProtocolFeeResponse {
    return new MsgSetSwapProtocolFeeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetSwapProtocolFeeResponse | PlainMessage<MsgSetSwapProtocolFeeResponse> | undefined, b: MsgSetSwapProtocolFeeResponse | PlainMessage<MsgSetSwapProtocolFeeResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetSwapProtocolFeeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetJoinExitProtocolFee
 */
export class MsgSetJoinExitProtocolFee extends Message<MsgSetJoinExitProtocolFee> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * if protocol fee parameters are nil, then the values are read from treasury module parameters
   *
   * @generated from field: string join_exit_protocol_fee = 3;
   */
  joinExitProtocolFee = "";

  constructor(data?: PartialMessage<MsgSetJoinExitProtocolFee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetJoinExitProtocolFee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "join_exit_protocol_fee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetJoinExitProtocolFee {
    return new MsgSetJoinExitProtocolFee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetJoinExitProtocolFee {
    return new MsgSetJoinExitProtocolFee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetJoinExitProtocolFee {
    return new MsgSetJoinExitProtocolFee().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetJoinExitProtocolFee | PlainMessage<MsgSetJoinExitProtocolFee> | undefined, b: MsgSetJoinExitProtocolFee | PlainMessage<MsgSetJoinExitProtocolFee> | undefined): boolean {
    return proto3.util.equals(MsgSetJoinExitProtocolFee, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetJoinExitProtocolFeeResponse
 */
export class MsgSetJoinExitProtocolFeeResponse extends Message<MsgSetJoinExitProtocolFeeResponse> {
  constructor(data?: PartialMessage<MsgSetJoinExitProtocolFeeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetJoinExitProtocolFeeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetJoinExitProtocolFeeResponse {
    return new MsgSetJoinExitProtocolFeeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetJoinExitProtocolFeeResponse {
    return new MsgSetJoinExitProtocolFeeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetJoinExitProtocolFeeResponse {
    return new MsgSetJoinExitProtocolFeeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetJoinExitProtocolFeeResponse | PlainMessage<MsgSetJoinExitProtocolFeeResponse> | undefined, b: MsgSetJoinExitProtocolFeeResponse | PlainMessage<MsgSetJoinExitProtocolFeeResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetJoinExitProtocolFeeResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgIntroduceYammLpToWeightedPool
 */
export class MsgIntroduceYammLpToWeightedPool extends Message<MsgIntroduceYammLpToWeightedPool> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 weighted_pool_id = 2;
   */
  weightedPoolId = protoInt64.zero;

  /**
   * @generated from field: uint64 yamm_pool_id = 3;
   */
  yammPoolId = protoInt64.zero;

  /**
   * @generated from field: string token_normalized_weight = 4;
   */
  tokenNormalizedWeight = "";

  /**
   * @generated from field: int64 virtual_balance_interval_millis = 5;
   */
  virtualBalanceIntervalMillis = protoInt64.zero;

  constructor(data?: PartialMessage<MsgIntroduceYammLpToWeightedPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgIntroduceYammLpToWeightedPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "weighted_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "yamm_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "token_normalized_weight", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "virtual_balance_interval_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIntroduceYammLpToWeightedPool {
    return new MsgIntroduceYammLpToWeightedPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIntroduceYammLpToWeightedPool {
    return new MsgIntroduceYammLpToWeightedPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIntroduceYammLpToWeightedPool {
    return new MsgIntroduceYammLpToWeightedPool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIntroduceYammLpToWeightedPool | PlainMessage<MsgIntroduceYammLpToWeightedPool> | undefined, b: MsgIntroduceYammLpToWeightedPool | PlainMessage<MsgIntroduceYammLpToWeightedPool> | undefined): boolean {
    return proto3.util.equals(MsgIntroduceYammLpToWeightedPool, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgIntroduceYammLpToWeightedPoolResponse
 */
export class MsgIntroduceYammLpToWeightedPoolResponse extends Message<MsgIntroduceYammLpToWeightedPoolResponse> {
  constructor(data?: PartialMessage<MsgIntroduceYammLpToWeightedPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgIntroduceYammLpToWeightedPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIntroduceYammLpToWeightedPoolResponse {
    return new MsgIntroduceYammLpToWeightedPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIntroduceYammLpToWeightedPoolResponse {
    return new MsgIntroduceYammLpToWeightedPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIntroduceYammLpToWeightedPoolResponse {
    return new MsgIntroduceYammLpToWeightedPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIntroduceYammLpToWeightedPoolResponse | PlainMessage<MsgIntroduceYammLpToWeightedPoolResponse> | undefined, b: MsgIntroduceYammLpToWeightedPoolResponse | PlainMessage<MsgIntroduceYammLpToWeightedPoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgIntroduceYammLpToWeightedPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgIntroduceAssetBaseTokenToWeightedPool
 */
export class MsgIntroduceAssetBaseTokenToWeightedPool extends Message<MsgIntroduceAssetBaseTokenToWeightedPool> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 weighted_pool_id = 2;
   */
  weightedPoolId = protoInt64.zero;

  /**
   * @generated from field: string token_denom = 3;
   */
  tokenDenom = "";

  /**
   * @generated from field: string asset_id = 4;
   */
  assetId = "";

  /**
   * @generated from field: string token_normalized_weight = 5;
   */
  tokenNormalizedWeight = "";

  /**
   * @generated from field: int64 virtual_balance_interval_millis = 6;
   */
  virtualBalanceIntervalMillis = protoInt64.zero;

  constructor(data?: PartialMessage<MsgIntroduceAssetBaseTokenToWeightedPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgIntroduceAssetBaseTokenToWeightedPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "weighted_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_normalized_weight", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "virtual_balance_interval_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIntroduceAssetBaseTokenToWeightedPool {
    return new MsgIntroduceAssetBaseTokenToWeightedPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIntroduceAssetBaseTokenToWeightedPool {
    return new MsgIntroduceAssetBaseTokenToWeightedPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIntroduceAssetBaseTokenToWeightedPool {
    return new MsgIntroduceAssetBaseTokenToWeightedPool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIntroduceAssetBaseTokenToWeightedPool | PlainMessage<MsgIntroduceAssetBaseTokenToWeightedPool> | undefined, b: MsgIntroduceAssetBaseTokenToWeightedPool | PlainMessage<MsgIntroduceAssetBaseTokenToWeightedPool> | undefined): boolean {
    return proto3.util.equals(MsgIntroduceAssetBaseTokenToWeightedPool, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgIntroduceAssetBaseTokenToWeightedPoolResponse
 */
export class MsgIntroduceAssetBaseTokenToWeightedPoolResponse extends Message<MsgIntroduceAssetBaseTokenToWeightedPoolResponse> {
  constructor(data?: PartialMessage<MsgIntroduceAssetBaseTokenToWeightedPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgIntroduceAssetBaseTokenToWeightedPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIntroduceAssetBaseTokenToWeightedPoolResponse {
    return new MsgIntroduceAssetBaseTokenToWeightedPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIntroduceAssetBaseTokenToWeightedPoolResponse {
    return new MsgIntroduceAssetBaseTokenToWeightedPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIntroduceAssetBaseTokenToWeightedPoolResponse {
    return new MsgIntroduceAssetBaseTokenToWeightedPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIntroduceAssetBaseTokenToWeightedPoolResponse | PlainMessage<MsgIntroduceAssetBaseTokenToWeightedPoolResponse> | undefined, b: MsgIntroduceAssetBaseTokenToWeightedPoolResponse | PlainMessage<MsgIntroduceAssetBaseTokenToWeightedPoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgIntroduceAssetBaseTokenToWeightedPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCancelPendingTokenIntroduction
 */
export class MsgCancelPendingTokenIntroduction extends Message<MsgCancelPendingTokenIntroduction> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: uint64 target_pool_id = 3;
   */
  targetPoolId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCancelPendingTokenIntroduction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCancelPendingTokenIntroduction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "target_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelPendingTokenIntroduction {
    return new MsgCancelPendingTokenIntroduction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelPendingTokenIntroduction {
    return new MsgCancelPendingTokenIntroduction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelPendingTokenIntroduction {
    return new MsgCancelPendingTokenIntroduction().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelPendingTokenIntroduction | PlainMessage<MsgCancelPendingTokenIntroduction> | undefined, b: MsgCancelPendingTokenIntroduction | PlainMessage<MsgCancelPendingTokenIntroduction> | undefined): boolean {
    return proto3.util.equals(MsgCancelPendingTokenIntroduction, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgCancelPendingTokenIntroductionResponse
 */
export class MsgCancelPendingTokenIntroductionResponse extends Message<MsgCancelPendingTokenIntroductionResponse> {
  constructor(data?: PartialMessage<MsgCancelPendingTokenIntroductionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgCancelPendingTokenIntroductionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelPendingTokenIntroductionResponse {
    return new MsgCancelPendingTokenIntroductionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelPendingTokenIntroductionResponse {
    return new MsgCancelPendingTokenIntroductionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelPendingTokenIntroductionResponse {
    return new MsgCancelPendingTokenIntroductionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelPendingTokenIntroductionResponse | PlainMessage<MsgCancelPendingTokenIntroductionResponse> | undefined, b: MsgCancelPendingTokenIntroductionResponse | PlainMessage<MsgCancelPendingTokenIntroductionResponse> | undefined): boolean {
    return proto3.util.equals(MsgCancelPendingTokenIntroductionResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgRemoveTokenFromWeightedPool
 */
export class MsgRemoveTokenFromWeightedPool extends Message<MsgRemoveTokenFromWeightedPool> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string token_denom = 3;
   */
  tokenDenom = "";

  /**
   * @generated from field: int64 virtual_balance_interval_millis = 4;
   */
  virtualBalanceIntervalMillis = protoInt64.zero;

  constructor(data?: PartialMessage<MsgRemoveTokenFromWeightedPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgRemoveTokenFromWeightedPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "token_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "virtual_balance_interval_millis", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveTokenFromWeightedPool {
    return new MsgRemoveTokenFromWeightedPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveTokenFromWeightedPool {
    return new MsgRemoveTokenFromWeightedPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveTokenFromWeightedPool {
    return new MsgRemoveTokenFromWeightedPool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveTokenFromWeightedPool | PlainMessage<MsgRemoveTokenFromWeightedPool> | undefined, b: MsgRemoveTokenFromWeightedPool | PlainMessage<MsgRemoveTokenFromWeightedPool> | undefined): boolean {
    return proto3.util.equals(MsgRemoveTokenFromWeightedPool, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgRemoveTokenFromWeightedPoolResponse
 */
export class MsgRemoveTokenFromWeightedPoolResponse extends Message<MsgRemoveTokenFromWeightedPoolResponse> {
  constructor(data?: PartialMessage<MsgRemoveTokenFromWeightedPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgRemoveTokenFromWeightedPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveTokenFromWeightedPoolResponse {
    return new MsgRemoveTokenFromWeightedPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveTokenFromWeightedPoolResponse {
    return new MsgRemoveTokenFromWeightedPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveTokenFromWeightedPoolResponse {
    return new MsgRemoveTokenFromWeightedPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveTokenFromWeightedPoolResponse | PlainMessage<MsgRemoveTokenFromWeightedPoolResponse> | undefined, b: MsgRemoveTokenFromWeightedPoolResponse | PlainMessage<MsgRemoveTokenFromWeightedPoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemoveTokenFromWeightedPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: pryzm.amm.v1.GeneralPoolParameters general_pool_parameters = 2;
   */
  generalPoolParameters?: GeneralPoolParameters;

  /**
   * @generated from field: pryzm.amm.v1.YammParameters yamm_parameters = 3;
   */
  yammParameters?: YammParameters;

  /**
   * @generated from field: pryzm.amm.v1.OrderParameters order_parameters = 4;
   */
  orderParameters?: OrderParameters;

  /**
   * @generated from field: pryzm.amm.v1.AuthorizationParameters authorization_parameters = 5;
   */
  authorizationParameters?: AuthorizationParameters;

  /**
   * @generated from field: pryzm.amm.v1.GasParameters gas_parameters = 6;
   */
  gasParameters?: GasParameters;

  /**
   * @generated from field: pryzm.amm.v1.WeightedPoolParameters weighted_pool_parameters = 7;
   */
  weightedPoolParameters?: WeightedPoolParameters;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "general_pool_parameters", kind: "message", T: GeneralPoolParameters },
    { no: 3, name: "yamm_parameters", kind: "message", T: YammParameters },
    { no: 4, name: "order_parameters", kind: "message", T: OrderParameters },
    { no: 5, name: "authorization_parameters", kind: "message", T: AuthorizationParameters },
    { no: 6, name: "gas_parameters", kind: "message", T: GasParameters },
    { no: 7, name: "weighted_pool_parameters", kind: "message", T: WeightedPoolParameters },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgAddMaturityToYamm
 */
export class MsgAddMaturityToYamm extends Message<MsgAddMaturityToYamm> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string assetId = 2;
   */
  assetId = "";

  /**
   * @generated from field: string maturitySymbol = 3;
   */
  maturitySymbol = "";

  constructor(data?: PartialMessage<MsgAddMaturityToYamm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgAddMaturityToYamm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "assetId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "maturitySymbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddMaturityToYamm {
    return new MsgAddMaturityToYamm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddMaturityToYamm {
    return new MsgAddMaturityToYamm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddMaturityToYamm {
    return new MsgAddMaturityToYamm().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddMaturityToYamm | PlainMessage<MsgAddMaturityToYamm> | undefined, b: MsgAddMaturityToYamm | PlainMessage<MsgAddMaturityToYamm> | undefined): boolean {
    return proto3.util.equals(MsgAddMaturityToYamm, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgAddMaturityToYammResponse
 */
export class MsgAddMaturityToYammResponse extends Message<MsgAddMaturityToYammResponse> {
  constructor(data?: PartialMessage<MsgAddMaturityToYammResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgAddMaturityToYammResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddMaturityToYammResponse {
    return new MsgAddMaturityToYammResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddMaturityToYammResponse {
    return new MsgAddMaturityToYammResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddMaturityToYammResponse {
    return new MsgAddMaturityToYammResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddMaturityToYammResponse | PlainMessage<MsgAddMaturityToYammResponse> | undefined, b: MsgAddMaturityToYammResponse | PlainMessage<MsgAddMaturityToYammResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddMaturityToYammResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetInitializationAllowList
 */
export class MsgSetInitializationAllowList extends Message<MsgSetInitializationAllowList> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated string initialization_allow_list = 3;
   */
  initializationAllowList: string[] = [];

  constructor(data?: PartialMessage<MsgSetInitializationAllowList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetInitializationAllowList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "initialization_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetInitializationAllowList {
    return new MsgSetInitializationAllowList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetInitializationAllowList {
    return new MsgSetInitializationAllowList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetInitializationAllowList {
    return new MsgSetInitializationAllowList().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetInitializationAllowList | PlainMessage<MsgSetInitializationAllowList> | undefined, b: MsgSetInitializationAllowList | PlainMessage<MsgSetInitializationAllowList> | undefined): boolean {
    return proto3.util.equals(MsgSetInitializationAllowList, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetInitializationAllowListResponse
 */
export class MsgSetInitializationAllowListResponse extends Message<MsgSetInitializationAllowListResponse> {
  constructor(data?: PartialMessage<MsgSetInitializationAllowListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetInitializationAllowListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetInitializationAllowListResponse {
    return new MsgSetInitializationAllowListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetInitializationAllowListResponse {
    return new MsgSetInitializationAllowListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetInitializationAllowListResponse {
    return new MsgSetInitializationAllowListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetInitializationAllowListResponse | PlainMessage<MsgSetInitializationAllowListResponse> | undefined, b: MsgSetInitializationAllowListResponse | PlainMessage<MsgSetInitializationAllowListResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetInitializationAllowListResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPoolAdmins
 */
export class MsgSetPoolAdmins extends Message<MsgSetPoolAdmins> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated string admins = 3;
   */
  admins: string[] = [];

  constructor(data?: PartialMessage<MsgSetPoolAdmins>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPoolAdmins";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "admins", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPoolAdmins {
    return new MsgSetPoolAdmins().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPoolAdmins {
    return new MsgSetPoolAdmins().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPoolAdmins {
    return new MsgSetPoolAdmins().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPoolAdmins | PlainMessage<MsgSetPoolAdmins> | undefined, b: MsgSetPoolAdmins | PlainMessage<MsgSetPoolAdmins> | undefined): boolean {
    return proto3.util.equals(MsgSetPoolAdmins, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPoolAdminsResponse
 */
export class MsgSetPoolAdminsResponse extends Message<MsgSetPoolAdminsResponse> {
  constructor(data?: PartialMessage<MsgSetPoolAdminsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPoolAdminsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPoolAdminsResponse {
    return new MsgSetPoolAdminsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPoolAdminsResponse {
    return new MsgSetPoolAdminsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPoolAdminsResponse {
    return new MsgSetPoolAdminsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPoolAdminsResponse | PlainMessage<MsgSetPoolAdminsResponse> | undefined, b: MsgSetPoolAdminsResponse | PlainMessage<MsgSetPoolAdminsResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetPoolAdminsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPauseAllowList
 */
export class MsgSetPauseAllowList extends Message<MsgSetPauseAllowList> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: repeated string pause_allow_list = 3;
   */
  pauseAllowList: string[] = [];

  constructor(data?: PartialMessage<MsgSetPauseAllowList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPauseAllowList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "pause_allow_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPauseAllowList {
    return new MsgSetPauseAllowList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPauseAllowList {
    return new MsgSetPauseAllowList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPauseAllowList {
    return new MsgSetPauseAllowList().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPauseAllowList | PlainMessage<MsgSetPauseAllowList> | undefined, b: MsgSetPauseAllowList | PlainMessage<MsgSetPauseAllowList> | undefined): boolean {
    return proto3.util.equals(MsgSetPauseAllowList, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPauseAllowListResponse
 */
export class MsgSetPauseAllowListResponse extends Message<MsgSetPauseAllowListResponse> {
  constructor(data?: PartialMessage<MsgSetPauseAllowListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPauseAllowListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPauseAllowListResponse {
    return new MsgSetPauseAllowListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPauseAllowListResponse {
    return new MsgSetPauseAllowListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPauseAllowListResponse {
    return new MsgSetPauseAllowListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPauseAllowListResponse | PlainMessage<MsgSetPauseAllowListResponse> | undefined, b: MsgSetPauseAllowListResponse | PlainMessage<MsgSetPauseAllowListResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetPauseAllowListResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPauseWindow
 */
export class MsgSetPauseWindow extends Message<MsgSetPauseWindow> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: pryzm.amm.v1.PoolPauseWindow pause_window = 3;
   */
  pauseWindow?: PoolPauseWindow;

  constructor(data?: PartialMessage<MsgSetPauseWindow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPauseWindow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "pause_window", kind: "message", T: PoolPauseWindow },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPauseWindow {
    return new MsgSetPauseWindow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPauseWindow {
    return new MsgSetPauseWindow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPauseWindow {
    return new MsgSetPauseWindow().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPauseWindow | PlainMessage<MsgSetPauseWindow> | undefined, b: MsgSetPauseWindow | PlainMessage<MsgSetPauseWindow> | undefined): boolean {
    return proto3.util.equals(MsgSetPauseWindow, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetPauseWindowResponse
 */
export class MsgSetPauseWindowResponse extends Message<MsgSetPauseWindowResponse> {
  constructor(data?: PartialMessage<MsgSetPauseWindowResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetPauseWindowResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetPauseWindowResponse {
    return new MsgSetPauseWindowResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetPauseWindowResponse {
    return new MsgSetPauseWindowResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetPauseWindowResponse {
    return new MsgSetPauseWindowResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetPauseWindowResponse | PlainMessage<MsgSetPauseWindowResponse> | undefined, b: MsgSetPauseWindowResponse | PlainMessage<MsgSetPauseWindowResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetPauseWindowResponse, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetOrderPairDisabled
 */
export class MsgSetOrderPairDisabled extends Message<MsgSetOrderPairDisabled> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: pryzm.amm.v1.DisabledOrderPair pair = 2;
   */
  pair?: DisabledOrderPair;

  /**
   * @generated from field: bool disabled = 3;
   */
  disabled = false;

  constructor(data?: PartialMessage<MsgSetOrderPairDisabled>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetOrderPairDisabled";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pair", kind: "message", T: DisabledOrderPair },
    { no: 3, name: "disabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetOrderPairDisabled {
    return new MsgSetOrderPairDisabled().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetOrderPairDisabled {
    return new MsgSetOrderPairDisabled().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetOrderPairDisabled {
    return new MsgSetOrderPairDisabled().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetOrderPairDisabled | PlainMessage<MsgSetOrderPairDisabled> | undefined, b: MsgSetOrderPairDisabled | PlainMessage<MsgSetOrderPairDisabled> | undefined): boolean {
    return proto3.util.equals(MsgSetOrderPairDisabled, a, b);
  }
}

/**
 * @generated from message pryzm.amm.v1.MsgSetOrderPairDisabledResponse
 */
export class MsgSetOrderPairDisabledResponse extends Message<MsgSetOrderPairDisabledResponse> {
  constructor(data?: PartialMessage<MsgSetOrderPairDisabledResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.amm.v1.MsgSetOrderPairDisabledResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetOrderPairDisabledResponse {
    return new MsgSetOrderPairDisabledResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetOrderPairDisabledResponse {
    return new MsgSetOrderPairDisabledResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetOrderPairDisabledResponse {
    return new MsgSetOrderPairDisabledResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSetOrderPairDisabledResponse | PlainMessage<MsgSetOrderPairDisabledResponse> | undefined, b: MsgSetOrderPairDisabledResponse | PlainMessage<MsgSetOrderPairDisabledResponse> | undefined): boolean {
    return proto3.util.equals(MsgSetOrderPairDisabledResponse, a, b);
  }
}

