// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/icstaking/v1/genesis.proto (package pryzm.icstaking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { HostChain, HostChainState } from "./host_chain_pb.js";
import { ChannelUndelegation, Undelegation } from "./undelegation_pb.js";
import { DelegateTransferSession, ReplyData } from "./reply_pb.js";
import { FailedLsmTransfer, RedeemableLsm } from "./lsm_pb.js";
import { MultiSigConnection, MultiSigPacket } from "./multisig_pb.js";
import { LoopBackPacket } from "./loopback_pb.js";
import { SweepTransfer } from "./sweep_pb.js";

/**
 * GenesisState defines the icstaking module's genesis state.
 *
 * @generated from message pryzm.icstaking.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: pryzm.icstaking.v1.Params params = 1;
   */
  params?: Params;

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChain host_chain_list = 3;
   */
  hostChainList: HostChain[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChainState host_chain_state_list = 4;
   */
  hostChainStateList: HostChainState[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.Undelegation undelegation_list = 5;
   */
  undelegationList: Undelegation[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.ChannelUndelegation channel_undelegation_list = 6;
   */
  channelUndelegationList: ChannelUndelegation[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.ReplyData reply_data_list = 7;
   */
  replyDataList: ReplyData[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.RedeemableLsm redeemable_lsm_list = 8;
   */
  redeemableLsmList: RedeemableLsm[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.FailedLsmTransfer failed_lsm_transfer_list = 9;
   */
  failedLsmTransferList: FailedLsmTransfer[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.MultiSigConnection multi_sig_connection_list = 10;
   */
  multiSigConnectionList: MultiSigConnection[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.MultiSigPacket multi_sig_packet_list = 11;
   */
  multiSigPacketList: MultiSigPacket[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.LoopBackPacket loop_back_packet_list = 12;
   */
  loopBackPacketList: LoopBackPacket[] = [];

  /**
   * @generated from field: uint64 loop_back_packet_last_id = 13;
   */
  loopBackPacketLastId = protoInt64.zero;

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChainEpochTime last_delegation_time_list = 14;
   */
  lastDelegationTimeList: HostChainEpochTime[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChainEpochTime last_redelegation_time_list = 15;
   */
  lastRedelegationTimeList: HostChainEpochTime[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChainEpochTime last_lsm_redeem_time_list = 16;
   */
  lastLsmRedeemTimeList: HostChainEpochTime[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChainEpochTime last_undelegation_time_list = 17;
   */
  lastUndelegationTimeList: HostChainEpochTime[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.HostChainUndelegationEpoch undelegation_epoch_list = 18;
   */
  undelegationEpochList: HostChainUndelegationEpoch[] = [];

  /**
   * @generated from field: repeated pryzm.icstaking.v1.DelegateTransferSession delegate_transfer_session_list = 19;
   */
  delegateTransferSessionList: DelegateTransferSession[] = [];

  /**
   * this line is used by starport scaffolding # genesis/proto/state
   *
   * @generated from field: repeated pryzm.icstaking.v1.SweepTransfer sweep_transfer_list = 20;
   */
  sweepTransferList: SweepTransfer[] = [];

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.icstaking.v1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
    { no: 3, name: "host_chain_list", kind: "message", T: HostChain, repeated: true },
    { no: 4, name: "host_chain_state_list", kind: "message", T: HostChainState, repeated: true },
    { no: 5, name: "undelegation_list", kind: "message", T: Undelegation, repeated: true },
    { no: 6, name: "channel_undelegation_list", kind: "message", T: ChannelUndelegation, repeated: true },
    { no: 7, name: "reply_data_list", kind: "message", T: ReplyData, repeated: true },
    { no: 8, name: "redeemable_lsm_list", kind: "message", T: RedeemableLsm, repeated: true },
    { no: 9, name: "failed_lsm_transfer_list", kind: "message", T: FailedLsmTransfer, repeated: true },
    { no: 10, name: "multi_sig_connection_list", kind: "message", T: MultiSigConnection, repeated: true },
    { no: 11, name: "multi_sig_packet_list", kind: "message", T: MultiSigPacket, repeated: true },
    { no: 12, name: "loop_back_packet_list", kind: "message", T: LoopBackPacket, repeated: true },
    { no: 13, name: "loop_back_packet_last_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "last_delegation_time_list", kind: "message", T: HostChainEpochTime, repeated: true },
    { no: 15, name: "last_redelegation_time_list", kind: "message", T: HostChainEpochTime, repeated: true },
    { no: 16, name: "last_lsm_redeem_time_list", kind: "message", T: HostChainEpochTime, repeated: true },
    { no: 17, name: "last_undelegation_time_list", kind: "message", T: HostChainEpochTime, repeated: true },
    { no: 18, name: "undelegation_epoch_list", kind: "message", T: HostChainUndelegationEpoch, repeated: true },
    { no: 19, name: "delegate_transfer_session_list", kind: "message", T: DelegateTransferSession, repeated: true },
    { no: 20, name: "sweep_transfer_list", kind: "message", T: SweepTransfer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

/**
 * @generated from message pryzm.icstaking.v1.HostChainEpochTime
 */
export class HostChainEpochTime extends Message<HostChainEpochTime> {
  /**
   * @generated from field: string host_chain_id = 1;
   */
  hostChainId = "";

  /**
   * @generated from field: google.protobuf.Timestamp epoch_time = 2;
   */
  epochTime?: Timestamp;

  constructor(data?: PartialMessage<HostChainEpochTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.icstaking.v1.HostChainEpochTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "host_chain_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "epoch_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HostChainEpochTime {
    return new HostChainEpochTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HostChainEpochTime {
    return new HostChainEpochTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HostChainEpochTime {
    return new HostChainEpochTime().fromJsonString(jsonString, options);
  }

  static equals(a: HostChainEpochTime | PlainMessage<HostChainEpochTime> | undefined, b: HostChainEpochTime | PlainMessage<HostChainEpochTime> | undefined): boolean {
    return proto3.util.equals(HostChainEpochTime, a, b);
  }
}

/**
 * @generated from message pryzm.icstaking.v1.HostChainUndelegationEpoch
 */
export class HostChainUndelegationEpoch extends Message<HostChainUndelegationEpoch> {
  /**
   * @generated from field: string host_chain_id = 1;
   */
  hostChainId = "";

  /**
   * @generated from field: uint64 undelegation_epoch = 2;
   */
  undelegationEpoch = protoInt64.zero;

  constructor(data?: PartialMessage<HostChainUndelegationEpoch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.icstaking.v1.HostChainUndelegationEpoch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "host_chain_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "undelegation_epoch", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HostChainUndelegationEpoch {
    return new HostChainUndelegationEpoch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HostChainUndelegationEpoch {
    return new HostChainUndelegationEpoch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HostChainUndelegationEpoch {
    return new HostChainUndelegationEpoch().fromJsonString(jsonString, options);
  }

  static equals(a: HostChainUndelegationEpoch | PlainMessage<HostChainUndelegationEpoch> | undefined, b: HostChainUndelegationEpoch | PlainMessage<HostChainUndelegationEpoch> | undefined): boolean {
    return proto3.util.equals(HostChainUndelegationEpoch, a, b);
  }
}

