// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/icstaking/v1/undelegation.proto (package pryzm.icstaking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * Information about an undelegation in a specific epoch
 *
 * @generated from message pryzm.icstaking.v1.Undelegation
 */
export class Undelegation extends Message<Undelegation> {
  /**
   * host chain id
   *
   * @generated from field: string host_chain = 1;
   */
  hostChain = "";

  /**
   * the undelegation epoch id
   *
   * @generated from field: uint64 epoch = 2;
   */
  epoch = protoInt64.zero;

  /**
   * the exchange rate of cToken:Token at the end of undelegation epoch
   *
   * @generated from field: string exchange_rate = 3;
   */
  exchangeRate = "";

  /**
   * whether the undelegation request is sent and has started on host chain
   *
   * @generated from field: bool started = 4;
   */
  started = false;

  /**
   * whether the undelegation un-bonding period is passed and undelegated assets are available
   *
   * @generated from field: bool completed = 5;
   */
  completed = false;

  /**
   * the time in which the undelegation will be completed and the assets are transferred to delegation account
   *
   * @generated from field: google.protobuf.Timestamp completion_time = 6;
   */
  completionTime?: Timestamp;

  constructor(data?: PartialMessage<Undelegation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.icstaking.v1.Undelegation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "host_chain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "epoch", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "exchange_rate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "started", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "completed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "completion_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Undelegation {
    return new Undelegation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Undelegation {
    return new Undelegation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Undelegation {
    return new Undelegation().fromJsonString(jsonString, options);
  }

  static equals(a: Undelegation | PlainMessage<Undelegation> | undefined, b: Undelegation | PlainMessage<Undelegation> | undefined): boolean {
    return proto3.util.equals(Undelegation, a, b);
  }
}

/**
 * ChannelUndelegation contains information about an undelegation epoch for a specific transfer channel
 *
 * @generated from message pryzm.icstaking.v1.ChannelUndelegation
 */
export class ChannelUndelegation extends Message<ChannelUndelegation> {
  /**
   * host chain id
   *
   * @generated from field: string host_chain = 1;
   */
  hostChain = "";

  /**
   * the undelegation epoch id
   *
   * @generated from field: uint64 epoch = 2;
   */
  epoch = protoInt64.zero;

  /**
   * the transfer channel on which the undelegated assets must be received
   *
   * @generated from field: string transfer_channel = 3;
   */
  transferChannel = "";

  /**
   * the total amount of cTokens requested to be undelegated
   *
   * @generated from field: string total_c_amount = 4;
   */
  totalCAmount = "";

  /**
   * the total amount of cTokens for which the undelegation message has been sent
   *
   * @generated from field: string undelegated_c_amount = 5;
   */
  undelegatedCAmount = "";

  /**
   * the amount of assets already undelegated
   *
   * @generated from field: string received_amount = 6;
   */
  receivedAmount = "";

  /**
   * the amount of assets waiting to be received
   *
   * @generated from field: string pending_amount = 7;
   */
  pendingAmount = "";

  /**
   * the cAsset equivalent of assets waiting to be received
   *
   * @generated from field: string pending_c_amount = 8;
   */
  pendingCAmount = "";

  /**
   * whether the ibc transfer messages for sweeping assets to PRYZM are sent successfully
   *
   * @generated from field: bool swept = 9;
   */
  swept = false;

  /**
   * whether all the undelegation are completely received
   * if received is true, pending_amount must be zero
   *
   * @generated from field: bool received = 10;
   */
  received = false;

  /**
   * the amount of uAssets redeemed by users.
   * a channel undelegation record is deleted when this amount is equal the total_c_amount
   *
   * @generated from field: string claimed_u_amount = 11;
   */
  claimedUAmount = "";

  constructor(data?: PartialMessage<ChannelUndelegation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.icstaking.v1.ChannelUndelegation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "host_chain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "epoch", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "transfer_channel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "total_c_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "undelegated_c_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "received_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "pending_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "pending_c_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "swept", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "received", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "claimed_u_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChannelUndelegation {
    return new ChannelUndelegation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChannelUndelegation {
    return new ChannelUndelegation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChannelUndelegation {
    return new ChannelUndelegation().fromJsonString(jsonString, options);
  }

  static equals(a: ChannelUndelegation | PlainMessage<ChannelUndelegation> | undefined, b: ChannelUndelegation | PlainMessage<ChannelUndelegation> | undefined): boolean {
    return proto3.util.equals(ChannelUndelegation, a, b);
  }
}

