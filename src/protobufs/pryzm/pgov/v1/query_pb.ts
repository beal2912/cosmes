// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/pgov/v1/query.proto (package pryzm.pgov.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { StakedPAsset, TotalStakedPAsset } from "./staked_p_asset_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { Vote } from "./vote_pb.js";
import { Proposal } from "./proposal_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message pryzm.pgov.v1.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message pryzm.pgov.v1.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: pryzm.pgov.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetStakedPAssetRequest
 */
export class QueryGetStakedPAssetRequest extends Message<QueryGetStakedPAssetRequest> {
  /**
   * @generated from field: string account = 1;
   */
  account = "";

  /**
   * @generated from field: string p_asset = 2;
   */
  pAsset = "";

  constructor(data?: PartialMessage<QueryGetStakedPAssetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetStakedPAssetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "p_asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetStakedPAssetRequest {
    return new QueryGetStakedPAssetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetStakedPAssetRequest {
    return new QueryGetStakedPAssetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetStakedPAssetRequest {
    return new QueryGetStakedPAssetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetStakedPAssetRequest | PlainMessage<QueryGetStakedPAssetRequest> | undefined, b: QueryGetStakedPAssetRequest | PlainMessage<QueryGetStakedPAssetRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetStakedPAssetRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetStakedPAssetResponse
 */
export class QueryGetStakedPAssetResponse extends Message<QueryGetStakedPAssetResponse> {
  /**
   * @generated from field: pryzm.pgov.v1.StakedPAsset staked_p_asset = 1;
   */
  stakedPAsset?: StakedPAsset;

  constructor(data?: PartialMessage<QueryGetStakedPAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetStakedPAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "staked_p_asset", kind: "message", T: StakedPAsset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetStakedPAssetResponse {
    return new QueryGetStakedPAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetStakedPAssetResponse {
    return new QueryGetStakedPAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetStakedPAssetResponse {
    return new QueryGetStakedPAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetStakedPAssetResponse | PlainMessage<QueryGetStakedPAssetResponse> | undefined, b: QueryGetStakedPAssetResponse | PlainMessage<QueryGetStakedPAssetResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetStakedPAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllStakedPAssetRequest
 */
export class QueryAllStakedPAssetRequest extends Message<QueryAllStakedPAssetRequest> {
  /**
   * @generated from field: string account = 1;
   */
  account = "";

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllStakedPAssetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllStakedPAssetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllStakedPAssetRequest {
    return new QueryAllStakedPAssetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllStakedPAssetRequest {
    return new QueryAllStakedPAssetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllStakedPAssetRequest {
    return new QueryAllStakedPAssetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllStakedPAssetRequest | PlainMessage<QueryAllStakedPAssetRequest> | undefined, b: QueryAllStakedPAssetRequest | PlainMessage<QueryAllStakedPAssetRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllStakedPAssetRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllStakedPAssetResponse
 */
export class QueryAllStakedPAssetResponse extends Message<QueryAllStakedPAssetResponse> {
  /**
   * @generated from field: repeated pryzm.pgov.v1.StakedPAsset staked_p_asset = 1;
   */
  stakedPAsset: StakedPAsset[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllStakedPAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllStakedPAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "staked_p_asset", kind: "message", T: StakedPAsset, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllStakedPAssetResponse {
    return new QueryAllStakedPAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllStakedPAssetResponse {
    return new QueryAllStakedPAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllStakedPAssetResponse {
    return new QueryAllStakedPAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllStakedPAssetResponse | PlainMessage<QueryAllStakedPAssetResponse> | undefined, b: QueryAllStakedPAssetResponse | PlainMessage<QueryAllStakedPAssetResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllStakedPAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllTotalStakedPAssetRequest
 */
export class QueryAllTotalStakedPAssetRequest extends Message<QueryAllTotalStakedPAssetRequest> {
  /**
   * @generated from field: string account = 1;
   */
  account = "";

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllTotalStakedPAssetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllTotalStakedPAssetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllTotalStakedPAssetRequest {
    return new QueryAllTotalStakedPAssetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllTotalStakedPAssetRequest {
    return new QueryAllTotalStakedPAssetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllTotalStakedPAssetRequest {
    return new QueryAllTotalStakedPAssetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllTotalStakedPAssetRequest | PlainMessage<QueryAllTotalStakedPAssetRequest> | undefined, b: QueryAllTotalStakedPAssetRequest | PlainMessage<QueryAllTotalStakedPAssetRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllTotalStakedPAssetRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllTotalStakedPAssetResponse
 */
export class QueryAllTotalStakedPAssetResponse extends Message<QueryAllTotalStakedPAssetResponse> {
  /**
   * @generated from field: repeated pryzm.pgov.v1.TotalStakedPAsset total_staked_p_asset = 1;
   */
  totalStakedPAsset: TotalStakedPAsset[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllTotalStakedPAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllTotalStakedPAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "total_staked_p_asset", kind: "message", T: TotalStakedPAsset, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllTotalStakedPAssetResponse {
    return new QueryAllTotalStakedPAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllTotalStakedPAssetResponse {
    return new QueryAllTotalStakedPAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllTotalStakedPAssetResponse {
    return new QueryAllTotalStakedPAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllTotalStakedPAssetResponse | PlainMessage<QueryAllTotalStakedPAssetResponse> | undefined, b: QueryAllTotalStakedPAssetResponse | PlainMessage<QueryAllTotalStakedPAssetResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllTotalStakedPAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetTotalStakedPAssetRequest
 */
export class QueryGetTotalStakedPAssetRequest extends Message<QueryGetTotalStakedPAssetRequest> {
  /**
   * @generated from field: string account = 1;
   */
  account = "";

  /**
   * @generated from field: string asset = 2;
   */
  asset = "";

  constructor(data?: PartialMessage<QueryGetTotalStakedPAssetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetTotalStakedPAssetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetTotalStakedPAssetRequest {
    return new QueryGetTotalStakedPAssetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetTotalStakedPAssetRequest {
    return new QueryGetTotalStakedPAssetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetTotalStakedPAssetRequest {
    return new QueryGetTotalStakedPAssetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetTotalStakedPAssetRequest | PlainMessage<QueryGetTotalStakedPAssetRequest> | undefined, b: QueryGetTotalStakedPAssetRequest | PlainMessage<QueryGetTotalStakedPAssetRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetTotalStakedPAssetRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetTotalStakedPAssetResponse
 */
export class QueryGetTotalStakedPAssetResponse extends Message<QueryGetTotalStakedPAssetResponse> {
  /**
   * @generated from field: pryzm.pgov.v1.TotalStakedPAsset total_staked_p_asset = 1;
   */
  totalStakedPAsset?: TotalStakedPAsset;

  constructor(data?: PartialMessage<QueryGetTotalStakedPAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetTotalStakedPAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "total_staked_p_asset", kind: "message", T: TotalStakedPAsset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetTotalStakedPAssetResponse {
    return new QueryGetTotalStakedPAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetTotalStakedPAssetResponse {
    return new QueryGetTotalStakedPAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetTotalStakedPAssetResponse {
    return new QueryGetTotalStakedPAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetTotalStakedPAssetResponse | PlainMessage<QueryGetTotalStakedPAssetResponse> | undefined, b: QueryGetTotalStakedPAssetResponse | PlainMessage<QueryGetTotalStakedPAssetResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetTotalStakedPAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetVoteRequest
 */
export class QueryGetVoteRequest extends Message<QueryGetVoteRequest> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: uint64 proposal = 2;
   */
  proposal = protoInt64.zero;

  /**
   * @generated from field: string voter = 3;
   */
  voter = "";

  constructor(data?: PartialMessage<QueryGetVoteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetVoteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proposal", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "voter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetVoteRequest {
    return new QueryGetVoteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetVoteRequest {
    return new QueryGetVoteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetVoteRequest {
    return new QueryGetVoteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetVoteRequest | PlainMessage<QueryGetVoteRequest> | undefined, b: QueryGetVoteRequest | PlainMessage<QueryGetVoteRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetVoteRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetVoteResponse
 */
export class QueryGetVoteResponse extends Message<QueryGetVoteResponse> {
  /**
   * @generated from field: pryzm.pgov.v1.Vote vote = 1;
   */
  vote?: Vote;

  constructor(data?: PartialMessage<QueryGetVoteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetVoteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vote", kind: "message", T: Vote },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetVoteResponse {
    return new QueryGetVoteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetVoteResponse {
    return new QueryGetVoteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetVoteResponse {
    return new QueryGetVoteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetVoteResponse | PlainMessage<QueryGetVoteResponse> | undefined, b: QueryGetVoteResponse | PlainMessage<QueryGetVoteResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetVoteResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllVoteRequest
 */
export class QueryAllVoteRequest extends Message<QueryAllVoteRequest> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: uint64 proposal = 2;
   */
  proposal = protoInt64.zero;

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 3;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllVoteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllVoteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proposal", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllVoteRequest {
    return new QueryAllVoteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllVoteRequest {
    return new QueryAllVoteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllVoteRequest {
    return new QueryAllVoteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllVoteRequest | PlainMessage<QueryAllVoteRequest> | undefined, b: QueryAllVoteRequest | PlainMessage<QueryAllVoteRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllVoteRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllVoteResponse
 */
export class QueryAllVoteResponse extends Message<QueryAllVoteResponse> {
  /**
   * @generated from field: repeated pryzm.pgov.v1.Vote vote = 1;
   */
  vote: Vote[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllVoteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllVoteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vote", kind: "message", T: Vote, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllVoteResponse {
    return new QueryAllVoteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllVoteResponse {
    return new QueryAllVoteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllVoteResponse {
    return new QueryAllVoteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllVoteResponse | PlainMessage<QueryAllVoteResponse> | undefined, b: QueryAllVoteResponse | PlainMessage<QueryAllVoteResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllVoteResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetProposalRequest
 */
export class QueryGetProposalRequest extends Message<QueryGetProposalRequest> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: uint64 proposal_id = 2;
   */
  proposalId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetProposalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetProposalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetProposalRequest {
    return new QueryGetProposalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetProposalRequest {
    return new QueryGetProposalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetProposalRequest {
    return new QueryGetProposalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetProposalRequest | PlainMessage<QueryGetProposalRequest> | undefined, b: QueryGetProposalRequest | PlainMessage<QueryGetProposalRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetProposalRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryGetProposalResponse
 */
export class QueryGetProposalResponse extends Message<QueryGetProposalResponse> {
  /**
   * @generated from field: pryzm.pgov.v1.Proposal proposal = 1;
   */
  proposal?: Proposal;

  constructor(data?: PartialMessage<QueryGetProposalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryGetProposalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "proposal", kind: "message", T: Proposal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetProposalResponse {
    return new QueryGetProposalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetProposalResponse {
    return new QueryGetProposalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetProposalResponse {
    return new QueryGetProposalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetProposalResponse | PlainMessage<QueryGetProposalResponse> | undefined, b: QueryGetProposalResponse | PlainMessage<QueryGetProposalResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetProposalResponse, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllProposalRequest
 */
export class QueryAllProposalRequest extends Message<QueryAllProposalRequest> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllProposalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllProposalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllProposalRequest {
    return new QueryAllProposalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllProposalRequest {
    return new QueryAllProposalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllProposalRequest {
    return new QueryAllProposalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllProposalRequest | PlainMessage<QueryAllProposalRequest> | undefined, b: QueryAllProposalRequest | PlainMessage<QueryAllProposalRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllProposalRequest, a, b);
  }
}

/**
 * @generated from message pryzm.pgov.v1.QueryAllProposalResponse
 */
export class QueryAllProposalResponse extends Message<QueryAllProposalResponse> {
  /**
   * @generated from field: repeated pryzm.pgov.v1.Proposal proposal = 1;
   */
  proposal: Proposal[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllProposalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.QueryAllProposalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "proposal", kind: "message", T: Proposal, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllProposalResponse {
    return new QueryAllProposalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllProposalResponse {
    return new QueryAllProposalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllProposalResponse {
    return new QueryAllProposalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllProposalResponse | PlainMessage<QueryAllProposalResponse> | undefined, b: QueryAllProposalResponse | PlainMessage<QueryAllProposalResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllProposalResponse, a, b);
  }
}

