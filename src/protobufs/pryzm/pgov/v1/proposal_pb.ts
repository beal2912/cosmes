// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/pgov/v1/proposal.proto (package pryzm.pgov.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { WeightedVoteOption } from "../../../cosmos/gov/v1/gov_pb.js";

/**
 * @generated from enum pryzm.pgov.v1.ProposalStatus
 */
export enum ProposalStatus {
  /**
   * @generated from enum value: ACTIVE = 0;
   */
  ACTIVE = 0,

  /**
   * @generated from enum value: SUBMITTING = 1;
   */
  SUBMITTING = 1,

  /**
   * @generated from enum value: SUBMITTED = 2;
   */
  SUBMITTED = 2,

  /**
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ProposalStatus)
proto3.util.setEnumType(ProposalStatus, "pryzm.pgov.v1.ProposalStatus", [
  { no: 0, name: "ACTIVE" },
  { no: 1, name: "SUBMITTING" },
  { no: 2, name: "SUBMITTED" },
  { no: 3, name: "FAILED" },
]);

/**
 * Proposal stores information about a replicated proposal
 *
 * @generated from message pryzm.pgov.v1.Proposal
 */
export class Proposal extends Message<Proposal> {
  /**
   * the id of proposal on the host chain
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId = protoInt64.zero;

  /**
   * the asset ID
   *
   * @generated from field: string asset = 2;
   */
  asset = "";

  /**
   * the time when the proposal has been started
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * the time of proposal ending on PRYZM, this time is sooner than the real end time of proposal on the host chain
   *
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * the final aggregation of votes on PRYZM, which is submitted to the host chain
   *
   * @generated from field: repeated cosmos.gov.v1.WeightedVoteOption final_vote = 5;
   */
  finalVote: WeightedVoteOption[] = [];

  /**
   * the state of the proposal
   *
   * @generated from field: pryzm.pgov.v1.ProposalStatus status = 6;
   */
  status = ProposalStatus.ACTIVE;

  constructor(data?: PartialMessage<Proposal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.pgov.v1.Proposal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "proposal_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_time", kind: "message", T: Timestamp },
    { no: 4, name: "end_time", kind: "message", T: Timestamp },
    { no: 5, name: "final_vote", kind: "message", T: WeightedVoteOption, repeated: true },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(ProposalStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Proposal {
    return new Proposal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Proposal {
    return new Proposal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Proposal {
    return new Proposal().fromJsonString(jsonString, options);
  }

  static equals(a: Proposal | PlainMessage<Proposal> | undefined, b: Proposal | PlainMessage<Proposal> | undefined): boolean {
    return proto3.util.equals(Proposal, a, b);
  }
}

