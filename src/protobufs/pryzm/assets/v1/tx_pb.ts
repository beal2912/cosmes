// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/assets/v1/tx.proto (package pryzm.assets.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { FeeRatios, MaturityParams, RefractableAsset } from "./refractable_asset_pb.js";
import { Params } from "./params_pb.js";
import { MaturityLevel } from "./maturity_level_pb.js";

/**
 * @generated from message pryzm.assets.v1.MsgRegisterAsset
 */
export class MsgRegisterAsset extends Message<MsgRegisterAsset> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: pryzm.assets.v1.RefractableAsset asset = 2;
   */
  asset?: RefractableAsset;

  constructor(data?: PartialMessage<MsgRegisterAsset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgRegisterAsset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset", kind: "message", T: RefractableAsset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRegisterAsset {
    return new MsgRegisterAsset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRegisterAsset {
    return new MsgRegisterAsset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRegisterAsset {
    return new MsgRegisterAsset().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRegisterAsset | PlainMessage<MsgRegisterAsset> | undefined, b: MsgRegisterAsset | PlainMessage<MsgRegisterAsset> | undefined): boolean {
    return proto3.util.equals(MsgRegisterAsset, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgRegisterAssetResponse
 */
export class MsgRegisterAssetResponse extends Message<MsgRegisterAssetResponse> {
  constructor(data?: PartialMessage<MsgRegisterAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgRegisterAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRegisterAssetResponse {
    return new MsgRegisterAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRegisterAssetResponse {
    return new MsgRegisterAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRegisterAssetResponse {
    return new MsgRegisterAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRegisterAssetResponse | PlainMessage<MsgRegisterAssetResponse> | undefined, b: MsgRegisterAssetResponse | PlainMessage<MsgRegisterAssetResponse> | undefined): boolean {
    return proto3.util.equals(MsgRegisterAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgDisableAsset
 */
export class MsgDisableAsset extends Message<MsgDisableAsset> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  constructor(data?: PartialMessage<MsgDisableAsset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgDisableAsset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDisableAsset {
    return new MsgDisableAsset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDisableAsset {
    return new MsgDisableAsset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDisableAsset {
    return new MsgDisableAsset().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDisableAsset | PlainMessage<MsgDisableAsset> | undefined, b: MsgDisableAsset | PlainMessage<MsgDisableAsset> | undefined): boolean {
    return proto3.util.equals(MsgDisableAsset, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgDisableAssetResponse
 */
export class MsgDisableAssetResponse extends Message<MsgDisableAssetResponse> {
  constructor(data?: PartialMessage<MsgDisableAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgDisableAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDisableAssetResponse {
    return new MsgDisableAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDisableAssetResponse {
    return new MsgDisableAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDisableAssetResponse {
    return new MsgDisableAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDisableAssetResponse | PlainMessage<MsgDisableAssetResponse> | undefined, b: MsgDisableAssetResponse | PlainMessage<MsgDisableAssetResponse> | undefined): boolean {
    return proto3.util.equals(MsgDisableAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgUpdateMaturityParams
 */
export class MsgUpdateMaturityParams extends Message<MsgUpdateMaturityParams> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: pryzm.assets.v1.MaturityParams params = 3;
   */
  params?: MaturityParams;

  constructor(data?: PartialMessage<MsgUpdateMaturityParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgUpdateMaturityParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "params", kind: "message", T: MaturityParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateMaturityParams {
    return new MsgUpdateMaturityParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateMaturityParams {
    return new MsgUpdateMaturityParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateMaturityParams {
    return new MsgUpdateMaturityParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateMaturityParams | PlainMessage<MsgUpdateMaturityParams> | undefined, b: MsgUpdateMaturityParams | PlainMessage<MsgUpdateMaturityParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateMaturityParams, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgUpdateMaturityParamsResponse
 */
export class MsgUpdateMaturityParamsResponse extends Message<MsgUpdateMaturityParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateMaturityParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgUpdateMaturityParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateMaturityParamsResponse {
    return new MsgUpdateMaturityParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateMaturityParamsResponse {
    return new MsgUpdateMaturityParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateMaturityParamsResponse {
    return new MsgUpdateMaturityParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateMaturityParamsResponse | PlainMessage<MsgUpdateMaturityParamsResponse> | undefined, b: MsgUpdateMaturityParamsResponse | PlainMessage<MsgUpdateMaturityParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateMaturityParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgUpdateFeeRatios
 */
export class MsgUpdateFeeRatios extends Message<MsgUpdateFeeRatios> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: pryzm.assets.v1.FeeRatios fee_ratios = 3;
   */
  feeRatios?: FeeRatios;

  constructor(data?: PartialMessage<MsgUpdateFeeRatios>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgUpdateFeeRatios";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "fee_ratios", kind: "message", T: FeeRatios },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateFeeRatios {
    return new MsgUpdateFeeRatios().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateFeeRatios {
    return new MsgUpdateFeeRatios().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateFeeRatios {
    return new MsgUpdateFeeRatios().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateFeeRatios | PlainMessage<MsgUpdateFeeRatios> | undefined, b: MsgUpdateFeeRatios | PlainMessage<MsgUpdateFeeRatios> | undefined): boolean {
    return proto3.util.equals(MsgUpdateFeeRatios, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgUpdateFeeRatiosResponse
 */
export class MsgUpdateFeeRatiosResponse extends Message<MsgUpdateFeeRatiosResponse> {
  constructor(data?: PartialMessage<MsgUpdateFeeRatiosResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgUpdateFeeRatiosResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateFeeRatiosResponse {
    return new MsgUpdateFeeRatiosResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateFeeRatiosResponse {
    return new MsgUpdateFeeRatiosResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateFeeRatiosResponse {
    return new MsgUpdateFeeRatiosResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateFeeRatiosResponse | PlainMessage<MsgUpdateFeeRatiosResponse> | undefined, b: MsgUpdateFeeRatiosResponse | PlainMessage<MsgUpdateFeeRatiosResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateFeeRatiosResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: pryzm.assets.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgIntroduceMaturityLevel
 */
export class MsgIntroduceMaturityLevel extends Message<MsgIntroduceMaturityLevel> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: string symbol = 3;
   */
  symbol = "";

  constructor(data?: PartialMessage<MsgIntroduceMaturityLevel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgIntroduceMaturityLevel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIntroduceMaturityLevel {
    return new MsgIntroduceMaturityLevel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIntroduceMaturityLevel {
    return new MsgIntroduceMaturityLevel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIntroduceMaturityLevel {
    return new MsgIntroduceMaturityLevel().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIntroduceMaturityLevel | PlainMessage<MsgIntroduceMaturityLevel> | undefined, b: MsgIntroduceMaturityLevel | PlainMessage<MsgIntroduceMaturityLevel> | undefined): boolean {
    return proto3.util.equals(MsgIntroduceMaturityLevel, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.MsgIntroduceMaturityLevelResponse
 */
export class MsgIntroduceMaturityLevelResponse extends Message<MsgIntroduceMaturityLevelResponse> {
  /**
   * @generated from field: pryzm.assets.v1.MaturityLevel maturity_level = 1;
   */
  maturityLevel?: MaturityLevel;

  constructor(data?: PartialMessage<MsgIntroduceMaturityLevelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MsgIntroduceMaturityLevelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maturity_level", kind: "message", T: MaturityLevel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIntroduceMaturityLevelResponse {
    return new MsgIntroduceMaturityLevelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIntroduceMaturityLevelResponse {
    return new MsgIntroduceMaturityLevelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIntroduceMaturityLevelResponse {
    return new MsgIntroduceMaturityLevelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIntroduceMaturityLevelResponse | PlainMessage<MsgIntroduceMaturityLevelResponse> | undefined, b: MsgIntroduceMaturityLevelResponse | PlainMessage<MsgIntroduceMaturityLevelResponse> | undefined): boolean {
    return proto3.util.equals(MsgIntroduceMaturityLevelResponse, a, b);
  }
}

