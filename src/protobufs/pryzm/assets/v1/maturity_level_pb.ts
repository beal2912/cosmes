// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/assets/v1/maturity_level.proto (package pryzm.assets.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message pryzm.assets.v1.MaturityLevel
 */
export class MaturityLevel extends Message<MaturityLevel> {
  /**
   * @generated from field: bool active = 1;
   */
  active = false;

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: string symbol = 3;
   */
  symbol = "";

  /**
   * @generated from field: google.protobuf.Timestamp introduction_time = 4;
   */
  introductionTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_time = 5;
   */
  expirationTime?: Timestamp;

  constructor(data?: PartialMessage<MaturityLevel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.MaturityLevel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "introduction_time", kind: "message", T: Timestamp },
    { no: 5, name: "expiration_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MaturityLevel {
    return new MaturityLevel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MaturityLevel {
    return new MaturityLevel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MaturityLevel {
    return new MaturityLevel().fromJsonString(jsonString, options);
  }

  static equals(a: MaturityLevel | PlainMessage<MaturityLevel> | undefined, b: MaturityLevel | PlainMessage<MaturityLevel> | undefined): boolean {
    return proto3.util.equals(MaturityLevel, a, b);
  }
}

