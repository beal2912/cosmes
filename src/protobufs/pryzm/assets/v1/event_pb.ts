// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/assets/v1/event.proto (package pryzm.assets.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { MaturityLevel } from "./maturity_level_pb.js";
import { RefractableAsset } from "./refractable_asset_pb.js";

/**
 * @generated from message pryzm.assets.v1.EventSetParams
 */
export class EventSetParams extends Message<EventSetParams> {
  /**
   * @generated from field: pryzm.assets.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<EventSetParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.EventSetParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventSetParams {
    return new EventSetParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventSetParams {
    return new EventSetParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventSetParams {
    return new EventSetParams().fromJsonString(jsonString, options);
  }

  static equals(a: EventSetParams | PlainMessage<EventSetParams> | undefined, b: EventSetParams | PlainMessage<EventSetParams> | undefined): boolean {
    return proto3.util.equals(EventSetParams, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.EventAddMaturityLevel
 */
export class EventAddMaturityLevel extends Message<EventAddMaturityLevel> {
  /**
   * @generated from field: pryzm.assets.v1.MaturityLevel maturity_level = 1;
   */
  maturityLevel?: MaturityLevel;

  constructor(data?: PartialMessage<EventAddMaturityLevel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.EventAddMaturityLevel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maturity_level", kind: "message", T: MaturityLevel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventAddMaturityLevel {
    return new EventAddMaturityLevel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventAddMaturityLevel {
    return new EventAddMaturityLevel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventAddMaturityLevel {
    return new EventAddMaturityLevel().fromJsonString(jsonString, options);
  }

  static equals(a: EventAddMaturityLevel | PlainMessage<EventAddMaturityLevel> | undefined, b: EventAddMaturityLevel | PlainMessage<EventAddMaturityLevel> | undefined): boolean {
    return proto3.util.equals(EventAddMaturityLevel, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.EventDeactivateMaturityLevel
 */
export class EventDeactivateMaturityLevel extends Message<EventDeactivateMaturityLevel> {
  /**
   * @generated from field: pryzm.assets.v1.MaturityLevel maturity_level = 1;
   */
  maturityLevel?: MaturityLevel;

  constructor(data?: PartialMessage<EventDeactivateMaturityLevel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.EventDeactivateMaturityLevel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maturity_level", kind: "message", T: MaturityLevel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventDeactivateMaturityLevel {
    return new EventDeactivateMaturityLevel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventDeactivateMaturityLevel {
    return new EventDeactivateMaturityLevel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventDeactivateMaturityLevel {
    return new EventDeactivateMaturityLevel().fromJsonString(jsonString, options);
  }

  static equals(a: EventDeactivateMaturityLevel | PlainMessage<EventDeactivateMaturityLevel> | undefined, b: EventDeactivateMaturityLevel | PlainMessage<EventDeactivateMaturityLevel> | undefined): boolean {
    return proto3.util.equals(EventDeactivateMaturityLevel, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.EventSetRefractableAsset
 */
export class EventSetRefractableAsset extends Message<EventSetRefractableAsset> {
  /**
   * @generated from field: pryzm.assets.v1.RefractableAsset refractable_asset = 1;
   */
  refractableAsset?: RefractableAsset;

  constructor(data?: PartialMessage<EventSetRefractableAsset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.EventSetRefractableAsset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "refractable_asset", kind: "message", T: RefractableAsset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventSetRefractableAsset {
    return new EventSetRefractableAsset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventSetRefractableAsset {
    return new EventSetRefractableAsset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventSetRefractableAsset {
    return new EventSetRefractableAsset().fromJsonString(jsonString, options);
  }

  static equals(a: EventSetRefractableAsset | PlainMessage<EventSetRefractableAsset> | undefined, b: EventSetRefractableAsset | PlainMessage<EventSetRefractableAsset> | undefined): boolean {
    return proto3.util.equals(EventSetRefractableAsset, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.EventSetMaturityLevel
 */
export class EventSetMaturityLevel extends Message<EventSetMaturityLevel> {
  /**
   * @generated from field: pryzm.assets.v1.MaturityLevel maturity_level = 1;
   */
  maturityLevel?: MaturityLevel;

  constructor(data?: PartialMessage<EventSetMaturityLevel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.EventSetMaturityLevel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maturity_level", kind: "message", T: MaturityLevel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventSetMaturityLevel {
    return new EventSetMaturityLevel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventSetMaturityLevel {
    return new EventSetMaturityLevel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventSetMaturityLevel {
    return new EventSetMaturityLevel().fromJsonString(jsonString, options);
  }

  static equals(a: EventSetMaturityLevel | PlainMessage<EventSetMaturityLevel> | undefined, b: EventSetMaturityLevel | PlainMessage<EventSetMaturityLevel> | undefined): boolean {
    return proto3.util.equals(EventSetMaturityLevel, a, b);
  }
}

