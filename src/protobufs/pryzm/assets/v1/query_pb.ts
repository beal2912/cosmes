// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/assets/v1/query.proto (package pryzm.assets.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { RefractableAsset } from "./refractable_asset_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { MaturityLevel } from "./maturity_level_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message pryzm.assets.v1.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message pryzm.assets.v1.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: pryzm.assets.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryGetRefractableAssetRequest
 */
export class QueryGetRefractableAssetRequest extends Message<QueryGetRefractableAssetRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  constructor(data?: PartialMessage<QueryGetRefractableAssetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryGetRefractableAssetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetRefractableAssetRequest {
    return new QueryGetRefractableAssetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetRefractableAssetRequest {
    return new QueryGetRefractableAssetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetRefractableAssetRequest {
    return new QueryGetRefractableAssetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetRefractableAssetRequest | PlainMessage<QueryGetRefractableAssetRequest> | undefined, b: QueryGetRefractableAssetRequest | PlainMessage<QueryGetRefractableAssetRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetRefractableAssetRequest, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryGetRefractableAssetResponse
 */
export class QueryGetRefractableAssetResponse extends Message<QueryGetRefractableAssetResponse> {
  /**
   * @generated from field: pryzm.assets.v1.RefractableAsset asset = 1;
   */
  asset?: RefractableAsset;

  constructor(data?: PartialMessage<QueryGetRefractableAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryGetRefractableAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "message", T: RefractableAsset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetRefractableAssetResponse {
    return new QueryGetRefractableAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetRefractableAssetResponse {
    return new QueryGetRefractableAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetRefractableAssetResponse {
    return new QueryGetRefractableAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetRefractableAssetResponse | PlainMessage<QueryGetRefractableAssetResponse> | undefined, b: QueryGetRefractableAssetResponse | PlainMessage<QueryGetRefractableAssetResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetRefractableAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryAllRefractableAssetRequest
 */
export class QueryAllRefractableAssetRequest extends Message<QueryAllRefractableAssetRequest> {
  /**
   * @generated from field: string enabled = 1;
   */
  enabled = "";

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllRefractableAssetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryAllRefractableAssetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "enabled", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllRefractableAssetRequest {
    return new QueryAllRefractableAssetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllRefractableAssetRequest {
    return new QueryAllRefractableAssetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllRefractableAssetRequest {
    return new QueryAllRefractableAssetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllRefractableAssetRequest | PlainMessage<QueryAllRefractableAssetRequest> | undefined, b: QueryAllRefractableAssetRequest | PlainMessage<QueryAllRefractableAssetRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllRefractableAssetRequest, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryAllRefractableAssetResponse
 */
export class QueryAllRefractableAssetResponse extends Message<QueryAllRefractableAssetResponse> {
  /**
   * @generated from field: repeated pryzm.assets.v1.RefractableAsset assets = 1;
   */
  assets: RefractableAsset[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllRefractableAssetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryAllRefractableAssetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "assets", kind: "message", T: RefractableAsset, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllRefractableAssetResponse {
    return new QueryAllRefractableAssetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllRefractableAssetResponse {
    return new QueryAllRefractableAssetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllRefractableAssetResponse {
    return new QueryAllRefractableAssetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllRefractableAssetResponse | PlainMessage<QueryAllRefractableAssetResponse> | undefined, b: QueryAllRefractableAssetResponse | PlainMessage<QueryAllRefractableAssetResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllRefractableAssetResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryGetMaturityLevelRequest
 */
export class QueryGetMaturityLevelRequest extends Message<QueryGetMaturityLevelRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  /**
   * @generated from field: string symbol = 2;
   */
  symbol = "";

  constructor(data?: PartialMessage<QueryGetMaturityLevelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryGetMaturityLevelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetMaturityLevelRequest {
    return new QueryGetMaturityLevelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetMaturityLevelRequest {
    return new QueryGetMaturityLevelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetMaturityLevelRequest {
    return new QueryGetMaturityLevelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetMaturityLevelRequest | PlainMessage<QueryGetMaturityLevelRequest> | undefined, b: QueryGetMaturityLevelRequest | PlainMessage<QueryGetMaturityLevelRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetMaturityLevelRequest, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryGetMaturityLevelResponse
 */
export class QueryGetMaturityLevelResponse extends Message<QueryGetMaturityLevelResponse> {
  /**
   * @generated from field: pryzm.assets.v1.MaturityLevel maturity_level = 1;
   */
  maturityLevel?: MaturityLevel;

  constructor(data?: PartialMessage<QueryGetMaturityLevelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryGetMaturityLevelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maturity_level", kind: "message", T: MaturityLevel },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetMaturityLevelResponse {
    return new QueryGetMaturityLevelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetMaturityLevelResponse {
    return new QueryGetMaturityLevelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetMaturityLevelResponse {
    return new QueryGetMaturityLevelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetMaturityLevelResponse | PlainMessage<QueryGetMaturityLevelResponse> | undefined, b: QueryGetMaturityLevelResponse | PlainMessage<QueryGetMaturityLevelResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetMaturityLevelResponse, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryAllMaturityLevelRequest
 */
export class QueryAllMaturityLevelRequest extends Message<QueryAllMaturityLevelRequest> {
  /**
   * @generated from field: bool active = 1;
   */
  active = false;

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: string asset_enabled = 3;
   */
  assetEnabled = "";

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllMaturityLevelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryAllMaturityLevelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "asset_enabled", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMaturityLevelRequest {
    return new QueryAllMaturityLevelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMaturityLevelRequest {
    return new QueryAllMaturityLevelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMaturityLevelRequest {
    return new QueryAllMaturityLevelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMaturityLevelRequest | PlainMessage<QueryAllMaturityLevelRequest> | undefined, b: QueryAllMaturityLevelRequest | PlainMessage<QueryAllMaturityLevelRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllMaturityLevelRequest, a, b);
  }
}

/**
 * @generated from message pryzm.assets.v1.QueryAllMaturityLevelResponse
 */
export class QueryAllMaturityLevelResponse extends Message<QueryAllMaturityLevelResponse> {
  /**
   * @generated from field: repeated pryzm.assets.v1.MaturityLevel maturity_level = 1;
   */
  maturityLevel: MaturityLevel[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllMaturityLevelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.assets.v1.QueryAllMaturityLevelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maturity_level", kind: "message", T: MaturityLevel, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllMaturityLevelResponse {
    return new QueryAllMaturityLevelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllMaturityLevelResponse {
    return new QueryAllMaturityLevelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllMaturityLevelResponse {
    return new QueryAllMaturityLevelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllMaturityLevelResponse | PlainMessage<QueryAllMaturityLevelResponse> | undefined, b: QueryAllMaturityLevelResponse | PlainMessage<QueryAllMaturityLevelResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllMaturityLevelResponse, a, b);
  }
}

