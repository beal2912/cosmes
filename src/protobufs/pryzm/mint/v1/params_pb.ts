// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/mint/v1/params.proto (package pryzm.mint.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message pryzm.mint.v1.DistributionProportions
 */
export class DistributionProportions extends Message<DistributionProportions> {
  /**
   * defines the proportion of the minted mint_denom that is to be
   * allocated as staking rewards.
   *
   * @generated from field: string staking = 1;
   */
  staking = "";

  /**
   * defines the proportion of the minted mint_denom that is
   * to be allocated as pool incentives.
   *
   * @generated from field: string pool_incentives = 2;
   */
  poolIncentives = "";

  /**
   * defines the proportion of the minted mint_denom that is
   * to be allocated to operations and development account address.
   *
   * @generated from field: string operations_and_development = 3;
   */
  operationsAndDevelopment = "";

  /**
   * defines the proportion of the minted mint_denom that is
   * to be allocated to the dapp developers.
   *
   * @generated from field: string dapp = 4;
   */
  dapp = "";

  /**
   * defines the proportion of the minted mint_denom that is
   * to be allocated to the oracle feeders.
   *
   * @generated from field: string oracle = 5;
   */
  oracle = "";

  /**
   * defines the proportion of the minted mint_denom that is
   * to be allocated to the treasury fee pool.
   *
   * @generated from field: string treasury = 6;
   */
  treasury = "";

  /**
   * defines the proportion of the minted mint_denom that is
   * to be allocated to the community pool.
   *
   * @generated from field: string community = 7;
   */
  community = "";

  constructor(data?: PartialMessage<DistributionProportions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.mint.v1.DistributionProportions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "staking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_incentives", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "operations_and_development", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "dapp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "oracle", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "treasury", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "community", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DistributionProportions {
    return new DistributionProportions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DistributionProportions {
    return new DistributionProportions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DistributionProportions {
    return new DistributionProportions().fromJsonString(jsonString, options);
  }

  static equals(a: DistributionProportions | PlainMessage<DistributionProportions> | undefined, b: DistributionProportions | PlainMessage<DistributionProportions> | undefined): boolean {
    return proto3.util.equals(DistributionProportions, a, b);
  }
}

/**
 * Params defines the parameters for the module.
 *
 * @generated from message pryzm.mint.v1.Params
 */
export class Params extends Message<Params> {
  /**
   * type of coin to mint
   *
   * @generated from field: string mint_denom = 1;
   */
  mintDenom = "";

  /**
   * maximum annual change in inflation rate
   *
   * @generated from field: string inflation_rate_change = 2;
   */
  inflationRateChange = "";

  /**
   * maximum inflation rate
   *
   * @generated from field: string inflation_max = 3;
   */
  inflationMax = "";

  /**
   * minimum inflation rate
   *
   * @generated from field: string inflation_min = 4;
   */
  inflationMin = "";

  /**
   * goal of percent bonded upryzms
   *
   * @generated from field: string goal_bonded = 5;
   */
  goalBonded = "";

  /**
   * mint epoch identifier e.g. (day, week).
   *
   * @generated from field: string epoch_identifier = 6;
   */
  epochIdentifier = "";

  /**
   * start epoch to distribute minting rewards
   *
   * @generated from field: int64 minting_rewards_distribution_start_epoch = 7;
   */
  mintingRewardsDistributionStartEpoch = protoInt64.zero;

  /**
   * defines the distribution proportions of the minted
   * denom, i.e, which stakeholders will receive the minted
   * denoms and how much.
   *
   * @generated from field: pryzm.mint.v1.DistributionProportions distribution_proportions = 8;
   */
  distributionProportions?: DistributionProportions;

  /**
   * epoch provisions from the first epoch.
   *
   * @generated from field: string genesis_epoch_provisions = 9;
   */
  genesisEpochProvisions = "";

  /**
   * @generated from field: string operations_and_development_account_address = 10;
   */
  operationsAndDevelopmentAccountAddress = "";

  constructor(data?: PartialMessage<Params>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.mint.v1.Params";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mint_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "inflation_rate_change", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "inflation_max", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inflation_min", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "goal_bonded", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "epoch_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "minting_rewards_distribution_start_epoch", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "distribution_proportions", kind: "message", T: DistributionProportions },
    { no: 9, name: "genesis_epoch_provisions", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "operations_and_development_account_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params {
    return new Params().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJsonString(jsonString, options);
  }

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean {
    return proto3.util.equals(Params, a, b);
  }
}

