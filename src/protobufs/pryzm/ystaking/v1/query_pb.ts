// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/ystaking/v1/query.proto (package pryzm.ystaking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
import { UserStakeState } from "./user_stake_state_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { AssetMaturityPoolState, AssetPoolState } from "./asset_pool_state_pb.js";

/**
 * @generated from message pryzm.ystaking.v1.QueryBondedAmountRequest
 */
export class QueryBondedAmountRequest extends Message<QueryBondedAmountRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  /**
   * @generated from field: string maturity = 2;
   */
  maturity = "";

  /**
   * @generated from field: string address = 3;
   */
  address = "";

  constructor(data?: PartialMessage<QueryBondedAmountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryBondedAmountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "maturity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBondedAmountRequest {
    return new QueryBondedAmountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBondedAmountRequest {
    return new QueryBondedAmountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBondedAmountRequest {
    return new QueryBondedAmountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBondedAmountRequest | PlainMessage<QueryBondedAmountRequest> | undefined, b: QueryBondedAmountRequest | PlainMessage<QueryBondedAmountRequest> | undefined): boolean {
    return proto3.util.equals(QueryBondedAmountRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryBondedAmountResponse
 */
export class QueryBondedAmountResponse extends Message<QueryBondedAmountResponse> {
  /**
   * @generated from field: string amount = 1;
   */
  amount = "";

  constructor(data?: PartialMessage<QueryBondedAmountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryBondedAmountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBondedAmountResponse {
    return new QueryBondedAmountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBondedAmountResponse {
    return new QueryBondedAmountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBondedAmountResponse {
    return new QueryBondedAmountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBondedAmountResponse | PlainMessage<QueryBondedAmountResponse> | undefined, b: QueryBondedAmountResponse | PlainMessage<QueryBondedAmountResponse> | undefined): boolean {
    return proto3.util.equals(QueryBondedAmountResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryRewardRequest
 */
export class QueryRewardRequest extends Message<QueryRewardRequest> {
  /**
   * @generated from field: string denom = 1;
   */
  denom = "";

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  constructor(data?: PartialMessage<QueryRewardRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryRewardRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRewardRequest {
    return new QueryRewardRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRewardRequest {
    return new QueryRewardRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRewardRequest {
    return new QueryRewardRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRewardRequest | PlainMessage<QueryRewardRequest> | undefined, b: QueryRewardRequest | PlainMessage<QueryRewardRequest> | undefined): boolean {
    return proto3.util.equals(QueryRewardRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryRewardResponse
 */
export class QueryRewardResponse extends Message<QueryRewardResponse> {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: Coin;

  constructor(data?: PartialMessage<QueryRewardResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryRewardResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amount", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRewardResponse {
    return new QueryRewardResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRewardResponse {
    return new QueryRewardResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRewardResponse {
    return new QueryRewardResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryRewardResponse | PlainMessage<QueryRewardResponse> | undefined, b: QueryRewardResponse | PlainMessage<QueryRewardResponse> | undefined): boolean {
    return proto3.util.equals(QueryRewardResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryGetUserStakeStateRequest
 */
export class QueryGetUserStakeStateRequest extends Message<QueryGetUserStakeStateRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: string asset_id = 2;
   */
  assetId = "";

  /**
   * @generated from field: string maturity_symbol = 3;
   */
  maturitySymbol = "";

  constructor(data?: PartialMessage<QueryGetUserStakeStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryGetUserStakeStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "maturity_symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetUserStakeStateRequest {
    return new QueryGetUserStakeStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetUserStakeStateRequest {
    return new QueryGetUserStakeStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetUserStakeStateRequest {
    return new QueryGetUserStakeStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetUserStakeStateRequest | PlainMessage<QueryGetUserStakeStateRequest> | undefined, b: QueryGetUserStakeStateRequest | PlainMessage<QueryGetUserStakeStateRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetUserStakeStateRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryGetUserStakeStateResponse
 */
export class QueryGetUserStakeStateResponse extends Message<QueryGetUserStakeStateResponse> {
  /**
   * @generated from field: pryzm.ystaking.v1.UserStakeState user_stake_state = 1;
   */
  userStakeState?: UserStakeState;

  constructor(data?: PartialMessage<QueryGetUserStakeStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryGetUserStakeStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_stake_state", kind: "message", T: UserStakeState },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetUserStakeStateResponse {
    return new QueryGetUserStakeStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetUserStakeStateResponse {
    return new QueryGetUserStakeStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetUserStakeStateResponse {
    return new QueryGetUserStakeStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetUserStakeStateResponse | PlainMessage<QueryGetUserStakeStateResponse> | undefined, b: QueryGetUserStakeStateResponse | PlainMessage<QueryGetUserStakeStateResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetUserStakeStateResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryAllUserStakeStateRequest
 */
export class QueryAllUserStakeStateRequest extends Message<QueryAllUserStakeStateRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  /**
   * @generated from field: string asset_id = 3;
   */
  assetId = "";

  constructor(data?: PartialMessage<QueryAllUserStakeStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryAllUserStakeStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUserStakeStateRequest {
    return new QueryAllUserStakeStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUserStakeStateRequest {
    return new QueryAllUserStakeStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUserStakeStateRequest {
    return new QueryAllUserStakeStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUserStakeStateRequest | PlainMessage<QueryAllUserStakeStateRequest> | undefined, b: QueryAllUserStakeStateRequest | PlainMessage<QueryAllUserStakeStateRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllUserStakeStateRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryAllUserStakeStateResponse
 */
export class QueryAllUserStakeStateResponse extends Message<QueryAllUserStakeStateResponse> {
  /**
   * @generated from field: repeated pryzm.ystaking.v1.UserStakeState user_stake_state = 1;
   */
  userStakeState: UserStakeState[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllUserStakeStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryAllUserStakeStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_stake_state", kind: "message", T: UserStakeState, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUserStakeStateResponse {
    return new QueryAllUserStakeStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUserStakeStateResponse {
    return new QueryAllUserStakeStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUserStakeStateResponse {
    return new QueryAllUserStakeStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUserStakeStateResponse | PlainMessage<QueryAllUserStakeStateResponse> | undefined, b: QueryAllUserStakeStateResponse | PlainMessage<QueryAllUserStakeStateResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllUserStakeStateResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryGetAssetPoolStateRequest
 */
export class QueryGetAssetPoolStateRequest extends Message<QueryGetAssetPoolStateRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  constructor(data?: PartialMessage<QueryGetAssetPoolStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryGetAssetPoolStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetAssetPoolStateRequest {
    return new QueryGetAssetPoolStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetAssetPoolStateRequest {
    return new QueryGetAssetPoolStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetAssetPoolStateRequest {
    return new QueryGetAssetPoolStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetAssetPoolStateRequest | PlainMessage<QueryGetAssetPoolStateRequest> | undefined, b: QueryGetAssetPoolStateRequest | PlainMessage<QueryGetAssetPoolStateRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetAssetPoolStateRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryGetAssetPoolStateResponse
 */
export class QueryGetAssetPoolStateResponse extends Message<QueryGetAssetPoolStateResponse> {
  /**
   * @generated from field: pryzm.ystaking.v1.AssetPoolState asset_pool_state = 1;
   */
  assetPoolState?: AssetPoolState;

  constructor(data?: PartialMessage<QueryGetAssetPoolStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryGetAssetPoolStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_pool_state", kind: "message", T: AssetPoolState },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetAssetPoolStateResponse {
    return new QueryGetAssetPoolStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetAssetPoolStateResponse {
    return new QueryGetAssetPoolStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetAssetPoolStateResponse {
    return new QueryGetAssetPoolStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetAssetPoolStateResponse | PlainMessage<QueryGetAssetPoolStateResponse> | undefined, b: QueryGetAssetPoolStateResponse | PlainMessage<QueryGetAssetPoolStateResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetAssetPoolStateResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryAllAssetPoolStateRequest
 */
export class QueryAllAssetPoolStateRequest extends Message<QueryAllAssetPoolStateRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllAssetPoolStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryAllAssetPoolStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAssetPoolStateRequest {
    return new QueryAllAssetPoolStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAssetPoolStateRequest {
    return new QueryAllAssetPoolStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAssetPoolStateRequest {
    return new QueryAllAssetPoolStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAssetPoolStateRequest | PlainMessage<QueryAllAssetPoolStateRequest> | undefined, b: QueryAllAssetPoolStateRequest | PlainMessage<QueryAllAssetPoolStateRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllAssetPoolStateRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryAllAssetPoolStateResponse
 */
export class QueryAllAssetPoolStateResponse extends Message<QueryAllAssetPoolStateResponse> {
  /**
   * @generated from field: repeated pryzm.ystaking.v1.AssetPoolState asset_pool_state = 1;
   */
  assetPoolState: AssetPoolState[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllAssetPoolStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryAllAssetPoolStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_pool_state", kind: "message", T: AssetPoolState, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAssetPoolStateResponse {
    return new QueryAllAssetPoolStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAssetPoolStateResponse {
    return new QueryAllAssetPoolStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAssetPoolStateResponse {
    return new QueryAllAssetPoolStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAssetPoolStateResponse | PlainMessage<QueryAllAssetPoolStateResponse> | undefined, b: QueryAllAssetPoolStateResponse | PlainMessage<QueryAllAssetPoolStateResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllAssetPoolStateResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryGetAssetMaturityPoolStateRequest
 */
export class QueryGetAssetMaturityPoolStateRequest extends Message<QueryGetAssetMaturityPoolStateRequest> {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId = "";

  /**
   * @generated from field: string maturity_symbol = 2;
   */
  maturitySymbol = "";

  constructor(data?: PartialMessage<QueryGetAssetMaturityPoolStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryGetAssetMaturityPoolStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "maturity_symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetAssetMaturityPoolStateRequest {
    return new QueryGetAssetMaturityPoolStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetAssetMaturityPoolStateRequest {
    return new QueryGetAssetMaturityPoolStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetAssetMaturityPoolStateRequest {
    return new QueryGetAssetMaturityPoolStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetAssetMaturityPoolStateRequest | PlainMessage<QueryGetAssetMaturityPoolStateRequest> | undefined, b: QueryGetAssetMaturityPoolStateRequest | PlainMessage<QueryGetAssetMaturityPoolStateRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetAssetMaturityPoolStateRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryGetAssetMaturityPoolStateResponse
 */
export class QueryGetAssetMaturityPoolStateResponse extends Message<QueryGetAssetMaturityPoolStateResponse> {
  /**
   * @generated from field: pryzm.ystaking.v1.AssetMaturityPoolState asset_maturity_pool_state = 1;
   */
  assetMaturityPoolState?: AssetMaturityPoolState;

  constructor(data?: PartialMessage<QueryGetAssetMaturityPoolStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryGetAssetMaturityPoolStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_maturity_pool_state", kind: "message", T: AssetMaturityPoolState },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetAssetMaturityPoolStateResponse {
    return new QueryGetAssetMaturityPoolStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetAssetMaturityPoolStateResponse {
    return new QueryGetAssetMaturityPoolStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetAssetMaturityPoolStateResponse {
    return new QueryGetAssetMaturityPoolStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetAssetMaturityPoolStateResponse | PlainMessage<QueryGetAssetMaturityPoolStateResponse> | undefined, b: QueryGetAssetMaturityPoolStateResponse | PlainMessage<QueryGetAssetMaturityPoolStateResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetAssetMaturityPoolStateResponse, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryAllAssetMaturityPoolStateRequest
 */
export class QueryAllAssetMaturityPoolStateRequest extends Message<QueryAllAssetMaturityPoolStateRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllAssetMaturityPoolStateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryAllAssetMaturityPoolStateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAssetMaturityPoolStateRequest {
    return new QueryAllAssetMaturityPoolStateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAssetMaturityPoolStateRequest {
    return new QueryAllAssetMaturityPoolStateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAssetMaturityPoolStateRequest {
    return new QueryAllAssetMaturityPoolStateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAssetMaturityPoolStateRequest | PlainMessage<QueryAllAssetMaturityPoolStateRequest> | undefined, b: QueryAllAssetMaturityPoolStateRequest | PlainMessage<QueryAllAssetMaturityPoolStateRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllAssetMaturityPoolStateRequest, a, b);
  }
}

/**
 * @generated from message pryzm.ystaking.v1.QueryAllAssetMaturityPoolStateResponse
 */
export class QueryAllAssetMaturityPoolStateResponse extends Message<QueryAllAssetMaturityPoolStateResponse> {
  /**
   * @generated from field: repeated pryzm.ystaking.v1.AssetMaturityPoolState asset_maturity_pool_state = 1;
   */
  assetMaturityPoolState: AssetMaturityPoolState[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllAssetMaturityPoolStateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.ystaking.v1.QueryAllAssetMaturityPoolStateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_maturity_pool_state", kind: "message", T: AssetMaturityPoolState, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAssetMaturityPoolStateResponse {
    return new QueryAllAssetMaturityPoolStateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAssetMaturityPoolStateResponse {
    return new QueryAllAssetMaturityPoolStateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAssetMaturityPoolStateResponse {
    return new QueryAllAssetMaturityPoolStateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAssetMaturityPoolStateResponse | PlainMessage<QueryAllAssetMaturityPoolStateResponse> | undefined, b: QueryAllAssetMaturityPoolStateResponse | PlainMessage<QueryAllAssetMaturityPoolStateResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllAssetMaturityPoolStateResponse, a, b);
  }
}

