// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file pryzm/incentives/v1/query.proto (package pryzm.incentives.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { Pool } from "./pool_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { Bond } from "./bond_pb.js";
import { Unbonding } from "./unbonding_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message pryzm.incentives.v1.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message pryzm.incentives.v1.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: pryzm.incentives.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryGetPoolRequest
 */
export class QueryGetPoolRequest extends Message<QueryGetPoolRequest> {
  /**
   * @generated from field: string bond_denom = 1;
   */
  bondDenom = "";

  constructor(data?: PartialMessage<QueryGetPoolRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryGetPoolRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bond_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolRequest {
    return new QueryGetPoolRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolRequest {
    return new QueryGetPoolRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolRequest {
    return new QueryGetPoolRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolRequest | PlainMessage<QueryGetPoolRequest> | undefined, b: QueryGetPoolRequest | PlainMessage<QueryGetPoolRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolRequest, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryGetPoolResponse
 */
export class QueryGetPoolResponse extends Message<QueryGetPoolResponse> {
  /**
   * @generated from field: pryzm.incentives.v1.Pool pool = 1;
   */
  pool?: Pool;

  constructor(data?: PartialMessage<QueryGetPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryGetPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: Pool },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPoolResponse {
    return new QueryGetPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPoolResponse {
    return new QueryGetPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPoolResponse {
    return new QueryGetPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPoolResponse | PlainMessage<QueryGetPoolResponse> | undefined, b: QueryGetPoolResponse | PlainMessage<QueryGetPoolResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryAllPoolRequest
 */
export class QueryAllPoolRequest extends Message<QueryAllPoolRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPoolRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryAllPoolRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolRequest {
    return new QueryAllPoolRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolRequest {
    return new QueryAllPoolRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolRequest {
    return new QueryAllPoolRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolRequest | PlainMessage<QueryAllPoolRequest> | undefined, b: QueryAllPoolRequest | PlainMessage<QueryAllPoolRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolRequest, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryAllPoolResponse
 */
export class QueryAllPoolResponse extends Message<QueryAllPoolResponse> {
  /**
   * @generated from field: repeated pryzm.incentives.v1.Pool pool = 1;
   */
  pool: Pool[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryAllPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool", kind: "message", T: Pool, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPoolResponse {
    return new QueryAllPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPoolResponse {
    return new QueryAllPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPoolResponse {
    return new QueryAllPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPoolResponse | PlainMessage<QueryAllPoolResponse> | undefined, b: QueryAllPoolResponse | PlainMessage<QueryAllPoolResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPoolResponse, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryGetBondRequest
 */
export class QueryGetBondRequest extends Message<QueryGetBondRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: string bond_denom = 2;
   */
  bondDenom = "";

  constructor(data?: PartialMessage<QueryGetBondRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryGetBondRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bond_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetBondRequest {
    return new QueryGetBondRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetBondRequest {
    return new QueryGetBondRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetBondRequest {
    return new QueryGetBondRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetBondRequest | PlainMessage<QueryGetBondRequest> | undefined, b: QueryGetBondRequest | PlainMessage<QueryGetBondRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetBondRequest, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryGetBondResponse
 */
export class QueryGetBondResponse extends Message<QueryGetBondResponse> {
  /**
   * @generated from field: pryzm.incentives.v1.Bond bond = 1;
   */
  bond?: Bond;

  constructor(data?: PartialMessage<QueryGetBondResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryGetBondResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bond", kind: "message", T: Bond },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetBondResponse {
    return new QueryGetBondResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetBondResponse {
    return new QueryGetBondResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetBondResponse {
    return new QueryGetBondResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetBondResponse | PlainMessage<QueryGetBondResponse> | undefined, b: QueryGetBondResponse | PlainMessage<QueryGetBondResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetBondResponse, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryAllBondRequest
 */
export class QueryAllBondRequest extends Message<QueryAllBondRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  constructor(data?: PartialMessage<QueryAllBondRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryAllBondRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllBondRequest {
    return new QueryAllBondRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllBondRequest {
    return new QueryAllBondRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllBondRequest {
    return new QueryAllBondRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllBondRequest | PlainMessage<QueryAllBondRequest> | undefined, b: QueryAllBondRequest | PlainMessage<QueryAllBondRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllBondRequest, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryAllBondResponse
 */
export class QueryAllBondResponse extends Message<QueryAllBondResponse> {
  /**
   * @generated from field: repeated pryzm.incentives.v1.Bond bond = 1;
   */
  bond: Bond[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllBondResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryAllBondResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bond", kind: "message", T: Bond, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllBondResponse {
    return new QueryAllBondResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllBondResponse {
    return new QueryAllBondResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllBondResponse {
    return new QueryAllBondResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllBondResponse | PlainMessage<QueryAllBondResponse> | undefined, b: QueryAllBondResponse | PlainMessage<QueryAllBondResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllBondResponse, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryGetUnbondingRequest
 */
export class QueryGetUnbondingRequest extends Message<QueryGetUnbondingRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetUnbondingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryGetUnbondingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetUnbondingRequest {
    return new QueryGetUnbondingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetUnbondingRequest {
    return new QueryGetUnbondingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetUnbondingRequest {
    return new QueryGetUnbondingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetUnbondingRequest | PlainMessage<QueryGetUnbondingRequest> | undefined, b: QueryGetUnbondingRequest | PlainMessage<QueryGetUnbondingRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetUnbondingRequest, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryGetUnbondingResponse
 */
export class QueryGetUnbondingResponse extends Message<QueryGetUnbondingResponse> {
  /**
   * @generated from field: pryzm.incentives.v1.Unbonding unbonding = 1;
   */
  unbonding?: Unbonding;

  constructor(data?: PartialMessage<QueryGetUnbondingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryGetUnbondingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unbonding", kind: "message", T: Unbonding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetUnbondingResponse {
    return new QueryGetUnbondingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetUnbondingResponse {
    return new QueryGetUnbondingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetUnbondingResponse {
    return new QueryGetUnbondingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetUnbondingResponse | PlainMessage<QueryGetUnbondingResponse> | undefined, b: QueryGetUnbondingResponse | PlainMessage<QueryGetUnbondingResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetUnbondingResponse, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryAllUnbondingRequest
 */
export class QueryAllUnbondingRequest extends Message<QueryAllUnbondingRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  constructor(data?: PartialMessage<QueryAllUnbondingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryAllUnbondingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUnbondingRequest {
    return new QueryAllUnbondingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUnbondingRequest {
    return new QueryAllUnbondingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUnbondingRequest {
    return new QueryAllUnbondingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUnbondingRequest | PlainMessage<QueryAllUnbondingRequest> | undefined, b: QueryAllUnbondingRequest | PlainMessage<QueryAllUnbondingRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllUnbondingRequest, a, b);
  }
}

/**
 * @generated from message pryzm.incentives.v1.QueryAllUnbondingResponse
 */
export class QueryAllUnbondingResponse extends Message<QueryAllUnbondingResponse> {
  /**
   * @generated from field: repeated pryzm.incentives.v1.Unbonding unbonding = 1;
   */
  unbonding: Unbonding[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllUnbondingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pryzm.incentives.v1.QueryAllUnbondingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unbonding", kind: "message", T: Unbonding, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllUnbondingResponse {
    return new QueryAllUnbondingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllUnbondingResponse {
    return new QueryAllUnbondingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllUnbondingResponse {
    return new QueryAllUnbondingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllUnbondingResponse | PlainMessage<QueryAllUnbondingResponse> | undefined, b: QueryAllUnbondingResponse | PlainMessage<QueryAllUnbondingResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllUnbondingResponse, a, b);
  }
}

