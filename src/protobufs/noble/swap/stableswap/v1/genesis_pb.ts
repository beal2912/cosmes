// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file noble/swap/stableswap/v1/genesis.proto (package noble.swap.stableswap.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Pool } from "./pool_pb.js";
import { BondedPosition, UnbondingPosition } from "./position_pb.js";

/**
 * GenesisState defines the StableSwap genesis state.
 *
 * @generated from message noble.swap.stableswap.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: map<uint64, noble.swap.stableswap.v1.Pool> pools = 1;
   */
  pools: { [key: string]: Pool } = {};

  /**
   * @generated from field: repeated noble.swap.stableswap.v1.PoolsTotalUnbondingSharesEntry pools_total_unbonding_shares = 2;
   */
  poolsTotalUnbondingShares: PoolsTotalUnbondingSharesEntry[] = [];

  /**
   * @generated from field: repeated noble.swap.stableswap.v1.UsersTotalBondedSharesEntry users_total_bonded_shares = 3;
   */
  usersTotalBondedShares: UsersTotalBondedSharesEntry[] = [];

  /**
   * @generated from field: repeated noble.swap.stableswap.v1.UsersTotalUnbondingSharesEntry users_total_unbonding_shares = 4;
   */
  usersTotalUnbondingShares: UsersTotalUnbondingSharesEntry[] = [];

  /**
   * @generated from field: repeated noble.swap.stableswap.v1.BondedPositionEntry bonded_positions = 5;
   */
  bondedPositions: BondedPositionEntry[] = [];

  /**
   * @generated from field: repeated noble.swap.stableswap.v1.UnbondingPositionEntry unbonding_positions = 6;
   */
  unbondingPositions: UnbondingPositionEntry[] = [];

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.swap.stableswap.v1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pools", kind: "map", K: 4 /* ScalarType.UINT64 */, V: {kind: "message", T: Pool} },
    { no: 2, name: "pools_total_unbonding_shares", kind: "message", T: PoolsTotalUnbondingSharesEntry, repeated: true },
    { no: 3, name: "users_total_bonded_shares", kind: "message", T: UsersTotalBondedSharesEntry, repeated: true },
    { no: 4, name: "users_total_unbonding_shares", kind: "message", T: UsersTotalUnbondingSharesEntry, repeated: true },
    { no: 5, name: "bonded_positions", kind: "message", T: BondedPositionEntry, repeated: true },
    { no: 6, name: "unbonding_positions", kind: "message", T: UnbondingPositionEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

/**
 * @generated from message noble.swap.stableswap.v1.BondedPositionEntry
 */
export class BondedPositionEntry extends Message<BondedPositionEntry> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  /**
   * @generated from field: int64 timestamp = 3;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: noble.swap.stableswap.v1.BondedPosition bonded_position = 4;
   */
  bondedPosition?: BondedPosition;

  constructor(data?: PartialMessage<BondedPositionEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.swap.stableswap.v1.BondedPositionEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "bonded_position", kind: "message", T: BondedPosition },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BondedPositionEntry {
    return new BondedPositionEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BondedPositionEntry {
    return new BondedPositionEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BondedPositionEntry {
    return new BondedPositionEntry().fromJsonString(jsonString, options);
  }

  static equals(a: BondedPositionEntry | PlainMessage<BondedPositionEntry> | undefined, b: BondedPositionEntry | PlainMessage<BondedPositionEntry> | undefined): boolean {
    return proto3.util.equals(BondedPositionEntry, a, b);
  }
}

/**
 * @generated from message noble.swap.stableswap.v1.UnbondingPositionEntry
 */
export class UnbondingPositionEntry extends Message<UnbondingPositionEntry> {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  /**
   * @generated from field: uint64 pool_id = 3;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: noble.swap.stableswap.v1.UnbondingPosition unbonding_position = 4;
   */
  unbondingPosition?: UnbondingPosition;

  constructor(data?: PartialMessage<UnbondingPositionEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.swap.stableswap.v1.UnbondingPositionEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "unbonding_position", kind: "message", T: UnbondingPosition },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbondingPositionEntry {
    return new UnbondingPositionEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbondingPositionEntry {
    return new UnbondingPositionEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbondingPositionEntry {
    return new UnbondingPositionEntry().fromJsonString(jsonString, options);
  }

  static equals(a: UnbondingPositionEntry | PlainMessage<UnbondingPositionEntry> | undefined, b: UnbondingPositionEntry | PlainMessage<UnbondingPositionEntry> | undefined): boolean {
    return proto3.util.equals(UnbondingPositionEntry, a, b);
  }
}

/**
 * @generated from message noble.swap.stableswap.v1.PoolsTotalUnbondingSharesEntry
 */
export class PoolsTotalUnbondingSharesEntry extends Message<PoolsTotalUnbondingSharesEntry> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string shares = 2;
   */
  shares = "";

  constructor(data?: PartialMessage<PoolsTotalUnbondingSharesEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.swap.stableswap.v1.PoolsTotalUnbondingSharesEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "shares", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PoolsTotalUnbondingSharesEntry {
    return new PoolsTotalUnbondingSharesEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PoolsTotalUnbondingSharesEntry {
    return new PoolsTotalUnbondingSharesEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PoolsTotalUnbondingSharesEntry {
    return new PoolsTotalUnbondingSharesEntry().fromJsonString(jsonString, options);
  }

  static equals(a: PoolsTotalUnbondingSharesEntry | PlainMessage<PoolsTotalUnbondingSharesEntry> | undefined, b: PoolsTotalUnbondingSharesEntry | PlainMessage<PoolsTotalUnbondingSharesEntry> | undefined): boolean {
    return proto3.util.equals(PoolsTotalUnbondingSharesEntry, a, b);
  }
}

/**
 * @generated from message noble.swap.stableswap.v1.UsersTotalBondedSharesEntry
 */
export class UsersTotalBondedSharesEntry extends Message<UsersTotalBondedSharesEntry> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  /**
   * @generated from field: string shares = 3;
   */
  shares = "";

  constructor(data?: PartialMessage<UsersTotalBondedSharesEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.swap.stableswap.v1.UsersTotalBondedSharesEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shares", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsersTotalBondedSharesEntry {
    return new UsersTotalBondedSharesEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsersTotalBondedSharesEntry {
    return new UsersTotalBondedSharesEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsersTotalBondedSharesEntry {
    return new UsersTotalBondedSharesEntry().fromJsonString(jsonString, options);
  }

  static equals(a: UsersTotalBondedSharesEntry | PlainMessage<UsersTotalBondedSharesEntry> | undefined, b: UsersTotalBondedSharesEntry | PlainMessage<UsersTotalBondedSharesEntry> | undefined): boolean {
    return proto3.util.equals(UsersTotalBondedSharesEntry, a, b);
  }
}

/**
 * @generated from message noble.swap.stableswap.v1.UsersTotalUnbondingSharesEntry
 */
export class UsersTotalUnbondingSharesEntry extends Message<UsersTotalUnbondingSharesEntry> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string address = 2;
   */
  address = "";

  /**
   * @generated from field: string shares = 3;
   */
  shares = "";

  constructor(data?: PartialMessage<UsersTotalUnbondingSharesEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.swap.stableswap.v1.UsersTotalUnbondingSharesEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "shares", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsersTotalUnbondingSharesEntry {
    return new UsersTotalUnbondingSharesEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsersTotalUnbondingSharesEntry {
    return new UsersTotalUnbondingSharesEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsersTotalUnbondingSharesEntry {
    return new UsersTotalUnbondingSharesEntry().fromJsonString(jsonString, options);
  }

  static equals(a: UsersTotalUnbondingSharesEntry | PlainMessage<UsersTotalUnbondingSharesEntry> | undefined, b: UsersTotalUnbondingSharesEntry | PlainMessage<UsersTotalUnbondingSharesEntry> | undefined): boolean {
    return proto3.util.equals(UsersTotalUnbondingSharesEntry, a, b);
  }
}

