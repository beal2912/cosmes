// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file noble/swap/stableswap/v1/tx.proto (package noble.swap.stableswap.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAddLiquidity, MsgAddLiquidityResponse, MsgCreatePool, MsgCreatePoolResponse, MsgRemoveLiquidity, MsgRemoveLiquidityResponse, MsgUpdatePool, MsgUpdatePoolResponse } from "./tx_pb.js";

const TYPE_NAME = "noble.swap.stableswap.v1.Msg";

/**
 * CreatePool creates a new `StableSwap` Pool.
 *
 * @generated from rpc noble.swap.stableswap.v1.Msg.CreatePool
 */
export const MsgCreatePoolService = {
  typeName: TYPE_NAME,
  method: "CreatePool",
  Request: MsgCreatePool,
  Response: MsgCreatePoolResponse,
} as const;

/**
 * UpdatePool updates the params of a `StableSwap` Pool.
 *
 * @generated from rpc noble.swap.stableswap.v1.Msg.UpdatePool
 */
export const MsgUpdatePoolService = {
  typeName: TYPE_NAME,
  method: "UpdatePool",
  Request: MsgUpdatePool,
  Response: MsgUpdatePoolResponse,
} as const;

/**
 * AddLiquidity allows a user to add liquidity to a `StableSwap` liquidity pool.
 *
 * @generated from rpc noble.swap.stableswap.v1.Msg.AddLiquidity
 */
export const MsgAddLiquidityService = {
  typeName: TYPE_NAME,
  method: "AddLiquidity",
  Request: MsgAddLiquidity,
  Response: MsgAddLiquidityResponse,
} as const;

/**
 * RemoveLiquidity allows a user to remove liquidity from a `StableSwap` liquidity pool.
 *
 * @generated from rpc noble.swap.stableswap.v1.Msg.RemoveLiquidity
 */
export const MsgRemoveLiquidityService = {
  typeName: TYPE_NAME,
  method: "RemoveLiquidity",
  Request: MsgRemoveLiquidity,
  Response: MsgRemoveLiquidityResponse,
} as const;

