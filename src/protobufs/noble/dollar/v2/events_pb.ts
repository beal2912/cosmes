// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file noble/dollar/v2/events.proto (package noble.dollar.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Provider } from "./dollar_pb.js";

/**
 * YieldRecipientSet is an event emitted when the yield recipient for an IBC channel is set.
 *
 * @generated from message noble.dollar.v2.YieldRecipientSet
 */
export class YieldRecipientSet extends Message<YieldRecipientSet> {
  /**
   * @generated from field: noble.dollar.v2.Provider provider = 1;
   */
  provider = Provider.IBC;

  /**
   * @generated from field: string identifier = 2;
   */
  identifier = "";

  /**
   * @generated from field: string recipient = 3;
   */
  recipient = "";

  constructor(data?: PartialMessage<YieldRecipientSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "noble.dollar.v2.YieldRecipientSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "enum", T: proto3.getEnumType(Provider) },
    { no: 2, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "recipient", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): YieldRecipientSet {
    return new YieldRecipientSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): YieldRecipientSet {
    return new YieldRecipientSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): YieldRecipientSet {
    return new YieldRecipientSet().fromJsonString(jsonString, options);
  }

  static equals(a: YieldRecipientSet | PlainMessage<YieldRecipientSet> | undefined, b: YieldRecipientSet | PlainMessage<YieldRecipientSet> | undefined): boolean {
    return proto3.util.equals(YieldRecipientSet, a, b);
  }
}

