// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file dymensionxyz/dymension/txfees/v1beta1/query.proto (package dymensionxyz.dymension.txfees.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryBaseDenomRequest, QueryBaseDenomResponse, QueryDenomRouteRequest, QueryDenomRouteResponse, QueryFeeTokenRequest, QueryFeeTokenResponse, QueryFeeTokensRequest, QueryFeeTokensResponse, QueryParamsRequest, QueryParamsResponse } from "./query_pb.js";

const TYPE_NAME = "dymensionxyz.dymension.txfees.v1beta1.Query";

/**
 * Params returns params.
 *
 * @generated from rpc dymensionxyz.dymension.txfees.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * FeeToken returns a single fee token by denom
 *
 * @generated from rpc dymensionxyz.dymension.txfees.v1beta1.Query.FeeToken
 */
export const QueryFeeTokenService = {
  typeName: TYPE_NAME,
  method: "FeeToken",
  Request: QueryFeeTokenRequest,
  Response: QueryFeeTokenResponse,
} as const;

/**
 * FeeTokens returns a list of all the accepted fee tokens and their
 * corresponding pools.
 * It does not include the BaseDenom, which has its own query endpoint
 *
 * @generated from rpc dymensionxyz.dymension.txfees.v1beta1.Query.FeeTokens
 */
export const QueryFeeTokensService = {
  typeName: TYPE_NAME,
  method: "FeeTokens",
  Request: QueryFeeTokensRequest,
  Response: QueryFeeTokensResponse,
} as const;

/**
 * Returns the swap route for a specified denom
 *
 * @generated from rpc dymensionxyz.dymension.txfees.v1beta1.Query.DenomRoute
 */
export const QueryDenomRouteService = {
  typeName: TYPE_NAME,
  method: "DenomRoute",
  Request: QueryDenomRouteRequest,
  Response: QueryDenomRouteResponse,
} as const;

/**
 * Returns a list of all base denom tokens and their corresponding pools.
 *
 * @generated from rpc dymensionxyz.dymension.txfees.v1beta1.Query.BaseDenom
 */
export const QueryBaseDenomService = {
  typeName: TYPE_NAME,
  method: "BaseDenom",
  Request: QueryBaseDenomRequest,
  Response: QueryBaseDenomResponse,
} as const;

