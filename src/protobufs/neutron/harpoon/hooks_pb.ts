// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file neutron/harpoon/hooks.proto (package neutron.harpoon, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Hook types that can be subscribed to.
 *
 * @generated from enum neutron.harpoon.HookType
 */
export enum HookType {
  /**
   * @generated from enum value: HOOK_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Triggered after validator is created
   *
   * @generated from enum value: HOOK_TYPE_AFTER_VALIDATOR_CREATED = 1;
   */
  AFTER_VALIDATOR_CREATED = 1,

  /**
   * Triggered before validator is modified
   *
   * @generated from enum value: HOOK_TYPE_BEFORE_VALIDATOR_MODIFIED = 2;
   */
  BEFORE_VALIDATOR_MODIFIED = 2,

  /**
   * Triggered after validator is removed
   *
   * @generated from enum value: HOOK_TYPE_AFTER_VALIDATOR_REMOVED = 3;
   */
  AFTER_VALIDATOR_REMOVED = 3,

  /**
   * Triggered after validator is bonded
   *
   * @generated from enum value: HOOK_TYPE_AFTER_VALIDATOR_BONDED = 4;
   */
  AFTER_VALIDATOR_BONDED = 4,

  /**
   * Triggered after validator begins unbonding
   *
   * @generated from enum value: HOOK_TYPE_AFTER_VALIDATOR_BEGIN_UNBONDING = 5;
   */
  AFTER_VALIDATOR_BEGIN_UNBONDING = 5,

  /**
   * Triggered before delegation is created
   *
   * @generated from enum value: HOOK_TYPE_BEFORE_DELEGATION_CREATED = 6;
   */
  BEFORE_DELEGATION_CREATED = 6,

  /**
   * Triggered before delegation's shares are modified
   *
   * @generated from enum value: HOOK_TYPE_BEFORE_DELEGATION_SHARES_MODIFIED = 7;
   */
  BEFORE_DELEGATION_SHARES_MODIFIED = 7,

  /**
   * Triggered before delegation is removed
   *
   * @generated from enum value: HOOK_TYPE_BEFORE_DELEGATION_REMOVED = 8;
   */
  BEFORE_DELEGATION_REMOVED = 8,

  /**
   * Triggered after delegation is modified
   *
   * @generated from enum value: HOOK_TYPE_AFTER_DELEGATION_MODIFIED = 9;
   */
  AFTER_DELEGATION_MODIFIED = 9,

  /**
   * Triggered before validator is slashed
   *
   * @generated from enum value: HOOK_TYPE_BEFORE_VALIDATOR_SLASHED = 10;
   */
  BEFORE_VALIDATOR_SLASHED = 10,

  /**
   * Triggered after unbonding is initiated
   *
   * @generated from enum value: HOOK_TYPE_AFTER_UNBONDING_INITIATED = 11;
   */
  AFTER_UNBONDING_INITIATED = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(HookType)
proto3.util.setEnumType(HookType, "neutron.harpoon.HookType", [
  { no: 0, name: "HOOK_TYPE_UNSPECIFIED" },
  { no: 1, name: "HOOK_TYPE_AFTER_VALIDATOR_CREATED" },
  { no: 2, name: "HOOK_TYPE_BEFORE_VALIDATOR_MODIFIED" },
  { no: 3, name: "HOOK_TYPE_AFTER_VALIDATOR_REMOVED" },
  { no: 4, name: "HOOK_TYPE_AFTER_VALIDATOR_BONDED" },
  { no: 5, name: "HOOK_TYPE_AFTER_VALIDATOR_BEGIN_UNBONDING" },
  { no: 6, name: "HOOK_TYPE_BEFORE_DELEGATION_CREATED" },
  { no: 7, name: "HOOK_TYPE_BEFORE_DELEGATION_SHARES_MODIFIED" },
  { no: 8, name: "HOOK_TYPE_BEFORE_DELEGATION_REMOVED" },
  { no: 9, name: "HOOK_TYPE_AFTER_DELEGATION_MODIFIED" },
  { no: 10, name: "HOOK_TYPE_BEFORE_VALIDATOR_SLASHED" },
  { no: 11, name: "HOOK_TYPE_AFTER_UNBONDING_INITIATED" },
]);

/**
 * Specifies how subscribed contract_addresses are stored in the KV store for each hook type.
 *
 * @generated from message neutron.harpoon.HookSubscriptions
 */
export class HookSubscriptions extends Message<HookSubscriptions> {
  /**
   * The hook type being subscribed to.
   *
   * @generated from field: neutron.harpoon.HookType hook_type = 1;
   */
  hookType = HookType.UNSPECIFIED;

  /**
   * Contract addresses subscribed to this hook type.
   *
   * @generated from field: repeated string contract_addresses = 2;
   */
  contractAddresses: string[] = [];

  constructor(data?: PartialMessage<HookSubscriptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "neutron.harpoon.HookSubscriptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hook_type", kind: "enum", T: proto3.getEnumType(HookType) },
    { no: 2, name: "contract_addresses", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HookSubscriptions {
    return new HookSubscriptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HookSubscriptions {
    return new HookSubscriptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HookSubscriptions {
    return new HookSubscriptions().fromJsonString(jsonString, options);
  }

  static equals(a: HookSubscriptions | PlainMessage<HookSubscriptions> | undefined, b: HookSubscriptions | PlainMessage<HookSubscriptions> | undefined): boolean {
    return proto3.util.equals(HookSubscriptions, a, b);
  }
}

