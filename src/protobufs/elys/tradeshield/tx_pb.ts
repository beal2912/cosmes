// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/tradeshield/tx.proto (package elys.tradeshield, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { OrderPrice, PerpetualOrderType, PerpetualPosition, SpotOrderType } from "./types_pb.js";
import { Coin } from "../../cosmos/base/v1beta1/coin_pb.js";
import { Params } from "./params_pb.js";

/**
 * @generated from message elys.tradeshield.MsgCreatePendingSpotOrder
 */
export class MsgCreatePendingSpotOrder extends Message<MsgCreatePendingSpotOrder> {
  /**
   * @generated from field: elys.tradeshield.SpotOrderType order_type = 1;
   */
  orderType = SpotOrderType.STOPLOSS;

  /**
   * @generated from field: elys.tradeshield.OrderPrice order_price = 2;
   */
  orderPrice?: OrderPrice;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin order_amount = 3;
   */
  orderAmount?: Coin;

  /**
   * @generated from field: string owner_address = 4;
   */
  ownerAddress = "";

  /**
   * @generated from field: string order_target_denom = 5;
   */
  orderTargetDenom = "";

  constructor(data?: PartialMessage<MsgCreatePendingSpotOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgCreatePendingSpotOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_type", kind: "enum", T: proto3.getEnumType(SpotOrderType) },
    { no: 2, name: "order_price", kind: "message", T: OrderPrice },
    { no: 3, name: "order_amount", kind: "message", T: Coin },
    { no: 4, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_target_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreatePendingSpotOrder {
    return new MsgCreatePendingSpotOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreatePendingSpotOrder {
    return new MsgCreatePendingSpotOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreatePendingSpotOrder {
    return new MsgCreatePendingSpotOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreatePendingSpotOrder | PlainMessage<MsgCreatePendingSpotOrder> | undefined, b: MsgCreatePendingSpotOrder | PlainMessage<MsgCreatePendingSpotOrder> | undefined): boolean {
    return proto3.util.equals(MsgCreatePendingSpotOrder, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgCreatePendingSpotOrderResponse
 */
export class MsgCreatePendingSpotOrderResponse extends Message<MsgCreatePendingSpotOrderResponse> {
  /**
   * @generated from field: uint64 order_id = 1;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCreatePendingSpotOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgCreatePendingSpotOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreatePendingSpotOrderResponse {
    return new MsgCreatePendingSpotOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreatePendingSpotOrderResponse {
    return new MsgCreatePendingSpotOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreatePendingSpotOrderResponse {
    return new MsgCreatePendingSpotOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreatePendingSpotOrderResponse | PlainMessage<MsgCreatePendingSpotOrderResponse> | undefined, b: MsgCreatePendingSpotOrderResponse | PlainMessage<MsgCreatePendingSpotOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreatePendingSpotOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgUpdatePendingSpotOrder
 */
export class MsgUpdatePendingSpotOrder extends Message<MsgUpdatePendingSpotOrder> {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress = "";

  /**
   * @generated from field: uint64 order_id = 2;
   */
  orderId = protoInt64.zero;

  /**
   * @generated from field: elys.tradeshield.OrderPrice order_price = 3;
   */
  orderPrice?: OrderPrice;

  constructor(data?: PartialMessage<MsgUpdatePendingSpotOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgUpdatePendingSpotOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "order_price", kind: "message", T: OrderPrice },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePendingSpotOrder {
    return new MsgUpdatePendingSpotOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePendingSpotOrder {
    return new MsgUpdatePendingSpotOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePendingSpotOrder {
    return new MsgUpdatePendingSpotOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePendingSpotOrder | PlainMessage<MsgUpdatePendingSpotOrder> | undefined, b: MsgUpdatePendingSpotOrder | PlainMessage<MsgUpdatePendingSpotOrder> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePendingSpotOrder, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgUpdatePendingSpotOrderResponse
 */
export class MsgUpdatePendingSpotOrderResponse extends Message<MsgUpdatePendingSpotOrderResponse> {
  constructor(data?: PartialMessage<MsgUpdatePendingSpotOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgUpdatePendingSpotOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePendingSpotOrderResponse {
    return new MsgUpdatePendingSpotOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePendingSpotOrderResponse {
    return new MsgUpdatePendingSpotOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePendingSpotOrderResponse {
    return new MsgUpdatePendingSpotOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePendingSpotOrderResponse | PlainMessage<MsgUpdatePendingSpotOrderResponse> | undefined, b: MsgUpdatePendingSpotOrderResponse | PlainMessage<MsgUpdatePendingSpotOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePendingSpotOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgDeletePendingSpotOrder
 */
export class MsgDeletePendingSpotOrder extends Message<MsgDeletePendingSpotOrder> {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress = "";

  /**
   * @generated from field: uint64 order_id = 2;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgDeletePendingSpotOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgDeletePendingSpotOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeletePendingSpotOrder {
    return new MsgDeletePendingSpotOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeletePendingSpotOrder {
    return new MsgDeletePendingSpotOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeletePendingSpotOrder {
    return new MsgDeletePendingSpotOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeletePendingSpotOrder | PlainMessage<MsgDeletePendingSpotOrder> | undefined, b: MsgDeletePendingSpotOrder | PlainMessage<MsgDeletePendingSpotOrder> | undefined): boolean {
    return proto3.util.equals(MsgDeletePendingSpotOrder, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgDeletePendingSpotOrderResponse
 */
export class MsgDeletePendingSpotOrderResponse extends Message<MsgDeletePendingSpotOrderResponse> {
  constructor(data?: PartialMessage<MsgDeletePendingSpotOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgDeletePendingSpotOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeletePendingSpotOrderResponse {
    return new MsgDeletePendingSpotOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeletePendingSpotOrderResponse {
    return new MsgDeletePendingSpotOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeletePendingSpotOrderResponse {
    return new MsgDeletePendingSpotOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeletePendingSpotOrderResponse | PlainMessage<MsgDeletePendingSpotOrderResponse> | undefined, b: MsgDeletePendingSpotOrderResponse | PlainMessage<MsgDeletePendingSpotOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeletePendingSpotOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgCreatePendingPerpetualOrder
 */
export class MsgCreatePendingPerpetualOrder extends Message<MsgCreatePendingPerpetualOrder> {
  /**
   * @generated from field: elys.tradeshield.PerpetualOrderType order_type = 1;
   */
  orderType = PerpetualOrderType.LIMITOPEN;

  /**
   * @generated from field: elys.tradeshield.OrderPrice trigger_price = 2;
   */
  triggerPrice?: OrderPrice;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin collateral = 3;
   */
  collateral?: Coin;

  /**
   * @generated from field: string owner_address = 4;
   */
  ownerAddress = "";

  /**
   * @generated from field: string trading_asset = 5;
   */
  tradingAsset = "";

  /**
   * @generated from field: elys.tradeshield.PerpetualPosition position = 6;
   */
  position = PerpetualPosition.UNSPECIFIED;

  /**
   * @generated from field: string leverage = 7;
   */
  leverage = "";

  /**
   * @generated from field: string take_profit_price = 8;
   */
  takeProfitPrice = "";

  /**
   * @generated from field: string stop_loss_price = 9;
   */
  stopLossPrice = "";

  constructor(data?: PartialMessage<MsgCreatePendingPerpetualOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgCreatePendingPerpetualOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_type", kind: "enum", T: proto3.getEnumType(PerpetualOrderType) },
    { no: 2, name: "trigger_price", kind: "message", T: OrderPrice },
    { no: 3, name: "collateral", kind: "message", T: Coin },
    { no: 4, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "trading_asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "position", kind: "enum", T: proto3.getEnumType(PerpetualPosition) },
    { no: 7, name: "leverage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "take_profit_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "stop_loss_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreatePendingPerpetualOrder {
    return new MsgCreatePendingPerpetualOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreatePendingPerpetualOrder {
    return new MsgCreatePendingPerpetualOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreatePendingPerpetualOrder {
    return new MsgCreatePendingPerpetualOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreatePendingPerpetualOrder | PlainMessage<MsgCreatePendingPerpetualOrder> | undefined, b: MsgCreatePendingPerpetualOrder | PlainMessage<MsgCreatePendingPerpetualOrder> | undefined): boolean {
    return proto3.util.equals(MsgCreatePendingPerpetualOrder, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgCreatePendingPerpetualOrderResponse
 */
export class MsgCreatePendingPerpetualOrderResponse extends Message<MsgCreatePendingPerpetualOrderResponse> {
  /**
   * @generated from field: uint64 order_id = 1;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCreatePendingPerpetualOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgCreatePendingPerpetualOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreatePendingPerpetualOrderResponse {
    return new MsgCreatePendingPerpetualOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreatePendingPerpetualOrderResponse {
    return new MsgCreatePendingPerpetualOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreatePendingPerpetualOrderResponse {
    return new MsgCreatePendingPerpetualOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreatePendingPerpetualOrderResponse | PlainMessage<MsgCreatePendingPerpetualOrderResponse> | undefined, b: MsgCreatePendingPerpetualOrderResponse | PlainMessage<MsgCreatePendingPerpetualOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreatePendingPerpetualOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgUpdatePendingPerpetualOrder
 */
export class MsgUpdatePendingPerpetualOrder extends Message<MsgUpdatePendingPerpetualOrder> {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress = "";

  /**
   * @generated from field: uint64 order_id = 2;
   */
  orderId = protoInt64.zero;

  /**
   * @generated from field: elys.tradeshield.OrderPrice order_price = 3;
   */
  orderPrice?: OrderPrice;

  constructor(data?: PartialMessage<MsgUpdatePendingPerpetualOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgUpdatePendingPerpetualOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "order_price", kind: "message", T: OrderPrice },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePendingPerpetualOrder {
    return new MsgUpdatePendingPerpetualOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePendingPerpetualOrder {
    return new MsgUpdatePendingPerpetualOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePendingPerpetualOrder {
    return new MsgUpdatePendingPerpetualOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePendingPerpetualOrder | PlainMessage<MsgUpdatePendingPerpetualOrder> | undefined, b: MsgUpdatePendingPerpetualOrder | PlainMessage<MsgUpdatePendingPerpetualOrder> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePendingPerpetualOrder, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgUpdatePendingPerpetualOrderResponse
 */
export class MsgUpdatePendingPerpetualOrderResponse extends Message<MsgUpdatePendingPerpetualOrderResponse> {
  constructor(data?: PartialMessage<MsgUpdatePendingPerpetualOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgUpdatePendingPerpetualOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePendingPerpetualOrderResponse {
    return new MsgUpdatePendingPerpetualOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePendingPerpetualOrderResponse {
    return new MsgUpdatePendingPerpetualOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePendingPerpetualOrderResponse {
    return new MsgUpdatePendingPerpetualOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePendingPerpetualOrderResponse | PlainMessage<MsgUpdatePendingPerpetualOrderResponse> | undefined, b: MsgUpdatePendingPerpetualOrderResponse | PlainMessage<MsgUpdatePendingPerpetualOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePendingPerpetualOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgDeletePendingPerpetualOrder
 */
export class MsgDeletePendingPerpetualOrder extends Message<MsgDeletePendingPerpetualOrder> {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress = "";

  /**
   * @generated from field: uint64 order_id = 2;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgDeletePendingPerpetualOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgDeletePendingPerpetualOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeletePendingPerpetualOrder {
    return new MsgDeletePendingPerpetualOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeletePendingPerpetualOrder {
    return new MsgDeletePendingPerpetualOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeletePendingPerpetualOrder {
    return new MsgDeletePendingPerpetualOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeletePendingPerpetualOrder | PlainMessage<MsgDeletePendingPerpetualOrder> | undefined, b: MsgDeletePendingPerpetualOrder | PlainMessage<MsgDeletePendingPerpetualOrder> | undefined): boolean {
    return proto3.util.equals(MsgDeletePendingPerpetualOrder, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgDeletePendingPerpetualOrderResponse
 */
export class MsgDeletePendingPerpetualOrderResponse extends Message<MsgDeletePendingPerpetualOrderResponse> {
  constructor(data?: PartialMessage<MsgDeletePendingPerpetualOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgDeletePendingPerpetualOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeletePendingPerpetualOrderResponse {
    return new MsgDeletePendingPerpetualOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeletePendingPerpetualOrderResponse {
    return new MsgDeletePendingPerpetualOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeletePendingPerpetualOrderResponse {
    return new MsgDeletePendingPerpetualOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeletePendingPerpetualOrderResponse | PlainMessage<MsgDeletePendingPerpetualOrderResponse> | undefined, b: MsgDeletePendingPerpetualOrderResponse | PlainMessage<MsgDeletePendingPerpetualOrderResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeletePendingPerpetualOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: elys.tradeshield.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgExecuteOrders
 */
export class MsgExecuteOrders extends Message<MsgExecuteOrders> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: repeated uint64 spot_order_ids = 2;
   */
  spotOrderIds: bigint[] = [];

  /**
   * @generated from field: repeated uint64 perpetual_order_ids = 3;
   */
  perpetualOrderIds: bigint[] = [];

  constructor(data?: PartialMessage<MsgExecuteOrders>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgExecuteOrders";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "spot_order_ids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 3, name: "perpetual_order_ids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteOrders {
    return new MsgExecuteOrders().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteOrders {
    return new MsgExecuteOrders().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteOrders {
    return new MsgExecuteOrders().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteOrders | PlainMessage<MsgExecuteOrders> | undefined, b: MsgExecuteOrders | PlainMessage<MsgExecuteOrders> | undefined): boolean {
    return proto3.util.equals(MsgExecuteOrders, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.MsgExecuteOrdersResponse
 */
export class MsgExecuteOrdersResponse extends Message<MsgExecuteOrdersResponse> {
  constructor(data?: PartialMessage<MsgExecuteOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.MsgExecuteOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteOrdersResponse {
    return new MsgExecuteOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteOrdersResponse {
    return new MsgExecuteOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteOrdersResponse {
    return new MsgExecuteOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteOrdersResponse | PlainMessage<MsgExecuteOrdersResponse> | undefined, b: MsgExecuteOrdersResponse | PlainMessage<MsgExecuteOrdersResponse> | undefined): boolean {
    return proto3.util.equals(MsgExecuteOrdersResponse, a, b);
  }
}

