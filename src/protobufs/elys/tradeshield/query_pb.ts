// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/tradeshield/query.proto (package elys.tradeshield, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { PerpetualOrderExtraInfo, SpotOrder, Status } from "./types_pb.js";
import { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message elys.tradeshield.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message elys.tradeshield.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: elys.tradeshield.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryGetPendingSpotOrderRequest
 */
export class QueryGetPendingSpotOrderRequest extends Message<QueryGetPendingSpotOrderRequest> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetPendingSpotOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryGetPendingSpotOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPendingSpotOrderRequest {
    return new QueryGetPendingSpotOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPendingSpotOrderRequest {
    return new QueryGetPendingSpotOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPendingSpotOrderRequest {
    return new QueryGetPendingSpotOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPendingSpotOrderRequest | PlainMessage<QueryGetPendingSpotOrderRequest> | undefined, b: QueryGetPendingSpotOrderRequest | PlainMessage<QueryGetPendingSpotOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPendingSpotOrderRequest, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryGetPendingSpotOrderResponse
 */
export class QueryGetPendingSpotOrderResponse extends Message<QueryGetPendingSpotOrderResponse> {
  /**
   * @generated from field: elys.tradeshield.SpotOrder pending_spot_order = 1;
   */
  pendingSpotOrder?: SpotOrder;

  constructor(data?: PartialMessage<QueryGetPendingSpotOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryGetPendingSpotOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_spot_order", kind: "message", T: SpotOrder },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPendingSpotOrderResponse {
    return new QueryGetPendingSpotOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPendingSpotOrderResponse {
    return new QueryGetPendingSpotOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPendingSpotOrderResponse {
    return new QueryGetPendingSpotOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPendingSpotOrderResponse | PlainMessage<QueryGetPendingSpotOrderResponse> | undefined, b: QueryGetPendingSpotOrderResponse | PlainMessage<QueryGetPendingSpotOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPendingSpotOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryAllPendingSpotOrderRequest
 */
export class QueryAllPendingSpotOrderRequest extends Message<QueryAllPendingSpotOrderRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPendingSpotOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryAllPendingSpotOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPendingSpotOrderRequest {
    return new QueryAllPendingSpotOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPendingSpotOrderRequest {
    return new QueryAllPendingSpotOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPendingSpotOrderRequest {
    return new QueryAllPendingSpotOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPendingSpotOrderRequest | PlainMessage<QueryAllPendingSpotOrderRequest> | undefined, b: QueryAllPendingSpotOrderRequest | PlainMessage<QueryAllPendingSpotOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPendingSpotOrderRequest, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryAllPendingSpotOrderResponse
 */
export class QueryAllPendingSpotOrderResponse extends Message<QueryAllPendingSpotOrderResponse> {
  /**
   * @generated from field: repeated elys.tradeshield.SpotOrder pending_spot_order = 1;
   */
  pendingSpotOrder: SpotOrder[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPendingSpotOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryAllPendingSpotOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_spot_order", kind: "message", T: SpotOrder, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPendingSpotOrderResponse {
    return new QueryAllPendingSpotOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPendingSpotOrderResponse {
    return new QueryAllPendingSpotOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPendingSpotOrderResponse {
    return new QueryAllPendingSpotOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPendingSpotOrderResponse | PlainMessage<QueryAllPendingSpotOrderResponse> | undefined, b: QueryAllPendingSpotOrderResponse | PlainMessage<QueryAllPendingSpotOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPendingSpotOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryGetPendingPerpetualOrderRequest
 */
export class QueryGetPendingPerpetualOrderRequest extends Message<QueryGetPendingPerpetualOrderRequest> {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: uint64 order_id = 3;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetPendingPerpetualOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryGetPendingPerpetualOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "order_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPendingPerpetualOrderRequest {
    return new QueryGetPendingPerpetualOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPendingPerpetualOrderRequest {
    return new QueryGetPendingPerpetualOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPendingPerpetualOrderRequest {
    return new QueryGetPendingPerpetualOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPendingPerpetualOrderRequest | PlainMessage<QueryGetPendingPerpetualOrderRequest> | undefined, b: QueryGetPendingPerpetualOrderRequest | PlainMessage<QueryGetPendingPerpetualOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPendingPerpetualOrderRequest, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryGetPendingPerpetualOrderResponse
 */
export class QueryGetPendingPerpetualOrderResponse extends Message<QueryGetPendingPerpetualOrderResponse> {
  /**
   * @generated from field: elys.tradeshield.PerpetualOrderExtraInfo pending_perpetual_order = 1;
   */
  pendingPerpetualOrder?: PerpetualOrderExtraInfo;

  constructor(data?: PartialMessage<QueryGetPendingPerpetualOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryGetPendingPerpetualOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_perpetual_order", kind: "message", T: PerpetualOrderExtraInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPendingPerpetualOrderResponse {
    return new QueryGetPendingPerpetualOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPendingPerpetualOrderResponse {
    return new QueryGetPendingPerpetualOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPendingPerpetualOrderResponse {
    return new QueryGetPendingPerpetualOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPendingPerpetualOrderResponse | PlainMessage<QueryGetPendingPerpetualOrderResponse> | undefined, b: QueryGetPendingPerpetualOrderResponse | PlainMessage<QueryGetPendingPerpetualOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPendingPerpetualOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryAllPendingPerpetualOrderRequest
 */
export class QueryAllPendingPerpetualOrderRequest extends Message<QueryAllPendingPerpetualOrderRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPendingPerpetualOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryAllPendingPerpetualOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPendingPerpetualOrderRequest {
    return new QueryAllPendingPerpetualOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPendingPerpetualOrderRequest {
    return new QueryAllPendingPerpetualOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPendingPerpetualOrderRequest {
    return new QueryAllPendingPerpetualOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPendingPerpetualOrderRequest | PlainMessage<QueryAllPendingPerpetualOrderRequest> | undefined, b: QueryAllPendingPerpetualOrderRequest | PlainMessage<QueryAllPendingPerpetualOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPendingPerpetualOrderRequest, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryAllPendingPerpetualOrderResponse
 */
export class QueryAllPendingPerpetualOrderResponse extends Message<QueryAllPendingPerpetualOrderResponse> {
  /**
   * @generated from field: repeated elys.tradeshield.PerpetualOrderExtraInfo pending_perpetual_order = 1;
   */
  pendingPerpetualOrder: PerpetualOrderExtraInfo[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPendingPerpetualOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryAllPendingPerpetualOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_perpetual_order", kind: "message", T: PerpetualOrderExtraInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPendingPerpetualOrderResponse {
    return new QueryAllPendingPerpetualOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPendingPerpetualOrderResponse {
    return new QueryAllPendingPerpetualOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPendingPerpetualOrderResponse {
    return new QueryAllPendingPerpetualOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPendingPerpetualOrderResponse | PlainMessage<QueryAllPendingPerpetualOrderResponse> | undefined, b: QueryAllPendingPerpetualOrderResponse | PlainMessage<QueryAllPendingPerpetualOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPendingPerpetualOrderResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryPendingPerpetualOrderForAddressRequest
 */
export class QueryPendingPerpetualOrderForAddressRequest extends Message<QueryPendingPerpetualOrderForAddressRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: elys.tradeshield.Status status = 2;
   */
  status = Status.PENDING;

  constructor(data?: PartialMessage<QueryPendingPerpetualOrderForAddressRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryPendingPerpetualOrderForAddressRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPendingPerpetualOrderForAddressRequest {
    return new QueryPendingPerpetualOrderForAddressRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPendingPerpetualOrderForAddressRequest {
    return new QueryPendingPerpetualOrderForAddressRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPendingPerpetualOrderForAddressRequest {
    return new QueryPendingPerpetualOrderForAddressRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPendingPerpetualOrderForAddressRequest | PlainMessage<QueryPendingPerpetualOrderForAddressRequest> | undefined, b: QueryPendingPerpetualOrderForAddressRequest | PlainMessage<QueryPendingPerpetualOrderForAddressRequest> | undefined): boolean {
    return proto3.util.equals(QueryPendingPerpetualOrderForAddressRequest, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryPendingPerpetualOrderForAddressResponse
 */
export class QueryPendingPerpetualOrderForAddressResponse extends Message<QueryPendingPerpetualOrderForAddressResponse> {
  /**
   * @generated from field: repeated elys.tradeshield.PerpetualOrderExtraInfo pending_perpetual_orders = 1;
   */
  pendingPerpetualOrders: PerpetualOrderExtraInfo[] = [];

  constructor(data?: PartialMessage<QueryPendingPerpetualOrderForAddressResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryPendingPerpetualOrderForAddressResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_perpetual_orders", kind: "message", T: PerpetualOrderExtraInfo, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPendingPerpetualOrderForAddressResponse {
    return new QueryPendingPerpetualOrderForAddressResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPendingPerpetualOrderForAddressResponse {
    return new QueryPendingPerpetualOrderForAddressResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPendingPerpetualOrderForAddressResponse {
    return new QueryPendingPerpetualOrderForAddressResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPendingPerpetualOrderForAddressResponse | PlainMessage<QueryPendingPerpetualOrderForAddressResponse> | undefined, b: QueryPendingPerpetualOrderForAddressResponse | PlainMessage<QueryPendingPerpetualOrderForAddressResponse> | undefined): boolean {
    return proto3.util.equals(QueryPendingPerpetualOrderForAddressResponse, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryPendingSpotOrderForAddressRequest
 */
export class QueryPendingSpotOrderForAddressRequest extends Message<QueryPendingSpotOrderForAddressRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: elys.tradeshield.Status status = 2;
   */
  status = Status.PENDING;

  constructor(data?: PartialMessage<QueryPendingSpotOrderForAddressRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryPendingSpotOrderForAddressRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPendingSpotOrderForAddressRequest {
    return new QueryPendingSpotOrderForAddressRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPendingSpotOrderForAddressRequest {
    return new QueryPendingSpotOrderForAddressRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPendingSpotOrderForAddressRequest {
    return new QueryPendingSpotOrderForAddressRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPendingSpotOrderForAddressRequest | PlainMessage<QueryPendingSpotOrderForAddressRequest> | undefined, b: QueryPendingSpotOrderForAddressRequest | PlainMessage<QueryPendingSpotOrderForAddressRequest> | undefined): boolean {
    return proto3.util.equals(QueryPendingSpotOrderForAddressRequest, a, b);
  }
}

/**
 * @generated from message elys.tradeshield.QueryPendingSpotOrderForAddressResponse
 */
export class QueryPendingSpotOrderForAddressResponse extends Message<QueryPendingSpotOrderForAddressResponse> {
  /**
   * @generated from field: repeated elys.tradeshield.SpotOrder pending_spot_orders = 1;
   */
  pendingSpotOrders: SpotOrder[] = [];

  constructor(data?: PartialMessage<QueryPendingSpotOrderForAddressResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tradeshield.QueryPendingSpotOrderForAddressResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pending_spot_orders", kind: "message", T: SpotOrder, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPendingSpotOrderForAddressResponse {
    return new QueryPendingSpotOrderForAddressResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPendingSpotOrderForAddressResponse {
    return new QueryPendingSpotOrderForAddressResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPendingSpotOrderForAddressResponse {
    return new QueryPendingSpotOrderForAddressResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPendingSpotOrderForAddressResponse | PlainMessage<QueryPendingSpotOrderForAddressResponse> | undefined, b: QueryPendingSpotOrderForAddressResponse | PlainMessage<QueryPendingSpotOrderForAddressResponse> | undefined): boolean {
    return proto3.util.equals(QueryPendingSpotOrderForAddressResponse, a, b);
  }
}

