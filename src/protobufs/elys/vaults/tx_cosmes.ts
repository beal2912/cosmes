// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file elys/vaults/tx.proto (package elys.vaults, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAddVault, MsgAddVaultResponse, MsgClaimRewards, MsgClaimRewardsResponse, MsgDeposit, MsgDepositResponse, MsgPerformActionExitPool, MsgPerformActionExitPoolResponse, MsgPerformActionJoinPool, MsgPerformActionJoinPoolResponse, MsgPerformActionSwapByDenom, MsgPerformActionSwapByDenomResponse, MsgUpdateParams, MsgUpdateParamsResponse, MsgUpdateVaultAllowedActions, MsgUpdateVaultAllowedActionsResponse, MsgUpdateVaultCoins, MsgUpdateVaultCoinsResponse, MsgUpdateVaultFees, MsgUpdateVaultFeesResponse, MsgUpdateVaultLockupPeriod, MsgUpdateVaultLockupPeriodResponse, MsgUpdateVaultMaxAmountUsd, MsgUpdateVaultMaxAmountUsdResponse, MsgWithdraw, MsgWithdrawResponse } from "./tx_pb.js";

const TYPE_NAME = "elys.vaults.Msg";

/**
 * UpdateParams defines a (governance) operation for updating the module
 * parameters. The authority defaults to the x/gov module account.
 *
 * @generated from rpc elys.vaults.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

/**
 * Deposit defines a method for depositing tokens into a vault.
 *
 * @generated from rpc elys.vaults.Msg.Deposit
 */
export const MsgDepositService = {
  typeName: TYPE_NAME,
  method: "Deposit",
  Request: MsgDeposit,
  Response: MsgDepositResponse,
} as const;

/**
 * Withdraw defines a method for withdrawing tokens from a vault.
 *
 * @generated from rpc elys.vaults.Msg.Withdraw
 */
export const MsgWithdrawService = {
  typeName: TYPE_NAME,
  method: "Withdraw",
  Request: MsgWithdraw,
  Response: MsgWithdrawResponse,
} as const;

/**
 * AddVault defines a method for creating a new vault.
 *
 * @generated from rpc elys.vaults.Msg.AddVault
 */
export const MsgAddVaultService = {
  typeName: TYPE_NAME,
  method: "AddVault",
  Request: MsgAddVault,
  Response: MsgAddVaultResponse,
} as const;

/**
 * PerformAction defines a method for performing an action on a vault.
 * rpc PerformAction(MsgPerformAction) returns (MsgPerformActionResponse);
 *
 * @generated from rpc elys.vaults.Msg.PerformActionJoinPool
 */
export const MsgPerformActionJoinPoolService = {
  typeName: TYPE_NAME,
  method: "PerformActionJoinPool",
  Request: MsgPerformActionJoinPool,
  Response: MsgPerformActionJoinPoolResponse,
} as const;

/**
 * @generated from rpc elys.vaults.Msg.PerformActionExitPool
 */
export const MsgPerformActionExitPoolService = {
  typeName: TYPE_NAME,
  method: "PerformActionExitPool",
  Request: MsgPerformActionExitPool,
  Response: MsgPerformActionExitPoolResponse,
} as const;

/**
 * @generated from rpc elys.vaults.Msg.PerformActionSwapByDenom
 */
export const MsgPerformActionSwapByDenomService = {
  typeName: TYPE_NAME,
  method: "PerformActionSwapByDenom",
  Request: MsgPerformActionSwapByDenom,
  Response: MsgPerformActionSwapByDenomResponse,
} as const;

/**
 * UpdateVaultCoins defines a method for updating the coins of a vault.
 *
 * @generated from rpc elys.vaults.Msg.UpdateVaultCoins
 */
export const MsgUpdateVaultCoinsService = {
  typeName: TYPE_NAME,
  method: "UpdateVaultCoins",
  Request: MsgUpdateVaultCoins,
  Response: MsgUpdateVaultCoinsResponse,
} as const;

/**
 * UpdateVaultFees defines a method for updating the fees of a vault.
 *
 * @generated from rpc elys.vaults.Msg.UpdateVaultFees
 */
export const MsgUpdateVaultFeesService = {
  typeName: TYPE_NAME,
  method: "UpdateVaultFees",
  Request: MsgUpdateVaultFees,
  Response: MsgUpdateVaultFeesResponse,
} as const;

/**
 * UpdateVaultLockupPeriod defines a method for updating the lockup period of
 * a vault.
 *
 * @generated from rpc elys.vaults.Msg.UpdateVaultLockupPeriod
 */
export const MsgUpdateVaultLockupPeriodService = {
  typeName: TYPE_NAME,
  method: "UpdateVaultLockupPeriod",
  Request: MsgUpdateVaultLockupPeriod,
  Response: MsgUpdateVaultLockupPeriodResponse,
} as const;

/**
 * UpdateVaultMaxAmountUsd defines a method for updating the max amount of a
 * vault.
 *
 * @generated from rpc elys.vaults.Msg.UpdateVaultMaxAmountUsd
 */
export const MsgUpdateVaultMaxAmountUsdService = {
  typeName: TYPE_NAME,
  method: "UpdateVaultMaxAmountUsd",
  Request: MsgUpdateVaultMaxAmountUsd,
  Response: MsgUpdateVaultMaxAmountUsdResponse,
} as const;

/**
 * ClaimRewards defines a method for claiming rewards from a vault.
 *
 * @generated from rpc elys.vaults.Msg.ClaimRewards
 */
export const MsgClaimRewardsService = {
  typeName: TYPE_NAME,
  method: "ClaimRewards",
  Request: MsgClaimRewards,
  Response: MsgClaimRewardsResponse,
} as const;

/**
 * UpdateVaultAllowedActions defines a method for updating the allowed actions
 * of a vault.
 *
 * @generated from rpc elys.vaults.Msg.UpdateVaultAllowedActions
 */
export const MsgUpdateVaultAllowedActionsService = {
  typeName: TYPE_NAME,
  method: "UpdateVaultAllowedActions",
  Request: MsgUpdateVaultAllowedActions,
  Response: MsgUpdateVaultAllowedActionsResponse,
} as const;

