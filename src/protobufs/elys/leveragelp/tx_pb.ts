// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/leveragelp/tx.proto (package elys.leveragelp, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { PositionRequest } from "./types_pb.js";

/**
 * @generated from message elys.leveragelp.MsgOpen
 */
export class MsgOpen extends Message<MsgOpen> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: string collateral_asset = 2;
   */
  collateralAsset = "";

  /**
   * @generated from field: string collateral_amount = 3;
   */
  collateralAmount = "";

  /**
   * @generated from field: uint64 amm_pool_id = 4;
   */
  ammPoolId = protoInt64.zero;

  /**
   * @generated from field: string leverage = 5;
   */
  leverage = "";

  /**
   * @generated from field: string stop_loss_price = 6;
   */
  stopLossPrice = "";

  constructor(data?: PartialMessage<MsgOpen>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgOpen";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "collateral_asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "collateral_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "amm_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "leverage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "stop_loss_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgOpen {
    return new MsgOpen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgOpen {
    return new MsgOpen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgOpen {
    return new MsgOpen().fromJsonString(jsonString, options);
  }

  static equals(a: MsgOpen | PlainMessage<MsgOpen> | undefined, b: MsgOpen | PlainMessage<MsgOpen> | undefined): boolean {
    return proto3.util.equals(MsgOpen, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgOpenResponse
 */
export class MsgOpenResponse extends Message<MsgOpenResponse> {
  constructor(data?: PartialMessage<MsgOpenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgOpenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgOpenResponse {
    return new MsgOpenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgOpenResponse {
    return new MsgOpenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgOpenResponse {
    return new MsgOpenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgOpenResponse | PlainMessage<MsgOpenResponse> | undefined, b: MsgOpenResponse | PlainMessage<MsgOpenResponse> | undefined): boolean {
    return proto3.util.equals(MsgOpenResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClose
 */
export class MsgClose extends Message<MsgClose> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string lp_amount = 3;
   */
  lpAmount = "";

  /**
   * @generated from field: uint64 pool_id = 4;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgClose>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClose";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "lp_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClose {
    return new MsgClose().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClose {
    return new MsgClose().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClose {
    return new MsgClose().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClose | PlainMessage<MsgClose> | undefined, b: MsgClose | PlainMessage<MsgClose> | undefined): boolean {
    return proto3.util.equals(MsgClose, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgCloseResponse
 */
export class MsgCloseResponse extends Message<MsgCloseResponse> {
  constructor(data?: PartialMessage<MsgCloseResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgCloseResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCloseResponse {
    return new MsgCloseResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCloseResponse {
    return new MsgCloseResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCloseResponse {
    return new MsgCloseResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCloseResponse | PlainMessage<MsgCloseResponse> | undefined, b: MsgCloseResponse | PlainMessage<MsgCloseResponse> | undefined): boolean {
    return proto3.util.equals(MsgCloseResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClaimRewards
 */
export class MsgClaimRewards extends Message<MsgClaimRewards> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * not used anymore
   *
   * @generated from field: repeated uint64 ids = 2;
   */
  ids: bigint[] = [];

  /**
   * @generated from field: uint64 pool_id = 3;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: uint64 position_id = 4;
   */
  positionId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgClaimRewards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClaimRewards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "ids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 3, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "position_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimRewards {
    return new MsgClaimRewards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimRewards {
    return new MsgClaimRewards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimRewards {
    return new MsgClaimRewards().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimRewards | PlainMessage<MsgClaimRewards> | undefined, b: MsgClaimRewards | PlainMessage<MsgClaimRewards> | undefined): boolean {
    return proto3.util.equals(MsgClaimRewards, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClaimRewardsResponse
 */
export class MsgClaimRewardsResponse extends Message<MsgClaimRewardsResponse> {
  constructor(data?: PartialMessage<MsgClaimRewardsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClaimRewardsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimRewardsResponse {
    return new MsgClaimRewardsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimRewardsResponse {
    return new MsgClaimRewardsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimRewardsResponse {
    return new MsgClaimRewardsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimRewardsResponse | PlainMessage<MsgClaimRewardsResponse> | undefined, b: MsgClaimRewardsResponse | PlainMessage<MsgClaimRewardsResponse> | undefined): boolean {
    return proto3.util.equals(MsgClaimRewardsResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: elys.leveragelp.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgWhitelist
 */
export class MsgWhitelist extends Message<MsgWhitelist> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string whitelisted_address = 2;
   */
  whitelistedAddress = "";

  constructor(data?: PartialMessage<MsgWhitelist>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgWhitelist";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "whitelisted_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgWhitelist {
    return new MsgWhitelist().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgWhitelist {
    return new MsgWhitelist().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgWhitelist {
    return new MsgWhitelist().fromJsonString(jsonString, options);
  }

  static equals(a: MsgWhitelist | PlainMessage<MsgWhitelist> | undefined, b: MsgWhitelist | PlainMessage<MsgWhitelist> | undefined): boolean {
    return proto3.util.equals(MsgWhitelist, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgWhitelistResponse
 */
export class MsgWhitelistResponse extends Message<MsgWhitelistResponse> {
  constructor(data?: PartialMessage<MsgWhitelistResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgWhitelistResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgWhitelistResponse {
    return new MsgWhitelistResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgWhitelistResponse {
    return new MsgWhitelistResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgWhitelistResponse {
    return new MsgWhitelistResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgWhitelistResponse | PlainMessage<MsgWhitelistResponse> | undefined, b: MsgWhitelistResponse | PlainMessage<MsgWhitelistResponse> | undefined): boolean {
    return proto3.util.equals(MsgWhitelistResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgDewhitelist
 */
export class MsgDewhitelist extends Message<MsgDewhitelist> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string whitelisted_address = 2;
   */
  whitelistedAddress = "";

  constructor(data?: PartialMessage<MsgDewhitelist>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgDewhitelist";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "whitelisted_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDewhitelist {
    return new MsgDewhitelist().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDewhitelist {
    return new MsgDewhitelist().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDewhitelist {
    return new MsgDewhitelist().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDewhitelist | PlainMessage<MsgDewhitelist> | undefined, b: MsgDewhitelist | PlainMessage<MsgDewhitelist> | undefined): boolean {
    return proto3.util.equals(MsgDewhitelist, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgDewhitelistResponse
 */
export class MsgDewhitelistResponse extends Message<MsgDewhitelistResponse> {
  constructor(data?: PartialMessage<MsgDewhitelistResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgDewhitelistResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDewhitelistResponse {
    return new MsgDewhitelistResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDewhitelistResponse {
    return new MsgDewhitelistResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDewhitelistResponse {
    return new MsgDewhitelistResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDewhitelistResponse | PlainMessage<MsgDewhitelistResponse> | undefined, b: MsgDewhitelistResponse | PlainMessage<MsgDewhitelistResponse> | undefined): boolean {
    return proto3.util.equals(MsgDewhitelistResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdateStopLoss
 */
export class MsgUpdateStopLoss extends Message<MsgUpdateStopLoss> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: uint64 position = 2;
   */
  position = protoInt64.zero;

  /**
   * @generated from field: string price = 3;
   */
  price = "";

  /**
   * @generated from field: uint64 pool_id = 4;
   */
  poolId = protoInt64.zero;

  constructor(data?: PartialMessage<MsgUpdateStopLoss>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdateStopLoss";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "position", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateStopLoss {
    return new MsgUpdateStopLoss().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateStopLoss {
    return new MsgUpdateStopLoss().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateStopLoss {
    return new MsgUpdateStopLoss().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateStopLoss | PlainMessage<MsgUpdateStopLoss> | undefined, b: MsgUpdateStopLoss | PlainMessage<MsgUpdateStopLoss> | undefined): boolean {
    return proto3.util.equals(MsgUpdateStopLoss, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdateStopLossResponse
 */
export class MsgUpdateStopLossResponse extends Message<MsgUpdateStopLossResponse> {
  constructor(data?: PartialMessage<MsgUpdateStopLossResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdateStopLossResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateStopLossResponse {
    return new MsgUpdateStopLossResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateStopLossResponse {
    return new MsgUpdateStopLossResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateStopLossResponse {
    return new MsgUpdateStopLossResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateStopLossResponse | PlainMessage<MsgUpdateStopLossResponse> | undefined, b: MsgUpdateStopLossResponse | PlainMessage<MsgUpdateStopLossResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateStopLossResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.AddPool
 */
export class AddPool extends Message<AddPool> {
  /**
   * @generated from field: uint64 amm_pool_id = 1;
   */
  ammPoolId = protoInt64.zero;

  /**
   * @generated from field: string pool_max_leverage_ratio = 2;
   */
  poolMaxLeverageRatio = "";

  /**
   * @generated from field: string leverage_max = 3;
   */
  leverageMax = "";

  /**
   * @generated from field: string adl_trigger_ratio = 4;
   */
  adlTriggerRatio = "";

  constructor(data?: PartialMessage<AddPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.AddPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "amm_pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pool_max_leverage_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "leverage_max", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "adl_trigger_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPool {
    return new AddPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPool {
    return new AddPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPool {
    return new AddPool().fromJsonString(jsonString, options);
  }

  static equals(a: AddPool | PlainMessage<AddPool> | undefined, b: AddPool | PlainMessage<AddPool> | undefined): boolean {
    return proto3.util.equals(AddPool, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgAddPool
 */
export class MsgAddPool extends Message<MsgAddPool> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: elys.leveragelp.AddPool pool = 2;
   */
  pool?: AddPool;

  constructor(data?: PartialMessage<MsgAddPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgAddPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool", kind: "message", T: AddPool },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddPool {
    return new MsgAddPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddPool {
    return new MsgAddPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddPool {
    return new MsgAddPool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddPool | PlainMessage<MsgAddPool> | undefined, b: MsgAddPool | PlainMessage<MsgAddPool> | undefined): boolean {
    return proto3.util.equals(MsgAddPool, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgAddPoolResponse
 */
export class MsgAddPoolResponse extends Message<MsgAddPoolResponse> {
  constructor(data?: PartialMessage<MsgAddPoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgAddPoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddPoolResponse {
    return new MsgAddPoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddPoolResponse {
    return new MsgAddPoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddPoolResponse {
    return new MsgAddPoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddPoolResponse | PlainMessage<MsgAddPoolResponse> | undefined, b: MsgAddPoolResponse | PlainMessage<MsgAddPoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddPoolResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgRemovePool
 */
export class MsgRemovePool extends Message<MsgRemovePool> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  constructor(data?: PartialMessage<MsgRemovePool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgRemovePool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemovePool {
    return new MsgRemovePool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemovePool {
    return new MsgRemovePool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemovePool {
    return new MsgRemovePool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemovePool | PlainMessage<MsgRemovePool> | undefined, b: MsgRemovePool | PlainMessage<MsgRemovePool> | undefined): boolean {
    return proto3.util.equals(MsgRemovePool, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgRemovePoolResponse
 */
export class MsgRemovePoolResponse extends Message<MsgRemovePoolResponse> {
  constructor(data?: PartialMessage<MsgRemovePoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgRemovePoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemovePoolResponse {
    return new MsgRemovePoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemovePoolResponse {
    return new MsgRemovePoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemovePoolResponse {
    return new MsgRemovePoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemovePoolResponse | PlainMessage<MsgRemovePoolResponse> | undefined, b: MsgRemovePoolResponse | PlainMessage<MsgRemovePoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemovePoolResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClosePositions
 */
export class MsgClosePositions extends Message<MsgClosePositions> {
  /**
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * @generated from field: repeated elys.leveragelp.PositionRequest liquidate = 2;
   */
  liquidate: PositionRequest[] = [];

  /**
   * @generated from field: repeated elys.leveragelp.PositionRequest stop_loss = 3;
   */
  stopLoss: PositionRequest[] = [];

  constructor(data?: PartialMessage<MsgClosePositions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClosePositions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "liquidate", kind: "message", T: PositionRequest, repeated: true },
    { no: 3, name: "stop_loss", kind: "message", T: PositionRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClosePositions {
    return new MsgClosePositions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClosePositions {
    return new MsgClosePositions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClosePositions {
    return new MsgClosePositions().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClosePositions | PlainMessage<MsgClosePositions> | undefined, b: MsgClosePositions | PlainMessage<MsgClosePositions> | undefined): boolean {
    return proto3.util.equals(MsgClosePositions, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClosePositionsResponse
 */
export class MsgClosePositionsResponse extends Message<MsgClosePositionsResponse> {
  constructor(data?: PartialMessage<MsgClosePositionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClosePositionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClosePositionsResponse {
    return new MsgClosePositionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClosePositionsResponse {
    return new MsgClosePositionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClosePositionsResponse {
    return new MsgClosePositionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClosePositionsResponse | PlainMessage<MsgClosePositionsResponse> | undefined, b: MsgClosePositionsResponse | PlainMessage<MsgClosePositionsResponse> | undefined): boolean {
    return proto3.util.equals(MsgClosePositionsResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdatePool
 */
export class MsgUpdatePool extends Message<MsgUpdatePool> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string leverage_max = 3;
   */
  leverageMax = "";

  /**
   * @generated from field: string max_leveragelp_ratio = 4;
   */
  maxLeveragelpRatio = "";

  constructor(data?: PartialMessage<MsgUpdatePool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdatePool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "leverage_max", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "max_leveragelp_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePool {
    return new MsgUpdatePool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePool {
    return new MsgUpdatePool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePool {
    return new MsgUpdatePool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePool | PlainMessage<MsgUpdatePool> | undefined, b: MsgUpdatePool | PlainMessage<MsgUpdatePool> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePool, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdatePoolResponse
 */
export class MsgUpdatePoolResponse extends Message<MsgUpdatePoolResponse> {
  constructor(data?: PartialMessage<MsgUpdatePoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdatePoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdatePoolResponse {
    return new MsgUpdatePoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdatePoolResponse {
    return new MsgUpdatePoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdatePoolResponse {
    return new MsgUpdatePoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdatePoolResponse | PlainMessage<MsgUpdatePoolResponse> | undefined, b: MsgUpdatePoolResponse | PlainMessage<MsgUpdatePoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdatePoolResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdateEnabledPools
 */
export class MsgUpdateEnabledPools extends Message<MsgUpdateEnabledPools> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: repeated uint64 enabled_pools = 2;
   */
  enabledPools: bigint[] = [];

  /**
   * @generated from field: repeated uint64 add_pools = 3;
   */
  addPools: bigint[] = [];

  /**
   * @generated from field: repeated uint64 remove_pools = 4;
   */
  removePools: bigint[] = [];

  constructor(data?: PartialMessage<MsgUpdateEnabledPools>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdateEnabledPools";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "enabled_pools", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 3, name: "add_pools", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 4, name: "remove_pools", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateEnabledPools {
    return new MsgUpdateEnabledPools().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateEnabledPools {
    return new MsgUpdateEnabledPools().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateEnabledPools {
    return new MsgUpdateEnabledPools().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateEnabledPools | PlainMessage<MsgUpdateEnabledPools> | undefined, b: MsgUpdateEnabledPools | PlainMessage<MsgUpdateEnabledPools> | undefined): boolean {
    return proto3.util.equals(MsgUpdateEnabledPools, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgUpdateEnabledPoolsResponse
 */
export class MsgUpdateEnabledPoolsResponse extends Message<MsgUpdateEnabledPoolsResponse> {
  constructor(data?: PartialMessage<MsgUpdateEnabledPoolsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgUpdateEnabledPoolsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateEnabledPoolsResponse {
    return new MsgUpdateEnabledPoolsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateEnabledPoolsResponse {
    return new MsgUpdateEnabledPoolsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateEnabledPoolsResponse {
    return new MsgUpdateEnabledPoolsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateEnabledPoolsResponse | PlainMessage<MsgUpdateEnabledPoolsResponse> | undefined, b: MsgUpdateEnabledPoolsResponse | PlainMessage<MsgUpdateEnabledPoolsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateEnabledPoolsResponse, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClaimAllUserRewards
 */
export class MsgClaimAllUserRewards extends Message<MsgClaimAllUserRewards> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  constructor(data?: PartialMessage<MsgClaimAllUserRewards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClaimAllUserRewards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimAllUserRewards {
    return new MsgClaimAllUserRewards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimAllUserRewards {
    return new MsgClaimAllUserRewards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimAllUserRewards {
    return new MsgClaimAllUserRewards().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimAllUserRewards | PlainMessage<MsgClaimAllUserRewards> | undefined, b: MsgClaimAllUserRewards | PlainMessage<MsgClaimAllUserRewards> | undefined): boolean {
    return proto3.util.equals(MsgClaimAllUserRewards, a, b);
  }
}

/**
 * @generated from message elys.leveragelp.MsgClaimAllUserRewardsResponse
 */
export class MsgClaimAllUserRewardsResponse extends Message<MsgClaimAllUserRewardsResponse> {
  constructor(data?: PartialMessage<MsgClaimAllUserRewardsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.leveragelp.MsgClaimAllUserRewardsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimAllUserRewardsResponse {
    return new MsgClaimAllUserRewardsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimAllUserRewardsResponse {
    return new MsgClaimAllUserRewardsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimAllUserRewardsResponse {
    return new MsgClaimAllUserRewardsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimAllUserRewardsResponse | PlainMessage<MsgClaimAllUserRewardsResponse> | undefined, b: MsgClaimAllUserRewardsResponse | PlainMessage<MsgClaimAllUserRewardsResponse> | undefined): boolean {
    return proto3.util.equals(MsgClaimAllUserRewardsResponse, a, b);
  }
}

