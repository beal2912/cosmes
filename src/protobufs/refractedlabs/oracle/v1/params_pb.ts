// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file refractedlabs/oracle/v1/params.proto (package refractedlabs.oracle.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * Params defines the parameters for the module.
 *
 * @generated from message refractedlabs.oracle.v1.Params
 */
export class Params extends Message<Params> {
  /**
   * @generated from field: int64 vote_period = 1;
   */
  votePeriod = protoInt64.zero;

  /**
   * @generated from field: string quorum = 2;
   */
  quorum = "";

  /**
   * @generated from field: string vote_threshold = 3;
   */
  voteThreshold = "";

  /**
   * @generated from field: string slash_fraction = 4;
   */
  slashFraction = "";

  /**
   * @generated from field: int64 slash_window = 5;
   */
  slashWindow = protoInt64.zero;

  /**
   * @generated from field: string max_miss_rate_per_slash_window = 6;
   */
  maxMissRatePerSlashWindow = "";

  /**
   * @generated from field: string max_miss_rate_per_vote_period = 7;
   */
  maxMissRatePerVotePeriod = "";

  /**
   * ratio in range [0, 1] which determines the amount of collected fees that is supposed to be distributed among validators as oracle reward
   *
   * @generated from field: string fee_collector_reward_ratio = 8;
   */
  feeCollectorRewardRatio = "";

  constructor(data?: PartialMessage<Params>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "refractedlabs.oracle.v1.Params";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vote_period", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "quorum", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "vote_threshold", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "slash_fraction", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "slash_window", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "max_miss_rate_per_slash_window", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "max_miss_rate_per_vote_period", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "fee_collector_reward_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params {
    return new Params().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJsonString(jsonString, options);
  }

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean {
    return proto3.util.equals(Params, a, b);
  }
}

