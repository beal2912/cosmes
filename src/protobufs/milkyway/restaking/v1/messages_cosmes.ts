// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file milkyway/restaking/v1/messages.proto (package milkyway.restaking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAddOperatorToAllowList, MsgAddOperatorToAllowListResponse, MsgBorrowPoolSecurity, MsgBorrowPoolSecurityResponse, MsgCeasePoolSecurityBorrow, MsgCeasePoolSecurityBorrowResponse, MsgDelegateOperator, MsgDelegateOperatorResponse, MsgDelegatePool, MsgDelegatePoolResponse, MsgDelegateService, MsgDelegateServiceResponse, MsgJoinService, MsgJoinServiceResponse, MsgLeaveService, MsgLeaveServiceResponse, MsgRemoveOperatorFromAllowlist, MsgRemoveOperatorFromAllowlistResponse, MsgSetUserPreferences, MsgSetUserPreferencesResponse, MsgUndelegateOperator, MsgUndelegatePool, MsgUndelegateResponse, MsgUndelegateService, MsgUpdateParams, MsgUpdateParamsResponse } from "./messages_pb.js";

const TYPE_NAME = "milkyway.restaking.v1.Msg";

/**
 * JoinService defines the operation that allows the operator admin
 * to start securing an AVS
 *
 * @generated from rpc milkyway.restaking.v1.Msg.JoinService
 */
export const MsgJoinServiceService = {
  typeName: TYPE_NAME,
  method: "JoinService",
  Request: MsgJoinService,
  Response: MsgJoinServiceResponse,
} as const;

/**
 * LeaveService defines the operation that allows the operator admin
 * to stop securing an AVS
 *
 * @generated from rpc milkyway.restaking.v1.Msg.LeaveService
 */
export const MsgLeaveServiceService = {
  typeName: TYPE_NAME,
  method: "LeaveService",
  Request: MsgLeaveService,
  Response: MsgLeaveServiceResponse,
} as const;

/**
 * AddOperatorToAllowList defines the operation that allows the service admin
 * to add an operator to the list of allowed operator to secure the service
 *
 * @generated from rpc milkyway.restaking.v1.Msg.AddOperatorToAllowList
 */
export const MsgAddOperatorToAllowListService = {
  typeName: TYPE_NAME,
  method: "AddOperatorToAllowList",
  Request: MsgAddOperatorToAllowList,
  Response: MsgAddOperatorToAllowListResponse,
} as const;

/**
 * RemoveOperatorFromAllowlist defines the operation that allows the service
 * admin to remove a previously added operator from the list of allowed
 * operators to secure the service
 *
 * @generated from rpc milkyway.restaking.v1.Msg.RemoveOperatorFromAllowlist
 */
export const MsgRemoveOperatorFromAllowlistService = {
  typeName: TYPE_NAME,
  method: "RemoveOperatorFromAllowlist",
  Request: MsgRemoveOperatorFromAllowlist,
  Response: MsgRemoveOperatorFromAllowlistResponse,
} as const;

/**
 * BorrowPoolSecurity defines the operation that allows the service admin
 * to add a pool to the list of pools from which the service has chosen
 * to borrow security.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.BorrowPoolSecurity
 */
export const MsgBorrowPoolSecurityService = {
  typeName: TYPE_NAME,
  method: "BorrowPoolSecurity",
  Request: MsgBorrowPoolSecurity,
  Response: MsgBorrowPoolSecurityResponse,
} as const;

/**
 * CeasePoolSecurityBorrow defines the operation that allows the service admin
 * to remove a pool from the list of pools from which the service has chosen
 * to borrow security.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.CeasePoolSecurityBorrow
 */
export const MsgCeasePoolSecurityBorrowService = {
  typeName: TYPE_NAME,
  method: "CeasePoolSecurityBorrow",
  Request: MsgCeasePoolSecurityBorrow,
  Response: MsgCeasePoolSecurityBorrowResponse,
} as const;

/**
 * DelegatePool defines the operation that allows users to delegate any amount
 * of an asset to a pool that can then be used to provide services with
 * cryptoeconomic security.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.DelegatePool
 */
export const MsgDelegatePoolService = {
  typeName: TYPE_NAME,
  method: "DelegatePool",
  Request: MsgDelegatePool,
  Response: MsgDelegatePoolResponse,
} as const;

/**
 * DelegateOperator defines the operation that allows users to delegate their
 * assets to a specific operator.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.DelegateOperator
 */
export const MsgDelegateOperatorService = {
  typeName: TYPE_NAME,
  method: "DelegateOperator",
  Request: MsgDelegateOperator,
  Response: MsgDelegateOperatorResponse,
} as const;

/**
 * DelegateService defines the operation that allows users to delegate their
 * assets to a specific service.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.DelegateService
 */
export const MsgDelegateServiceService = {
  typeName: TYPE_NAME,
  method: "DelegateService",
  Request: MsgDelegateService,
  Response: MsgDelegateServiceResponse,
} as const;

/**
 * UpdateParams defines a (governance) operation for updating the module
 * parameters.
 * The authority defaults to the x/gov module account.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

/**
 * UndelegatePool defines the operation that allows users to undelegate their
 * assets from a pool.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.UndelegatePool
 */
export const MsgUndelegatePoolService = {
  typeName: TYPE_NAME,
  method: "UndelegatePool",
  Request: MsgUndelegatePool,
  Response: MsgUndelegateResponse,
} as const;

/**
 * UndelegateOperator defines the operation that allows users to undelegate
 * their assets from a specific operator.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.UndelegateOperator
 */
export const MsgUndelegateOperatorService = {
  typeName: TYPE_NAME,
  method: "UndelegateOperator",
  Request: MsgUndelegateOperator,
  Response: MsgUndelegateResponse,
} as const;

/**
 * UndelegateService defines the operation that allows users to undelegate
 * their assets from a specific service.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.UndelegateService
 */
export const MsgUndelegateServiceService = {
  typeName: TYPE_NAME,
  method: "UndelegateService",
  Request: MsgUndelegateService,
  Response: MsgUndelegateResponse,
} as const;

/**
 * SetUserPreferences defines the operation that allows users to set their
 * preferences for the restaking module.
 *
 * @generated from rpc milkyway.restaking.v1.Msg.SetUserPreferences
 */
export const MsgSetUserPreferencesService = {
  typeName: TYPE_NAME,
  method: "SetUserPreferences",
  Request: MsgSetUserPreferences,
  Response: MsgSetUserPreferencesResponse,
} as const;

