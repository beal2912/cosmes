// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file milkyway/investors/v1/messages.proto (package milkyway.investors.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * MsgAddVestingInvestor defines the message structure for the
 * AddVestingInvestor gRPC service method. It allows the authority to add a
 * new vesting investor.
 *
 * @generated from message milkyway.investors.v1.MsgAddVestingInvestor
 */
export class MsgAddVestingInvestor extends Message<MsgAddVestingInvestor> {
  /**
   * Authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * VestingInvestor defines the vesting investor address to be added.
   *
   * @generated from field: string vesting_investor = 2;
   */
  vestingInvestor = "";

  constructor(data?: PartialMessage<MsgAddVestingInvestor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.MsgAddVestingInvestor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "vesting_investor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddVestingInvestor {
    return new MsgAddVestingInvestor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddVestingInvestor {
    return new MsgAddVestingInvestor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddVestingInvestor {
    return new MsgAddVestingInvestor().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddVestingInvestor | PlainMessage<MsgAddVestingInvestor> | undefined, b: MsgAddVestingInvestor | PlainMessage<MsgAddVestingInvestor> | undefined): boolean {
    return proto3.util.equals(MsgAddVestingInvestor, a, b);
  }
}

/**
 * MsgAddVestingInvestorResponse is the return value of MsgAddVestingInvestor.
 *
 * @generated from message milkyway.investors.v1.MsgAddVestingInvestorResponse
 */
export class MsgAddVestingInvestorResponse extends Message<MsgAddVestingInvestorResponse> {
  constructor(data?: PartialMessage<MsgAddVestingInvestorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.MsgAddVestingInvestorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddVestingInvestorResponse {
    return new MsgAddVestingInvestorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddVestingInvestorResponse {
    return new MsgAddVestingInvestorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddVestingInvestorResponse {
    return new MsgAddVestingInvestorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddVestingInvestorResponse | PlainMessage<MsgAddVestingInvestorResponse> | undefined, b: MsgAddVestingInvestorResponse | PlainMessage<MsgAddVestingInvestorResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddVestingInvestorResponse, a, b);
  }
}

/**
 * MsgUpdateInvestorsRewardRatio defines the message structure for the
 * UpdateInvestorsRewardRatio gRPC service method. It allows the authority to
 * update the investors reward ratio.
 *
 * @generated from message milkyway.investors.v1.MsgUpdateInvestorsRewardRatio
 */
export class MsgUpdateInvestorsRewardRatio extends Message<MsgUpdateInvestorsRewardRatio> {
  /**
   * Authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * InvestorsRewardRatio defines the proportion of staking rewards allocated to
   * vesting investors relative to normal users.
   *
   * @generated from field: string investors_reward_ratio = 2;
   */
  investorsRewardRatio = "";

  constructor(data?: PartialMessage<MsgUpdateInvestorsRewardRatio>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.MsgUpdateInvestorsRewardRatio";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "investors_reward_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateInvestorsRewardRatio {
    return new MsgUpdateInvestorsRewardRatio().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateInvestorsRewardRatio {
    return new MsgUpdateInvestorsRewardRatio().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateInvestorsRewardRatio {
    return new MsgUpdateInvestorsRewardRatio().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateInvestorsRewardRatio | PlainMessage<MsgUpdateInvestorsRewardRatio> | undefined, b: MsgUpdateInvestorsRewardRatio | PlainMessage<MsgUpdateInvestorsRewardRatio> | undefined): boolean {
    return proto3.util.equals(MsgUpdateInvestorsRewardRatio, a, b);
  }
}

/**
 * MsgUpdateInvestorsRewardRatioResponse is the return value of
 * MsgUpdateInvestorsRewardRatio.
 *
 * @generated from message milkyway.investors.v1.MsgUpdateInvestorsRewardRatioResponse
 */
export class MsgUpdateInvestorsRewardRatioResponse extends Message<MsgUpdateInvestorsRewardRatioResponse> {
  constructor(data?: PartialMessage<MsgUpdateInvestorsRewardRatioResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.MsgUpdateInvestorsRewardRatioResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateInvestorsRewardRatioResponse {
    return new MsgUpdateInvestorsRewardRatioResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateInvestorsRewardRatioResponse {
    return new MsgUpdateInvestorsRewardRatioResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateInvestorsRewardRatioResponse {
    return new MsgUpdateInvestorsRewardRatioResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateInvestorsRewardRatioResponse | PlainMessage<MsgUpdateInvestorsRewardRatioResponse> | undefined, b: MsgUpdateInvestorsRewardRatioResponse | PlainMessage<MsgUpdateInvestorsRewardRatioResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateInvestorsRewardRatioResponse, a, b);
  }
}

