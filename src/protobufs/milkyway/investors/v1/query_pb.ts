// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file milkyway/investors/v1/query.proto (package milkyway.investors.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryInvestorsRewardRatioRequest is request type for the
 * Query/InvestorsRewardRatio RPC method.
 *
 * @generated from message milkyway.investors.v1.QueryInvestorsRewardRatioRequest
 */
export class QueryInvestorsRewardRatioRequest extends Message<QueryInvestorsRewardRatioRequest> {
  constructor(data?: PartialMessage<QueryInvestorsRewardRatioRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.QueryInvestorsRewardRatioRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInvestorsRewardRatioRequest {
    return new QueryInvestorsRewardRatioRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInvestorsRewardRatioRequest {
    return new QueryInvestorsRewardRatioRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInvestorsRewardRatioRequest {
    return new QueryInvestorsRewardRatioRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryInvestorsRewardRatioRequest | PlainMessage<QueryInvestorsRewardRatioRequest> | undefined, b: QueryInvestorsRewardRatioRequest | PlainMessage<QueryInvestorsRewardRatioRequest> | undefined): boolean {
    return proto3.util.equals(QueryInvestorsRewardRatioRequest, a, b);
  }
}

/**
 * QueryInvestorsRewardRatioResponse is response type for the
 * Query/InvestorsRewardRatio RPC method.
 *
 * @generated from message milkyway.investors.v1.QueryInvestorsRewardRatioResponse
 */
export class QueryInvestorsRewardRatioResponse extends Message<QueryInvestorsRewardRatioResponse> {
  /**
   * InvestorsRewardRatio defines the proportion of staking rewards allocated to
   * vesting investors relative to normal users.
   *
   * @generated from field: string investors_reward_ratio = 2;
   */
  investorsRewardRatio = "";

  constructor(data?: PartialMessage<QueryInvestorsRewardRatioResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.QueryInvestorsRewardRatioResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "investors_reward_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryInvestorsRewardRatioResponse {
    return new QueryInvestorsRewardRatioResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryInvestorsRewardRatioResponse {
    return new QueryInvestorsRewardRatioResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryInvestorsRewardRatioResponse {
    return new QueryInvestorsRewardRatioResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryInvestorsRewardRatioResponse | PlainMessage<QueryInvestorsRewardRatioResponse> | undefined, b: QueryInvestorsRewardRatioResponse | PlainMessage<QueryInvestorsRewardRatioResponse> | undefined): boolean {
    return proto3.util.equals(QueryInvestorsRewardRatioResponse, a, b);
  }
}

/**
 * QueryVestingInvestorsRequest is request type for the Query/VestingInvestors
 * RPC method.
 *
 * @generated from message milkyway.investors.v1.QueryVestingInvestorsRequest
 */
export class QueryVestingInvestorsRequest extends Message<QueryVestingInvestorsRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryVestingInvestorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.QueryVestingInvestorsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVestingInvestorsRequest {
    return new QueryVestingInvestorsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVestingInvestorsRequest {
    return new QueryVestingInvestorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVestingInvestorsRequest {
    return new QueryVestingInvestorsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVestingInvestorsRequest | PlainMessage<QueryVestingInvestorsRequest> | undefined, b: QueryVestingInvestorsRequest | PlainMessage<QueryVestingInvestorsRequest> | undefined): boolean {
    return proto3.util.equals(QueryVestingInvestorsRequest, a, b);
  }
}

/**
 * QueryVestingInvestorsResponse is response type for the Query/VestingInvestors
 * RPC method.
 *
 * @generated from message milkyway.investors.v1.QueryVestingInvestorsResponse
 */
export class QueryVestingInvestorsResponse extends Message<QueryVestingInvestorsResponse> {
  /**
   * @generated from field: repeated string vesting_investors_addresses = 1;
   */
  vestingInvestorsAddresses: string[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryVestingInvestorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "milkyway.investors.v1.QueryVestingInvestorsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vesting_investors_addresses", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryVestingInvestorsResponse {
    return new QueryVestingInvestorsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryVestingInvestorsResponse {
    return new QueryVestingInvestorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryVestingInvestorsResponse {
    return new QueryVestingInvestorsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryVestingInvestorsResponse | PlainMessage<QueryVestingInvestorsResponse> | undefined, b: QueryVestingInvestorsResponse | PlainMessage<QueryVestingInvestorsResponse> | undefined): boolean {
    return proto3.util.equals(QueryVestingInvestorsResponse, a, b);
  }
}

