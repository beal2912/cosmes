// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file milkyway/services/v1/query.proto (package milkyway.services.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryParamsRequest, QueryParamsResponse, QueryServiceParamsRequest, QueryServiceParamsResponse, QueryServiceRequest, QueryServiceResponse, QueryServicesRequest, QueryServicesResponse } from "./query_pb.js";

const TYPE_NAME = "milkyway.services.v1.Query";

/**
 * Service defines a gRPC query method that returns the service by the given
 * service id.
 *
 * @generated from rpc milkyway.services.v1.Query.Service
 */
export const QueryServiceService = {
  typeName: TYPE_NAME,
  method: "Service",
  Request: QueryServiceRequest,
  Response: QueryServiceResponse,
} as const;

/**
 * Services defines a gRPC query method that returns the actively validates
 * services currently registered in the module.
 *
 * @generated from rpc milkyway.services.v1.Query.Services
 */
export const QueryServicesService = {
  typeName: TYPE_NAME,
  method: "Services",
  Request: QueryServicesRequest,
  Response: QueryServicesResponse,
} as const;

/**
 * ServiceParams defines a gRPC query method that returns the parameters of
 * service.
 *
 * @generated from rpc milkyway.services.v1.Query.ServiceParams
 */
export const QueryServiceParamsService = {
  typeName: TYPE_NAME,
  method: "ServiceParams",
  Request: QueryServiceParamsRequest,
  Response: QueryServiceParamsResponse,
} as const;

/**
 * Params defines a gRPC query method that returns the parameters of the
 * module.
 *
 * @generated from rpc milkyway.services.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

