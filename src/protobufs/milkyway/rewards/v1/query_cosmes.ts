// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file milkyway/rewards/v1/query.proto (package milkyway.rewards.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryDelegatorTotalRewardsRequest, QueryDelegatorTotalRewardsResponse, QueryDelegatorWithdrawAddressRequest, QueryDelegatorWithdrawAddressResponse, QueryOperatorCommissionRequest, QueryOperatorCommissionResponse, QueryOperatorDelegationRewardsRequest, QueryOperatorDelegationRewardsResponse, QueryOperatorOutstandingRewardsRequest, QueryOperatorOutstandingRewardsResponse, QueryParamsRequest, QueryParamsResponse, QueryPoolDelegationRewardsRequest, QueryPoolDelegationRewardsResponse, QueryPoolOutstandingRewardsRequest, QueryPoolOutstandingRewardsResponse, QueryRewardsPlanRequest, QueryRewardsPlanResponse, QueryRewardsPlansRequest, QueryRewardsPlansResponse, QueryServiceDelegationRewardsRequest, QueryServiceDelegationRewardsResponse, QueryServiceOutstandingRewardsRequest, QueryServiceOutstandingRewardsResponse } from "./query_pb.js";

const TYPE_NAME = "milkyway.rewards.v1.Query";

/**
 * Params defines a gRPC query method that returns the parameters of the
 * module.
 *
 * @generated from rpc milkyway.rewards.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * RewardsPlans queries all rewards plans.
 *
 * @generated from rpc milkyway.rewards.v1.Query.RewardsPlans
 */
export const QueryRewardsPlansService = {
  typeName: TYPE_NAME,
  method: "RewardsPlans",
  Request: QueryRewardsPlansRequest,
  Response: QueryRewardsPlansResponse,
} as const;

/**
 * RewardsPlan queries a specific rewards plan by its ID.
 *
 * @generated from rpc milkyway.rewards.v1.Query.RewardsPlan
 */
export const QueryRewardsPlanService = {
  typeName: TYPE_NAME,
  method: "RewardsPlan",
  Request: QueryRewardsPlanRequest,
  Response: QueryRewardsPlanResponse,
} as const;

/**
 * PoolOutstandingRewards queries rewards of a pool.
 *
 * @generated from rpc milkyway.rewards.v1.Query.PoolOutstandingRewards
 */
export const QueryPoolOutstandingRewardsService = {
  typeName: TYPE_NAME,
  method: "PoolOutstandingRewards",
  Request: QueryPoolOutstandingRewardsRequest,
  Response: QueryPoolOutstandingRewardsResponse,
} as const;

/**
 * OperatorOutstandingRewards queries rewards of an operator.
 *
 * @generated from rpc milkyway.rewards.v1.Query.OperatorOutstandingRewards
 */
export const QueryOperatorOutstandingRewardsService = {
  typeName: TYPE_NAME,
  method: "OperatorOutstandingRewards",
  Request: QueryOperatorOutstandingRewardsRequest,
  Response: QueryOperatorOutstandingRewardsResponse,
} as const;

/**
 * ServiceOutstandingRewards queries rewards of a service.
 *
 * @generated from rpc milkyway.rewards.v1.Query.ServiceOutstandingRewards
 */
export const QueryServiceOutstandingRewardsService = {
  typeName: TYPE_NAME,
  method: "ServiceOutstandingRewards",
  Request: QueryServiceOutstandingRewardsRequest,
  Response: QueryServiceOutstandingRewardsResponse,
} as const;

/**
 * OperatorCommission queries accumulated commission for an operator.
 *
 * @generated from rpc milkyway.rewards.v1.Query.OperatorCommission
 */
export const QueryOperatorCommissionService = {
  typeName: TYPE_NAME,
  method: "OperatorCommission",
  Request: QueryOperatorCommissionRequest,
  Response: QueryOperatorCommissionResponse,
} as const;

/**
 * PoolDelegationRewards queries the total rewards accrued by a pool
 * delegation.
 *
 * @generated from rpc milkyway.rewards.v1.Query.PoolDelegationRewards
 */
export const QueryPoolDelegationRewardsService = {
  typeName: TYPE_NAME,
  method: "PoolDelegationRewards",
  Request: QueryPoolDelegationRewardsRequest,
  Response: QueryPoolDelegationRewardsResponse,
} as const;

/**
 * OperatorDelegationRewards queries the total rewards accrued by a operator
 * delegation.
 *
 * @generated from rpc milkyway.rewards.v1.Query.OperatorDelegationRewards
 */
export const QueryOperatorDelegationRewardsService = {
  typeName: TYPE_NAME,
  method: "OperatorDelegationRewards",
  Request: QueryOperatorDelegationRewardsRequest,
  Response: QueryOperatorDelegationRewardsResponse,
} as const;

/**
 * ServiceDelegationRewards queries the total rewards accrued by a service
 * delegation.
 *
 * @generated from rpc milkyway.rewards.v1.Query.ServiceDelegationRewards
 */
export const QueryServiceDelegationRewardsService = {
  typeName: TYPE_NAME,
  method: "ServiceDelegationRewards",
  Request: QueryServiceDelegationRewardsRequest,
  Response: QueryServiceDelegationRewardsResponse,
} as const;

/**
 * DelegatorTotalRewards queries the total rewards accrued by a single
 * delegator
 *
 * @generated from rpc milkyway.rewards.v1.Query.DelegatorTotalRewards
 */
export const QueryDelegatorTotalRewardsService = {
  typeName: TYPE_NAME,
  method: "DelegatorTotalRewards",
  Request: QueryDelegatorTotalRewardsRequest,
  Response: QueryDelegatorTotalRewardsResponse,
} as const;

/**
 * DelegatorWithdrawAddress queries withdraw address of a delegator.
 *
 * @generated from rpc milkyway.rewards.v1.Query.DelegatorWithdrawAddress
 */
export const QueryDelegatorWithdrawAddressService = {
  typeName: TYPE_NAME,
  method: "DelegatorWithdrawAddress",
  Request: QueryDelegatorWithdrawAddressRequest,
  Response: QueryDelegatorWithdrawAddressResponse,
} as const;

