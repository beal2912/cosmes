// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file milkyway/operators/v1/query.proto (package milkyway.operators.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryOperatorParamsRequest, QueryOperatorParamsResponse, QueryOperatorRequest, QueryOperatorResponse, QueryOperatorsRequest, QueryOperatorsResponse, QueryParamsRequest, QueryParamsResponse } from "./query_pb.js";

const TYPE_NAME = "milkyway.operators.v1.Query";

/**
 * Operator defines a gRPC query method that returns the operator by the given
 * operator id.
 *
 * @generated from rpc milkyway.operators.v1.Query.Operator
 */
export const QueryOperatorService = {
  typeName: TYPE_NAME,
  method: "Operator",
  Request: QueryOperatorRequest,
  Response: QueryOperatorResponse,
} as const;

/**
 * OperatorParams defines a gRPC query method that returns the operator's
 * params by the given operator id.
 *
 * @generated from rpc milkyway.operators.v1.Query.OperatorParams
 */
export const QueryOperatorParamsService = {
  typeName: TYPE_NAME,
  method: "OperatorParams",
  Request: QueryOperatorParamsRequest,
  Response: QueryOperatorParamsResponse,
} as const;

/**
 * Operators defines a gRPC query method that returns the list of operators.
 *
 * @generated from rpc milkyway.operators.v1.Query.Operators
 */
export const QueryOperatorsService = {
  typeName: TYPE_NAME,
  method: "Operators",
  Request: QueryOperatorsRequest,
  Response: QueryOperatorsResponse,
} as const;

/**
 * Params defines a gRPC query method that returns the parameters of the
 * module.
 *
 * @generated from rpc milkyway.operators.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

