// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file milkyway/operators/v1/messages.proto (package milkyway.operators.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgDeactivateOperator, MsgDeactivateOperatorResponse, MsgDeleteOperator, MsgDeleteOperatorResponse, MsgReactivateOperator, MsgReactivateOperatorResponse, MsgRegisterOperator, MsgRegisterOperatorResponse, MsgSetOperatorParams, MsgSetOperatorParamsResponse, MsgTransferOperatorOwnership, MsgTransferOperatorOwnershipResponse, MsgUpdateOperator, MsgUpdateOperatorResponse, MsgUpdateParams, MsgUpdateParamsResponse } from "./messages_pb.js";

const TYPE_NAME = "milkyway.operators.v1.Msg";

/**
 * RegisterOperator defines the operation for registering a new operator.
 *
 * @generated from rpc milkyway.operators.v1.Msg.RegisterOperator
 */
export const MsgRegisterOperatorService = {
  typeName: TYPE_NAME,
  method: "RegisterOperator",
  Request: MsgRegisterOperator,
  Response: MsgRegisterOperatorResponse,
} as const;

/**
 * UpdateOperator defines the operation for updating an operator's details.
 * The operator owner can update the moniker, website, and picture URL.
 *
 * @generated from rpc milkyway.operators.v1.Msg.UpdateOperator
 */
export const MsgUpdateOperatorService = {
  typeName: TYPE_NAME,
  method: "UpdateOperator",
  Request: MsgUpdateOperator,
  Response: MsgUpdateOperatorResponse,
} as const;

/**
 * DeactivateOperator defines the operation for deactivating an
 * operator. Operators will require some time in order to be deactivated.
 * This time is defined by the governance parameters.
 *
 * @generated from rpc milkyway.operators.v1.Msg.DeactivateOperator
 */
export const MsgDeactivateOperatorService = {
  typeName: TYPE_NAME,
  method: "DeactivateOperator",
  Request: MsgDeactivateOperator,
  Response: MsgDeactivateOperatorResponse,
} as const;

/**
 * ReactivateOperator defines the operation for reactivating an
 * inactive operator.
 *
 * @generated from rpc milkyway.operators.v1.Msg.ReactivateOperator
 */
export const MsgReactivateOperatorService = {
  typeName: TYPE_NAME,
  method: "ReactivateOperator",
  Request: MsgReactivateOperator,
  Response: MsgReactivateOperatorResponse,
} as const;

/**
 * DeleteOperator defines the operation for deleting a deactivated operator.
 *
 * @generated from rpc milkyway.operators.v1.Msg.DeleteOperator
 */
export const MsgDeleteOperatorService = {
  typeName: TYPE_NAME,
  method: "DeleteOperator",
  Request: MsgDeleteOperator,
  Response: MsgDeleteOperatorResponse,
} as const;

/**
 * TransferOperatorOwnership defines the operation for transferring the
 * ownership of an operator to another account.
 *
 * @generated from rpc milkyway.operators.v1.Msg.TransferOperatorOwnership
 */
export const MsgTransferOperatorOwnershipService = {
  typeName: TYPE_NAME,
  method: "TransferOperatorOwnership",
  Request: MsgTransferOperatorOwnership,
  Response: MsgTransferOperatorOwnershipResponse,
} as const;

/**
 * SetOperatorParams defines the operation for setting a operator's
 * parameters.
 *
 * @generated from rpc milkyway.operators.v1.Msg.SetOperatorParams
 */
export const MsgSetOperatorParamsService = {
  typeName: TYPE_NAME,
  method: "SetOperatorParams",
  Request: MsgSetOperatorParams,
  Response: MsgSetOperatorParamsResponse,
} as const;

/**
 * UpdateParams defines a governance operation for updating the module
 * parameters.
 * The authority defaults to the x/gov module account.
 *
 * @generated from rpc milkyway.operators.v1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

