// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file sunrise/lockup/v1/lockup_account.proto (package sunrise.lockup.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * LockupAccount defines the lockup account.
 *
 * @generated from message sunrise.lockup.v1.LockupAccount
 */
export class LockupAccount extends Message<LockupAccount> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: string owner = 2;
   */
  owner = "";

  /**
   * @generated from field: uint64 id = 3;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 start_time = 4;
   */
  startTime = protoInt64.zero;

  /**
   * @generated from field: int64 end_time = 5;
   */
  endTime = protoInt64.zero;

  /**
   * @generated from field: string original_locking = 6;
   */
  originalLocking = "";

  /**
   * @generated from field: string delegated_free = 7;
   */
  delegatedFree = "";

  /**
   * @generated from field: string delegated_locking = 8;
   */
  delegatedLocking = "";

  /**
   * @generated from field: sunrise.lockup.v1.UnbondingEntries unbond_entries = 9;
   */
  unbondEntries?: UnbondingEntries;

  /**
   * @generated from field: string additional_locking = 10;
   */
  additionalLocking = "";

  constructor(data?: PartialMessage<LockupAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sunrise.lockup.v1.LockupAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "start_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "end_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "original_locking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "delegated_free", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "delegated_locking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "unbond_entries", kind: "message", T: UnbondingEntries },
    { no: 10, name: "additional_locking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockupAccount {
    return new LockupAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockupAccount {
    return new LockupAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockupAccount {
    return new LockupAccount().fromJsonString(jsonString, options);
  }

  static equals(a: LockupAccount | PlainMessage<LockupAccount> | undefined, b: LockupAccount | PlainMessage<LockupAccount> | undefined): boolean {
    return proto3.util.equals(LockupAccount, a, b);
  }
}

/**
 * UnbondingEntries list of elements
 *
 * @generated from message sunrise.lockup.v1.UnbondingEntries
 */
export class UnbondingEntries extends Message<UnbondingEntries> {
  /**
   * @generated from field: repeated sunrise.lockup.v1.UnbondingEntry entries = 1;
   */
  entries: UnbondingEntry[] = [];

  constructor(data?: PartialMessage<UnbondingEntries>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sunrise.lockup.v1.UnbondingEntries";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entries", kind: "message", T: UnbondingEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbondingEntries {
    return new UnbondingEntries().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbondingEntries {
    return new UnbondingEntries().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbondingEntries {
    return new UnbondingEntries().fromJsonString(jsonString, options);
  }

  static equals(a: UnbondingEntries | PlainMessage<UnbondingEntries> | undefined, b: UnbondingEntries | PlainMessage<UnbondingEntries> | undefined): boolean {
    return proto3.util.equals(UnbondingEntries, a, b);
  }
}

/**
 * UnbondingEntry defines an entry tracking the lockup account unbonding operation.
 *
 * @generated from message sunrise.lockup.v1.UnbondingEntry
 */
export class UnbondingEntry extends Message<UnbondingEntry> {
  /**
   * @generated from field: int64 creation_height = 1;
   */
  creationHeight = protoInt64.zero;

  /**
   * end time of entry
   *
   * @generated from field: int64 end_time = 2;
   */
  endTime = protoInt64.zero;

  /**
   * unbond amount
   *
   * @generated from field: string amount = 3;
   */
  amount = "";

  /**
   * validator address
   *
   * @generated from field: string validator_address = 4;
   */
  validatorAddress = "";

  constructor(data?: PartialMessage<UnbondingEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sunrise.lockup.v1.UnbondingEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creation_height", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "end_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnbondingEntry {
    return new UnbondingEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnbondingEntry {
    return new UnbondingEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnbondingEntry {
    return new UnbondingEntry().fromJsonString(jsonString, options);
  }

  static equals(a: UnbondingEntry | PlainMessage<UnbondingEntry> | undefined, b: UnbondingEntry | PlainMessage<UnbondingEntry> | undefined): boolean {
    return proto3.util.equals(UnbondingEntry, a, b);
  }
}

