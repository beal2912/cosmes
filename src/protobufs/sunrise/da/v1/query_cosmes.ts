// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file sunrise/da/v1/query.proto (package sunrise.da.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllInvalidityRequest, QueryAllInvalidityResponse, QueryAllPublishedDataRequest, QueryAllPublishedDataResponse, QueryAllValidityProofsRequest, QueryAllValidityProofsResponse, QueryInvalidityRequest, QueryInvalidityResponse, QueryParamsRequest, QueryParamsResponse, QueryProofDeputyRequest, QueryProofDeputyResponse, QueryPublishedDataRequest, QueryPublishedDataResponse, QueryValidatorShardIndicesRequest, QueryValidatorShardIndicesResponse, QueryValidityProofRequest, QueryValidityProofResponse, QueryZkpProofThresholdRequest, QueryZkpProofThresholdResponse } from "./query_pb.js";

const TYPE_NAME = "sunrise.da.v1.Query";

/**
 * Params queries the parameters of the module.
 *
 * @generated from rpc sunrise.da.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * PublishedData queries published data
 *
 * @generated from rpc sunrise.da.v1.Query.PublishedData
 */
export const QueryPublishedDataService = {
  typeName: TYPE_NAME,
  method: "PublishedData",
  Request: QueryPublishedDataRequest,
  Response: QueryPublishedDataResponse,
} as const;

/**
 * AllPublishedData queries published data
 *
 * @generated from rpc sunrise.da.v1.Query.AllPublishedData
 */
export const QueryAllPublishedDataService = {
  typeName: TYPE_NAME,
  method: "AllPublishedData",
  Request: QueryAllPublishedDataRequest,
  Response: QueryAllPublishedDataResponse,
} as const;

/**
 * ValidityProof queries validity proof from the validator
 *
 * @generated from rpc sunrise.da.v1.Query.ValidityProof
 */
export const QueryValidityProofService = {
  typeName: TYPE_NAME,
  method: "ValidityProof",
  Request: QueryValidityProofRequest,
  Response: QueryValidityProofResponse,
} as const;

/**
 * AllValidityProofs queries all validity proofs
 *
 * @generated from rpc sunrise.da.v1.Query.AllValidityProofs
 */
export const QueryAllValidityProofsService = {
  typeName: TYPE_NAME,
  method: "AllValidityProofs",
  Request: QueryAllValidityProofsRequest,
  Response: QueryAllValidityProofsResponse,
} as const;

/**
 * Invalidity queries invalidity report
 *
 * @generated from rpc sunrise.da.v1.Query.Invalidity
 */
export const QueryInvalidityService = {
  typeName: TYPE_NAME,
  method: "Invalidity",
  Request: QueryInvalidityRequest,
  Response: QueryInvalidityResponse,
} as const;

/**
 * AllInvalidity queries all invalidity reports
 *
 * @generated from rpc sunrise.da.v1.Query.AllInvalidity
 */
export const QueryAllInvalidityService = {
  typeName: TYPE_NAME,
  method: "AllInvalidity",
  Request: QueryAllInvalidityRequest,
  Response: QueryAllInvalidityResponse,
} as const;

/**
 * ValidatorShardIndices
 *
 * @generated from rpc sunrise.da.v1.Query.ValidatorShardIndices
 */
export const QueryValidatorShardIndicesService = {
  typeName: TYPE_NAME,
  method: "ValidatorShardIndices",
  Request: QueryValidatorShardIndicesRequest,
  Response: QueryValidatorShardIndicesResponse,
} as const;

/**
 * ZkpProofThreshold
 *
 * @generated from rpc sunrise.da.v1.Query.ZkpProofThreshold
 */
export const QueryZkpProofThresholdService = {
  typeName: TYPE_NAME,
  method: "ZkpProofThreshold",
  Request: QueryZkpProofThresholdRequest,
  Response: QueryZkpProofThresholdResponse,
} as const;

/**
 * ProofDeputy
 *
 * @generated from rpc sunrise.da.v1.Query.ProofDeputy
 */
export const QueryProofDeputyService = {
  typeName: TYPE_NAME,
  method: "ProofDeputy",
  Request: QueryProofDeputyRequest,
  Response: QueryProofDeputyResponse,
} as const;

