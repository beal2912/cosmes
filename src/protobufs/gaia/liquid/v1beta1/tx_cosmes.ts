// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file gaia/liquid/v1beta1/tx.proto (package gaia.liquid.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgDisableTokenizeShares, MsgDisableTokenizeSharesResponse, MsgEnableTokenizeShares, MsgEnableTokenizeSharesResponse, MsgRedeemTokensForShares, MsgRedeemTokensForSharesResponse, MsgTokenizeShares, MsgTokenizeSharesResponse, MsgTransferTokenizeShareRecord, MsgTransferTokenizeShareRecordResponse, MsgUpdateParams, MsgUpdateParamsResponse, MsgWithdrawAllTokenizeShareRecordReward, MsgWithdrawAllTokenizeShareRecordRewardResponse, MsgWithdrawTokenizeShareRecordReward, MsgWithdrawTokenizeShareRecordRewardResponse } from "./tx_pb.js";

const TYPE_NAME = "gaia.liquid.v1beta1.Msg";

/**
 * UpdateParams defines an operation for updating the x/liquid module
 * parameters.
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

/**
 * TokenizeShares defines a method for tokenizing shares from a validator.
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.TokenizeShares
 */
export const MsgTokenizeSharesService = {
  typeName: TYPE_NAME,
  method: "TokenizeShares",
  Request: MsgTokenizeShares,
  Response: MsgTokenizeSharesResponse,
} as const;

/**
 * RedeemTokensForShares defines a method for redeeming tokens from a
 * validator for shares.
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.RedeemTokensForShares
 */
export const MsgRedeemTokensForSharesService = {
  typeName: TYPE_NAME,
  method: "RedeemTokensForShares",
  Request: MsgRedeemTokensForShares,
  Response: MsgRedeemTokensForSharesResponse,
} as const;

/**
 * TransferTokenizeShareRecord defines a method to transfer ownership of
 * TokenizeShareRecord
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.TransferTokenizeShareRecord
 */
export const MsgTransferTokenizeShareRecordService = {
  typeName: TYPE_NAME,
  method: "TransferTokenizeShareRecord",
  Request: MsgTransferTokenizeShareRecord,
  Response: MsgTransferTokenizeShareRecordResponse,
} as const;

/**
 * DisableTokenizeShares defines a method to prevent the tokenization of an
 * addresses stake
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.DisableTokenizeShares
 */
export const MsgDisableTokenizeSharesService = {
  typeName: TYPE_NAME,
  method: "DisableTokenizeShares",
  Request: MsgDisableTokenizeShares,
  Response: MsgDisableTokenizeSharesResponse,
} as const;

/**
 * EnableTokenizeShares defines a method to re-enable the tokenization of an
 * addresseses stake after it has been disabled
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.EnableTokenizeShares
 */
export const MsgEnableTokenizeSharesService = {
  typeName: TYPE_NAME,
  method: "EnableTokenizeShares",
  Request: MsgEnableTokenizeShares,
  Response: MsgEnableTokenizeSharesResponse,
} as const;

/**
 * WithdrawTokenizeShareRecordReward defines a method to withdraw reward for
 * an owning TokenizeShareRecord
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.WithdrawTokenizeShareRecordReward
 */
export const MsgWithdrawTokenizeShareRecordRewardService = {
  typeName: TYPE_NAME,
  method: "WithdrawTokenizeShareRecordReward",
  Request: MsgWithdrawTokenizeShareRecordReward,
  Response: MsgWithdrawTokenizeShareRecordRewardResponse,
} as const;

/**
 * WithdrawAllTokenizeShareRecordReward defines a method to withdraw reward
 * for all owning TokenizeShareRecord
 *
 * @generated from rpc gaia.liquid.v1beta1.Msg.WithdrawAllTokenizeShareRecordReward
 */
export const MsgWithdrawAllTokenizeShareRecordRewardService = {
  typeName: TYPE_NAME,
  method: "WithdrawAllTokenizeShareRecordReward",
  Request: MsgWithdrawAllTokenizeShareRecordReward,
  Response: MsgWithdrawAllTokenizeShareRecordRewardResponse,
} as const;

