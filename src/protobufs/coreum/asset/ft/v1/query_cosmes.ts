// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file coreum/asset/ft/v1/query.proto (package coreum.asset.ft.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryBalanceRequest, QueryBalanceResponse, QueryDEXSettingsRequest, QueryDEXSettingsResponse, QueryFrozenBalanceRequest, QueryFrozenBalanceResponse, QueryFrozenBalancesRequest, QueryFrozenBalancesResponse, QueryParamsRequest, QueryParamsResponse, QueryTokenRequest, QueryTokenResponse, QueryTokensRequest, QueryTokensResponse, QueryTokenUpgradeStatusesRequest, QueryTokenUpgradeStatusesResponse, QueryWhitelistedBalanceRequest, QueryWhitelistedBalanceResponse, QueryWhitelistedBalancesRequest, QueryWhitelistedBalancesResponse } from "./query_pb.js";

const TYPE_NAME = "coreum.asset.ft.v1.Query";

/**
 * Params queries the parameters of x/asset/ft module.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Tokens queries the fungible tokens of the module.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.Tokens
 */
export const QueryTokensService = {
  typeName: TYPE_NAME,
  method: "Tokens",
  Request: QueryTokensRequest,
  Response: QueryTokensResponse,
} as const;

/**
 * Token queries the fungible token of the module.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.Token
 */
export const QueryTokenService = {
  typeName: TYPE_NAME,
  method: "Token",
  Request: QueryTokenRequest,
  Response: QueryTokenResponse,
} as const;

/**
 * TokenUpgradeStatuses returns token upgrades info.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.TokenUpgradeStatuses
 */
export const QueryTokenUpgradeStatusesService = {
  typeName: TYPE_NAME,
  method: "TokenUpgradeStatuses",
  Request: QueryTokenUpgradeStatusesRequest,
  Response: QueryTokenUpgradeStatusesResponse,
} as const;

/**
 * Balance returns balance of the denom for the account.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.Balance
 */
export const QueryBalanceService = {
  typeName: TYPE_NAME,
  method: "Balance",
  Request: QueryBalanceRequest,
  Response: QueryBalanceResponse,
} as const;

/**
 * FrozenBalances returns all the frozen balances for the account.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.FrozenBalances
 */
export const QueryFrozenBalancesService = {
  typeName: TYPE_NAME,
  method: "FrozenBalances",
  Request: QueryFrozenBalancesRequest,
  Response: QueryFrozenBalancesResponse,
} as const;

/**
 * FrozenBalance returns frozen balance of the denom for the account.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.FrozenBalance
 */
export const QueryFrozenBalanceService = {
  typeName: TYPE_NAME,
  method: "FrozenBalance",
  Request: QueryFrozenBalanceRequest,
  Response: QueryFrozenBalanceResponse,
} as const;

/**
 * WhitelistedBalances returns all the whitelisted balances for the account.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.WhitelistedBalances
 */
export const QueryWhitelistedBalancesService = {
  typeName: TYPE_NAME,
  method: "WhitelistedBalances",
  Request: QueryWhitelistedBalancesRequest,
  Response: QueryWhitelistedBalancesResponse,
} as const;

/**
 * WhitelistedBalance returns whitelisted balance of the denom for the account.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.WhitelistedBalance
 */
export const QueryWhitelistedBalanceService = {
  typeName: TYPE_NAME,
  method: "WhitelistedBalance",
  Request: QueryWhitelistedBalanceRequest,
  Response: QueryWhitelistedBalanceResponse,
} as const;

/**
 * DEXSettings returns DEX settings of the denom.
 *
 * @generated from rpc coreum.asset.ft.v1.Query.DEXSettings
 */
export const QueryDEXSettingsService = {
  typeName: TYPE_NAME,
  method: "DEXSettings",
  Request: QueryDEXSettingsRequest,
  Response: QueryDEXSettingsResponse,
} as const;

