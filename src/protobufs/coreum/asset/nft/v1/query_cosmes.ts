// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file coreum/asset/nft/v1/query.proto (package coreum.asset.nft.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryBurntNFTRequest, QueryBurntNFTResponse, QueryBurntNFTsInClassRequest, QueryBurntNFTsInClassResponse, QueryClassesRequest, QueryClassesResponse, QueryClassFrozenAccountsRequest, QueryClassFrozenAccountsResponse, QueryClassFrozenRequest, QueryClassFrozenResponse, QueryClassRequest, QueryClassResponse, QueryClassWhitelistedAccountsRequest, QueryClassWhitelistedAccountsResponse, QueryFrozenRequest, QueryFrozenResponse, QueryParamsRequest, QueryParamsResponse, QueryWhitelistedAccountsForNFTRequest, QueryWhitelistedAccountsForNFTResponse, QueryWhitelistedRequest, QueryWhitelistedResponse } from "./query_pb.js";

const TYPE_NAME = "coreum.asset.nft.v1.Query";

/**
 * Params queries the parameters of x/asset/nft module.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Class queries the non-fungible token class of the module.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.Class
 */
export const QueryClassService = {
  typeName: TYPE_NAME,
  method: "Class",
  Request: QueryClassRequest,
  Response: QueryClassResponse,
} as const;

/**
 * Classes queries the non-fungible token classes of the module.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.Classes
 */
export const QueryClassesService = {
  typeName: TYPE_NAME,
  method: "Classes",
  Request: QueryClassesRequest,
  Response: QueryClassesResponse,
} as const;

/**
 * Frozen queries to check if an NFT is frozen or not.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.Frozen
 */
export const QueryFrozenService = {
  typeName: TYPE_NAME,
  method: "Frozen",
  Request: QueryFrozenRequest,
  Response: QueryFrozenResponse,
} as const;

/**
 * ClassFrozen queries to check if an account if frozen for an NFT class.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.ClassFrozen
 */
export const QueryClassFrozenService = {
  typeName: TYPE_NAME,
  method: "ClassFrozen",
  Request: QueryClassFrozenRequest,
  Response: QueryClassFrozenResponse,
} as const;

/**
 * QueryClassFrozenAccountsRequest returns the list of accounts which are frozen to hold NFTs in this class.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.ClassFrozenAccounts
 */
export const QueryClassFrozenAccountsService = {
  typeName: TYPE_NAME,
  method: "ClassFrozenAccounts",
  Request: QueryClassFrozenAccountsRequest,
  Response: QueryClassFrozenAccountsResponse,
} as const;

/**
 * Whitelisted queries to check if an account is whitelited to hold an NFT or not.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.Whitelisted
 */
export const QueryWhitelistedService = {
  typeName: TYPE_NAME,
  method: "Whitelisted",
  Request: QueryWhitelistedRequest,
  Response: QueryWhitelistedResponse,
} as const;

/**
 * WhitelistedAccountsForNFT returns the list of accounts which are whitelisted to hold this NFT.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.WhitelistedAccountsForNFT
 */
export const QueryWhitelistedAccountsForNFTService = {
  typeName: TYPE_NAME,
  method: "WhitelistedAccountsForNFT",
  Request: QueryWhitelistedAccountsForNFTRequest,
  Response: QueryWhitelistedAccountsForNFTResponse,
} as const;

/**
 * ClassWhitelistedAccounts returns the list of accounts which are whitelisted to hold NFTs in this class.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.ClassWhitelistedAccounts
 */
export const QueryClassWhitelistedAccountsService = {
  typeName: TYPE_NAME,
  method: "ClassWhitelistedAccounts",
  Request: QueryClassWhitelistedAccountsRequest,
  Response: QueryClassWhitelistedAccountsResponse,
} as const;

/**
 * BurntNFTsInClass checks if an nft if is in burnt NFTs list.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.BurntNFT
 */
export const QueryBurntNFTService = {
  typeName: TYPE_NAME,
  method: "BurntNFT",
  Request: QueryBurntNFTRequest,
  Response: QueryBurntNFTResponse,
} as const;

/**
 * BurntNFTsInClass returns the list of burnt nfts in a class.
 *
 * @generated from rpc coreum.asset.nft.v1.Query.BurntNFTsInClass
 */
export const QueryBurntNFTsInClassService = {
  typeName: TYPE_NAME,
  method: "BurntNFTsInClass",
  Request: QueryBurntNFTsInClassRequest,
  Response: QueryBurntNFTsInClassResponse,
} as const;

