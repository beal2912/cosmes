// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file coreum/asset/nft/v1/tx.proto (package coreum.asset.nft.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { EmptyResponse, MsgAddToClassWhitelist, MsgAddToWhitelist, MsgBurn, MsgClassFreeze, MsgClassUnfreeze, MsgFreeze, MsgIssueClass, MsgMint, MsgRemoveFromClassWhitelist, MsgRemoveFromWhitelist, MsgUnfreeze, MsgUpdateData, MsgUpdateParams } from "./tx_pb.js";

const TYPE_NAME = "coreum.asset.nft.v1.Msg";

/**
 * IssueClass creates new non-fungible token class.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.IssueClass
 */
export const MsgIssueClassService = {
  typeName: TYPE_NAME,
  method: "IssueClass",
  Request: MsgIssueClass,
  Response: EmptyResponse,
} as const;

/**
 * Mint mints new non-fungible token in the class.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.Mint
 */
export const MsgMintService = {
  typeName: TYPE_NAME,
  method: "Mint",
  Request: MsgMint,
  Response: EmptyResponse,
} as const;

/**
 * UpdateData updates the existing non-fungible token data in the class.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.UpdateData
 */
export const MsgUpdateDataService = {
  typeName: TYPE_NAME,
  method: "UpdateData",
  Request: MsgUpdateData,
  Response: EmptyResponse,
} as const;

/**
 * Burn burns the existing non-fungible token in the class.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.Burn
 */
export const MsgBurnService = {
  typeName: TYPE_NAME,
  method: "Burn",
  Request: MsgBurn,
  Response: EmptyResponse,
} as const;

/**
 * Freeze freezes an NFT
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.Freeze
 */
export const MsgFreezeService = {
  typeName: TYPE_NAME,
  method: "Freeze",
  Request: MsgFreeze,
  Response: EmptyResponse,
} as const;

/**
 * Unfreeze removes the freeze effect already put on an NFT
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.Unfreeze
 */
export const MsgUnfreezeService = {
  typeName: TYPE_NAME,
  method: "Unfreeze",
  Request: MsgUnfreeze,
  Response: EmptyResponse,
} as const;

/**
 * AddToWhitelist sets the account as whitelisted to hold the NFT
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.AddToWhitelist
 */
export const MsgAddToWhitelistService = {
  typeName: TYPE_NAME,
  method: "AddToWhitelist",
  Request: MsgAddToWhitelist,
  Response: EmptyResponse,
} as const;

/**
 * RemoveFromWhitelist removes an account from whitelisted list of the NFT
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.RemoveFromWhitelist
 */
export const MsgRemoveFromWhitelistService = {
  typeName: TYPE_NAME,
  method: "RemoveFromWhitelist",
  Request: MsgRemoveFromWhitelist,
  Response: EmptyResponse,
} as const;

/**
 * AddToClassWhitelist adds account as whitelist for all the NFTs in the class
 * NOTE: class whitelist does not affect the individual nft whitelisting.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.AddToClassWhitelist
 */
export const MsgAddToClassWhitelistService = {
  typeName: TYPE_NAME,
  method: "AddToClassWhitelist",
  Request: MsgAddToClassWhitelist,
  Response: EmptyResponse,
} as const;

/**
 * RemoveFromClassWhitelist removes account as whitelist for the entire class
 * NOTE:
 * class whitelist does not affect the individual nft whitelisting.
 * ie. if specific whitelist is granted for an NFT, that whitelist will
 * still be valid, after we add and remove it from the class whitelist.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.RemoveFromClassWhitelist
 */
export const MsgRemoveFromClassWhitelistService = {
  typeName: TYPE_NAME,
  method: "RemoveFromClassWhitelist",
  Request: MsgRemoveFromClassWhitelist,
  Response: EmptyResponse,
} as const;

/**
 * ClassFreeze freezes all NFTs of a class held by an account.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.ClassFreeze
 */
export const MsgClassFreezeService = {
  typeName: TYPE_NAME,
  method: "ClassFreeze",
  Request: MsgClassFreeze,
  Response: EmptyResponse,
} as const;

/**
 * ClassUnfreeze removes class-freeze on an account for an NFT class.
 * NOTE:
 * class unfreeze does not affect the individual nft freeze.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.ClassUnfreeze
 */
export const MsgClassUnfreezeService = {
  typeName: TYPE_NAME,
  method: "ClassUnfreeze",
  Request: MsgClassUnfreeze,
  Response: EmptyResponse,
} as const;

/**
 * UpdateParams is a governance operation that sets the parameters of the module.
 * NOTE: all parameters must be provided.
 *
 * @generated from rpc coreum.asset.nft.v1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: EmptyResponse,
} as const;

