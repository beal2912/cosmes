// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file coreum/dex/v1/tx.proto (package coreum.dex.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { GoodTil, OrderType, Side, TimeInForce } from "./order_pb.js";

/**
 * @generated from message coreum.dex.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: coreum.dex.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgPlaceOrder defines message to place an order on orderbook.
 *
 * @generated from message coreum.dex.v1.MsgPlaceOrder
 */
export class MsgPlaceOrder extends Message<MsgPlaceOrder> {
  /**
   * sender is order creator address.
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * type is order type.
   *
   * @generated from field: coreum.dex.v1.OrderType type = 2;
   */
  type = OrderType.UNSPECIFIED;

  /**
   * id is unique order ID.
   *
   * @generated from field: string id = 3;
   */
  id = "";

  /**
   * base_denom is base order denom.
   *
   * @generated from field: string base_denom = 4;
   */
  baseDenom = "";

  /**
   * quote_denom is quote order denom
   *
   * @generated from field: string quote_denom = 5;
   */
  quoteDenom = "";

  /**
   * price is value of one unit of the base_denom expressed in terms of the quote_denom.
   *
   * @generated from field: string price = 6;
   */
  price = "";

  /**
   * quantity is amount of the base base_denom being traded.
   *
   * @generated from field: string quantity = 7;
   */
  quantity = "";

  /**
   * side is order side.
   *
   * @generated from field: coreum.dex.v1.Side side = 8;
   */
  side = Side.UNSPECIFIED;

  /**
   * good_til is order good til
   *
   * @generated from field: coreum.dex.v1.GoodTil good_til = 9;
   */
  goodTil?: GoodTil;

  /**
   * time_in_force is order time in force
   *
   * @generated from field: coreum.dex.v1.TimeInForce time_in_force = 10;
   */
  timeInForce = TimeInForce.UNSPECIFIED;

  constructor(data?: PartialMessage<MsgPlaceOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.MsgPlaceOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(OrderType) },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "base_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "quote_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "quantity", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "side", kind: "enum", T: proto3.getEnumType(Side) },
    { no: 9, name: "good_til", kind: "message", T: GoodTil },
    { no: 10, name: "time_in_force", kind: "enum", T: proto3.getEnumType(TimeInForce) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgPlaceOrder {
    return new MsgPlaceOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgPlaceOrder {
    return new MsgPlaceOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgPlaceOrder {
    return new MsgPlaceOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgPlaceOrder | PlainMessage<MsgPlaceOrder> | undefined, b: MsgPlaceOrder | PlainMessage<MsgPlaceOrder> | undefined): boolean {
    return proto3.util.equals(MsgPlaceOrder, a, b);
  }
}

/**
 * MsgCancelOrder defines message to cancel the order in the orderbook.
 *
 * @generated from message coreum.dex.v1.MsgCancelOrder
 */
export class MsgCancelOrder extends Message<MsgCancelOrder> {
  /**
   * sender is order creator address.
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * id is unique order ID.
   *
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<MsgCancelOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.MsgCancelOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelOrder {
    return new MsgCancelOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelOrder {
    return new MsgCancelOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelOrder {
    return new MsgCancelOrder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelOrder | PlainMessage<MsgCancelOrder> | undefined, b: MsgCancelOrder | PlainMessage<MsgCancelOrder> | undefined): boolean {
    return proto3.util.equals(MsgCancelOrder, a, b);
  }
}

/**
 * MsgCancelOrdersByDenom defines message to cancel all orders by denom and account.
 *
 * @generated from message coreum.dex.v1.MsgCancelOrdersByDenom
 */
export class MsgCancelOrdersByDenom extends Message<MsgCancelOrdersByDenom> {
  /**
   * sender is order creator address.
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * account is order creator address.
   *
   * @generated from field: string account = 2;
   */
  account = "";

  /**
   * denom is orders denom.
   *
   * @generated from field: string denom = 3;
   */
  denom = "";

  constructor(data?: PartialMessage<MsgCancelOrdersByDenom>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.MsgCancelOrdersByDenom";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelOrdersByDenom {
    return new MsgCancelOrdersByDenom().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelOrdersByDenom {
    return new MsgCancelOrdersByDenom().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelOrdersByDenom {
    return new MsgCancelOrdersByDenom().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelOrdersByDenom | PlainMessage<MsgCancelOrdersByDenom> | undefined, b: MsgCancelOrdersByDenom | PlainMessage<MsgCancelOrdersByDenom> | undefined): boolean {
    return proto3.util.equals(MsgCancelOrdersByDenom, a, b);
  }
}

/**
 * @generated from message coreum.dex.v1.EmptyResponse
 */
export class EmptyResponse extends Message<EmptyResponse> {
  constructor(data?: PartialMessage<EmptyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.EmptyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmptyResponse {
    return new EmptyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmptyResponse {
    return new EmptyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmptyResponse {
    return new EmptyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EmptyResponse | PlainMessage<EmptyResponse> | undefined, b: EmptyResponse | PlainMessage<EmptyResponse> | undefined): boolean {
    return proto3.util.equals(EmptyResponse, a, b);
  }
}

