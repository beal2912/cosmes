// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file coreum/dex/v1/genesis.proto (package coreum.dex.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { Order, OrderBookData } from "./order_pb.js";

/**
 * GenesisState defines the module genesis state.
 *
 * @generated from message coreum.dex.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * params defines all the parameters of the module.
   *
   * @generated from field: coreum.dex.v1.Params params = 1;
   */
  params?: Params;

  /**
   * @generated from field: repeated coreum.dex.v1.OrderBookDataWithID order_books = 2;
   */
  orderBooks: OrderBookDataWithID[] = [];

  /**
   * @generated from field: repeated coreum.dex.v1.Order orders = 3;
   */
  orders: Order[] = [];

  /**
   * order_sequence is current order sequence;
   *
   * @generated from field: uint64 order_sequence = 4;
   */
  orderSequence = protoInt64.zero;

  /**
   * @generated from field: repeated coreum.dex.v1.AccountDenomOrdersCount accounts_denoms_orders_counts = 5;
   */
  accountsDenomsOrdersCounts: AccountDenomOrdersCount[] = [];

  /**
   * @generated from field: repeated bytes reserved_order_ids = 6;
   */
  reservedOrderIds: Uint8Array[] = [];

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
    { no: 2, name: "order_books", kind: "message", T: OrderBookDataWithID, repeated: true },
    { no: 3, name: "orders", kind: "message", T: Order, repeated: true },
    { no: 4, name: "order_sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "accounts_denoms_orders_counts", kind: "message", T: AccountDenomOrdersCount, repeated: true },
    { no: 6, name: "reserved_order_ids", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

/**
 * OrderBookDataWithID is a order book data with it's corresponding ID.
 *
 * @generated from message coreum.dex.v1.OrderBookDataWithID
 */
export class OrderBookDataWithID extends Message<OrderBookDataWithID> {
  /**
   * id is order book ID.
   *
   * @generated from field: uint32 id = 1;
   */
  id = 0;

  /**
   * data is order book data.
   *
   * @generated from field: coreum.dex.v1.OrderBookData data = 2;
   */
  data?: OrderBookData;

  constructor(data?: PartialMessage<OrderBookDataWithID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.OrderBookDataWithID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "data", kind: "message", T: OrderBookData },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderBookDataWithID {
    return new OrderBookDataWithID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderBookDataWithID {
    return new OrderBookDataWithID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderBookDataWithID {
    return new OrderBookDataWithID().fromJsonString(jsonString, options);
  }

  static equals(a: OrderBookDataWithID | PlainMessage<OrderBookDataWithID> | undefined, b: OrderBookDataWithID | PlainMessage<OrderBookDataWithID> | undefined): boolean {
    return proto3.util.equals(OrderBookDataWithID, a, b);
  }
}

/**
 * AccountDenomOrderCount is a count of orders per account and denom.
 *
 * @generated from message coreum.dex.v1.AccountDenomOrdersCount
 */
export class AccountDenomOrdersCount extends Message<AccountDenomOrdersCount> {
  /**
   * @generated from field: uint64 account_number = 1;
   */
  accountNumber = protoInt64.zero;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  /**
   * @generated from field: uint64 orders_count = 3;
   */
  ordersCount = protoInt64.zero;

  constructor(data?: PartialMessage<AccountDenomOrdersCount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.AccountDenomOrdersCount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "orders_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountDenomOrdersCount {
    return new AccountDenomOrdersCount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountDenomOrdersCount {
    return new AccountDenomOrdersCount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountDenomOrdersCount {
    return new AccountDenomOrdersCount().fromJsonString(jsonString, options);
  }

  static equals(a: AccountDenomOrdersCount | PlainMessage<AccountDenomOrdersCount> | undefined, b: AccountDenomOrdersCount | PlainMessage<AccountDenomOrdersCount> | undefined): boolean {
    return proto3.util.equals(AccountDenomOrdersCount, a, b);
  }
}

