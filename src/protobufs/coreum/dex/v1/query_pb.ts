// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file coreum/dex/v1/query.proto (package coreum.dex.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { Order, OrderBookData, Side } from "./order_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryParamsRequest defines the request type for querying x/dex parameters.
 *
 * @generated from message coreum.dex.v1.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse defines the response type for querying x/dex parameters.
 *
 * @generated from message coreum.dex.v1.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * @generated from field: coreum.dex.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * QueryOrderRequest defines the request type for the `Order` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderRequest
 */
export class QueryOrderRequest extends Message<QueryOrderRequest> {
  /**
   * creator is order creator's account.
   *
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * id is order ID.
   *
   * we don't use the gogoproto.customname here since the google.api.http ignores it and generates invalid code.
   *
   * @generated from field: string id = 2;
   */
  id = "";

  constructor(data?: PartialMessage<QueryOrderRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderRequest {
    return new QueryOrderRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderRequest {
    return new QueryOrderRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderRequest {
    return new QueryOrderRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderRequest | PlainMessage<QueryOrderRequest> | undefined, b: QueryOrderRequest | PlainMessage<QueryOrderRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrderRequest, a, b);
  }
}

/**
 * QueryOrderRequestResponse defines the response type for the `Order` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderResponse
 */
export class QueryOrderResponse extends Message<QueryOrderResponse> {
  /**
   * @generated from field: coreum.dex.v1.Order order = 1;
   */
  order?: Order;

  constructor(data?: PartialMessage<QueryOrderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order", kind: "message", T: Order },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderResponse {
    return new QueryOrderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderResponse {
    return new QueryOrderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderResponse {
    return new QueryOrderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderResponse | PlainMessage<QueryOrderResponse> | undefined, b: QueryOrderResponse | PlainMessage<QueryOrderResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrderResponse, a, b);
  }
}

/**
 * QueryOrdersRequest defines the request type for the `Orders` query.
 *
 * @generated from message coreum.dex.v1.QueryOrdersRequest
 */
export class QueryOrdersRequest extends Message<QueryOrdersRequest> {
  /**
   * creator is order creator's account.
   *
   * @generated from field: string creator = 1;
   */
  creator = "";

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryOrdersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrdersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrdersRequest {
    return new QueryOrdersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrdersRequest {
    return new QueryOrdersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrdersRequest {
    return new QueryOrdersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrdersRequest | PlainMessage<QueryOrdersRequest> | undefined, b: QueryOrdersRequest | PlainMessage<QueryOrdersRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrdersRequest, a, b);
  }
}

/**
 * QueryOrdersRequestResponse defines the response type for the `Order` query.
 *
 * @generated from message coreum.dex.v1.QueryOrdersResponse
 */
export class QueryOrdersResponse extends Message<QueryOrdersResponse> {
  /**
   * @generated from field: repeated coreum.dex.v1.Order orders = 1;
   */
  orders: Order[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orders", kind: "message", T: Order, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrdersResponse {
    return new QueryOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrdersResponse {
    return new QueryOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrdersResponse {
    return new QueryOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrdersResponse | PlainMessage<QueryOrdersResponse> | undefined, b: QueryOrdersResponse | PlainMessage<QueryOrdersResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrdersResponse, a, b);
  }
}

/**
 * QueryOrderBooksRequest defines the request type for the `OrderBooks` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderBooksRequest
 */
export class QueryOrderBooksRequest extends Message<QueryOrderBooksRequest> {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryOrderBooksRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderBooksRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderBooksRequest {
    return new QueryOrderBooksRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderBooksRequest {
    return new QueryOrderBooksRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderBooksRequest {
    return new QueryOrderBooksRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderBooksRequest | PlainMessage<QueryOrderBooksRequest> | undefined, b: QueryOrderBooksRequest | PlainMessage<QueryOrderBooksRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrderBooksRequest, a, b);
  }
}

/**
 * QueryOrderBooksResponse defines the response type for the `OrderBooks` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderBooksResponse
 */
export class QueryOrderBooksResponse extends Message<QueryOrderBooksResponse> {
  /**
   * @generated from field: repeated coreum.dex.v1.OrderBookData order_books = 1;
   */
  orderBooks: OrderBookData[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryOrderBooksResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderBooksResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "order_books", kind: "message", T: OrderBookData, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderBooksResponse {
    return new QueryOrderBooksResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderBooksResponse {
    return new QueryOrderBooksResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderBooksResponse {
    return new QueryOrderBooksResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderBooksResponse | PlainMessage<QueryOrderBooksResponse> | undefined, b: QueryOrderBooksResponse | PlainMessage<QueryOrderBooksResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrderBooksResponse, a, b);
  }
}

/**
 * QueryOrderBookParamsRequest defines the request type for the `OrderBookParams` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderBookParamsRequest
 */
export class QueryOrderBookParamsRequest extends Message<QueryOrderBookParamsRequest> {
  /**
   * base_denom is base order book denom.
   *
   * @generated from field: string base_denom = 1;
   */
  baseDenom = "";

  /**
   * quote_denom is quote order book denom
   *
   * @generated from field: string quote_denom = 2;
   */
  quoteDenom = "";

  constructor(data?: PartialMessage<QueryOrderBookParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderBookParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quote_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderBookParamsRequest {
    return new QueryOrderBookParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderBookParamsRequest {
    return new QueryOrderBookParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderBookParamsRequest {
    return new QueryOrderBookParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderBookParamsRequest | PlainMessage<QueryOrderBookParamsRequest> | undefined, b: QueryOrderBookParamsRequest | PlainMessage<QueryOrderBookParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrderBookParamsRequest, a, b);
  }
}

/**
 * QueryOrderBookParamsResponse defines the response type for the `OrderBookParams` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderBookParamsResponse
 */
export class QueryOrderBookParamsResponse extends Message<QueryOrderBookParamsResponse> {
  /**
   * price_tick is the minimum price movement an asset price can make, either upward or downward.
   *
   * @generated from field: string price_tick = 1;
   */
  priceTick = "";

  /**
   * quantity_step is the the smallest allowable step for the base asset inside a market.
   *
   * @generated from field: string quantity_step = 2;
   */
  quantityStep = "";

  /**
   * base_denom_unified_ref_amount is needed to define price tick & quantity step of base denom
   *
   * @generated from field: string base_denom_unified_ref_amount = 3;
   */
  baseDenomUnifiedRefAmount = "";

  /**
   * quote_denom_unified_ref_amount is needed to define price tick & quantity step of quote denom
   *
   * @generated from field: string quote_denom_unified_ref_amount = 4;
   */
  quoteDenomUnifiedRefAmount = "";

  constructor(data?: PartialMessage<QueryOrderBookParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderBookParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "price_tick", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quantity_step", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "base_denom_unified_ref_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "quote_denom_unified_ref_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderBookParamsResponse {
    return new QueryOrderBookParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderBookParamsResponse {
    return new QueryOrderBookParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderBookParamsResponse {
    return new QueryOrderBookParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderBookParamsResponse | PlainMessage<QueryOrderBookParamsResponse> | undefined, b: QueryOrderBookParamsResponse | PlainMessage<QueryOrderBookParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrderBookParamsResponse, a, b);
  }
}

/**
 * QueryOrderBookOrdersRequest defines the request type for the `OrderBookOrders` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderBookOrdersRequest
 */
export class QueryOrderBookOrdersRequest extends Message<QueryOrderBookOrdersRequest> {
  /**
   * base_denom is base order denom.
   *
   * @generated from field: string base_denom = 1;
   */
  baseDenom = "";

  /**
   * quote_denom is quote order denom
   *
   * @generated from field: string quote_denom = 2;
   */
  quoteDenom = "";

  /**
   * side is order side.
   *
   * @generated from field: coreum.dex.v1.Side side = 3;
   */
  side = Side.UNSPECIFIED;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryOrderBookOrdersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderBookOrdersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "quote_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "side", kind: "enum", T: proto3.getEnumType(Side) },
    { no: 4, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderBookOrdersRequest {
    return new QueryOrderBookOrdersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderBookOrdersRequest {
    return new QueryOrderBookOrdersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderBookOrdersRequest {
    return new QueryOrderBookOrdersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderBookOrdersRequest | PlainMessage<QueryOrderBookOrdersRequest> | undefined, b: QueryOrderBookOrdersRequest | PlainMessage<QueryOrderBookOrdersRequest> | undefined): boolean {
    return proto3.util.equals(QueryOrderBookOrdersRequest, a, b);
  }
}

/**
 * QueryOrderBookOrdersResponse defines the response type for the `OrderBookOrders` query.
 *
 * @generated from message coreum.dex.v1.QueryOrderBookOrdersResponse
 */
export class QueryOrderBookOrdersResponse extends Message<QueryOrderBookOrdersResponse> {
  /**
   * @generated from field: repeated coreum.dex.v1.Order orders = 1;
   */
  orders: Order[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryOrderBookOrdersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryOrderBookOrdersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orders", kind: "message", T: Order, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOrderBookOrdersResponse {
    return new QueryOrderBookOrdersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOrderBookOrdersResponse {
    return new QueryOrderBookOrdersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOrderBookOrdersResponse {
    return new QueryOrderBookOrdersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryOrderBookOrdersResponse | PlainMessage<QueryOrderBookOrdersResponse> | undefined, b: QueryOrderBookOrdersResponse | PlainMessage<QueryOrderBookOrdersResponse> | undefined): boolean {
    return proto3.util.equals(QueryOrderBookOrdersResponse, a, b);
  }
}

/**
 * QueryAccountDenomOrdersCountRequest defines the request type for the `AccountDenomOrdersCount` query.
 *
 * @generated from message coreum.dex.v1.QueryAccountDenomOrdersCountRequest
 */
export class QueryAccountDenomOrdersCountRequest extends Message<QueryAccountDenomOrdersCountRequest> {
  /**
   * @generated from field: string account = 1;
   */
  account = "";

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryAccountDenomOrdersCountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryAccountDenomOrdersCountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAccountDenomOrdersCountRequest {
    return new QueryAccountDenomOrdersCountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAccountDenomOrdersCountRequest {
    return new QueryAccountDenomOrdersCountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAccountDenomOrdersCountRequest {
    return new QueryAccountDenomOrdersCountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAccountDenomOrdersCountRequest | PlainMessage<QueryAccountDenomOrdersCountRequest> | undefined, b: QueryAccountDenomOrdersCountRequest | PlainMessage<QueryAccountDenomOrdersCountRequest> | undefined): boolean {
    return proto3.util.equals(QueryAccountDenomOrdersCountRequest, a, b);
  }
}

/**
 * QueryAccountDenomOrdersCountResponse defines the response type for the `AccountDenomOrdersCount` query.
 *
 * @generated from message coreum.dex.v1.QueryAccountDenomOrdersCountResponse
 */
export class QueryAccountDenomOrdersCountResponse extends Message<QueryAccountDenomOrdersCountResponse> {
  /**
   * @generated from field: uint64 count = 1;
   */
  count = protoInt64.zero;

  constructor(data?: PartialMessage<QueryAccountDenomOrdersCountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "coreum.dex.v1.QueryAccountDenomOrdersCountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAccountDenomOrdersCountResponse {
    return new QueryAccountDenomOrdersCountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAccountDenomOrdersCountResponse {
    return new QueryAccountDenomOrdersCountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAccountDenomOrdersCountResponse {
    return new QueryAccountDenomOrdersCountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAccountDenomOrdersCountResponse | PlainMessage<QueryAccountDenomOrdersCountResponse> | undefined, b: QueryAccountDenomOrdersCountResponse | PlainMessage<QueryAccountDenomOrdersCountResponse> | undefined): boolean {
    return proto3.util.equals(QueryAccountDenomOrdersCountResponse, a, b);
  }
}

